#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 6.11 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 78 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 150 0 150 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 175 0 0
0 -1 -1 2 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 100 0 0 0
0 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 148 0 211 0
0 0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 13 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 24 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 44 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 21 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 46 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 65 105 225 0
0 0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
0.0 12 -1 -1 -1 -1 -1 -1 0 0 1 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0.0 12 -1 -1 -1 -1 -1 -1 0 0 1 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1           0 9284 0 4 3 85
(
 #";; The first three lines of this file were inserted by DrRacket. The"
 #"y record metadata"
) 0 0 4 29 1 #"\n"
0 0 4 3 85
(
 #";; about the language level of this file in a form that our tools ca"
 #"n easily process."
) 0 0 4 29 1 #"\n"
0 0 4 3 87
(
 #"#reader(lib \"htdp-beginner-abbr-reader.ss\" \"lang\")((modname Brea"
 #"koutTheGame) (read-case"
) 0 0 4 3 259
(
 #"-sensitive #t) (teachpacks ((lib \"image.rkt\" \"teachpack\" \"2htdp"
 #"\") (lib \"universe.rkt\" \"teachpack\" \"2htdp\"))) (htdp-settings "
 #"#(#t constructor repeating-decimal #f #t none #f ((lib \"image.rkt\""
 #" \"teachpack\" \"2htdp\") (lib \"universe.rkt\" \"teachpack\" \"2htd"
 #"p\")) #f)))"
) 0 0 4 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 11 #"2htdp/image"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 14 #"2htdp/universe"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 9        2161 21           0 0           0 359 0 14 3 42
#"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
0 0 24 3 1 #" "
0 0 14 3 8 #"BREAKOUT"
0 0 24 3 1 #" "
0 0 14 3 41 #"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 3 #"HOW"
0 0 24 3 1 #" "
0 0 14 3 2 #"TO"
0 0 24 3 1 #" "
0 0 14 3 5 #"PLAY:"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 4 #"Move"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 6 #"paddle"
0 0 24 3 1 #" "
0 0 14 3 2 #"to"
0 0 24 3 1 #" "
0 0 14 3 4 #"keep"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 4 #"ball"
0 0 24 3 1 #" "
0 0 14 3 9 #"bouncing."
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 3 #"Don"
0 0 21 3 1 #"'"
0 0 14 3 1 #"t"
0 0 24 3 1 #" "
0 0 15 3 3 #"let"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 4 #"ball"
0 0 24 3 1 #" "
0 0 14 3 3 #"hit"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 5 #"floor"
0 0 24 3 2 #" ("
0 0 14 3 3 #"you"
0 0 24 3 1 #" "
0 0 14 3 4 #"have"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 14 3 5 #"lives"
0 0 24 3 1 #" "
0 0 14 3 3 #"and"
0 0 24 3 1 #" "
0 0 14 3 6 #"losing"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 4 #"life"
0 0 24 3 1 #" "
0 0 14 3 5 #"costs"
0 0 24 3 1 #" "
0 0 14 3 6 #"points"
0 0 24 3 1 #")"
0 0 14 3 1 #"!"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 4 #"When"
0 0 24 3 1 #" "
0 0 14 3 3 #"you"
0 0 24 3 1 #" "
0 0 14 3 3 #"hit"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 5 #"brick"
0 0 28 3 1 #","
0 0 24 3 1 #" "
0 0 14 3 2 #"it"
0 0 24 3 1 #" "
0 0 14 3 4 #"will"
0 0 24 3 1 #" "
0 0 14 3 4 #"take"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 5 #"point"
0 0 24 3 1 #" "
0 0 14 3 2 #"of"
0 0 24 3 1 #" "
0 0 14 3 7 #"damage."
0 0 24 3 1 #" "
0 0 14 3 6 #"Bricks"
0 0 24 3 1 #" "
0 0 14 3 4 #"have"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 14 3 6 #"points"
0 0 24 3 1 #" "
0 0 14 3 2 #"of"
0 0 24 3 1 #" "
0 0 14 3 6 #"health"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 4 #"Each"
0 0 24 3 1 #" "
0 0 14 3 3 #"hit"
0 0 24 3 1 #" "
0 0 14 3 2 #"of"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 5 #"brick"
0 0 24 3 1 #" "
0 0 14 3 5 #"earns"
0 0 24 3 1 #" "
0 0 14 3 3 #"you"
0 0 24 3 1 #" "
0 0 14 3 7 #"points."
0 0 24 3 1 #" "
0 0 14 3 3 #"The"
0 0 24 3 1 #" "
0 0 14 3 4 #"more"
0 0 24 3 1 #" "
0 0 14 3 3 #"one"
0 0 24 3 1 #" "
0 0 14 3 5 #"brick"
0 0 24 3 1 #" "
0 0 14 3 2 #"is"
0 0 24 3 1 #" "
0 0 14 3 3 #"hit"
0 0 28 3 1 #","
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 4 #"more"
0 0 24 3 1 #" "
0 0 14 3 6 #"points"
0 0 24 3 1 #" "
0 0 14 3 2 #"it"
0 0 24 3 1 #" "
0 0 14 3 6 #"gives."
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 3 #"Try"
0 0 24 3 1 #" "
0 0 14 3 2 #"to"
0 0 24 3 1 #" "
0 0 14 3 3 #"get"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 4 #"most"
0 0 24 3 1 #" "
0 0 14 3 6 #"amount"
0 0 24 3 1 #" "
0 0 14 3 2 #"of"
0 0 24 3 1 #" "
0 0 14 3 6 #"points"
0 0 24 3 1 #" "
0 0 14 3 7 #"without"
0 0 24 3 1 #" "
0 0 14 3 6 #"dying!"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 2 #"TO"
0 0 24 3 1 #" "
0 0 14 3 6 #"START:"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 4 #"call"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 2 #" ("
0 0 14 3 8 #"breakout"
0 0 24 3 2 #") "
0 0 14 3 8 #"function"
0 0 28 3 1 #","
0 0 24 3 1 #" "
0 0 14 3 7 #"sending"
0 0 24 3 1 #" "
0 0 14 3 2 #"it"
0 0 24 3 1 #" "
0 0 14 3 9 #"different"
0 0 24 3 1 #" "
0 0 14 3 4 #"size"
0 0 24 3 1 #" "
0 0 14 3 6 #"worlds"
0 0 24 3 2 #" ("
0 0 14 3 3 #"you"
0 0 24 3 1 #" "
0 0 14 3 3 #"can"
0 0 24 3 1 #" "
0 0 14 3 6 #"choose"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 6 #"amount"
0 0 24 29 1 #"\n"
0 0 24 3 71
(
 #"                                                                    "
 #"   "
) 0 0 14 3 2 #"of"
0 0 24 3 1 #" "
0 0 14 3 4 #"rows"
0 0 24 3 1 #" "
0 0 14 3 1 #"&"
0 0 24 3 1 #" "
0 0 14 3 7 #"columns"
0 0 24 3 1 #")"
0 0 28 3 1 #"."
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 3 #"You"
0 0 24 3 1 #" "
0 0 14 3 3 #"can"
0 0 24 3 1 #" "
0 0 15 3 2 #"do"
0 0 24 3 1 #" "
0 0 14 3 4 #"this"
0 0 24 3 1 #" "
0 0 14 3 2 #"in"
0 0 24 3 1 #" "
0 0 14 3 2 #"on"
0 0 24 3 1 #" "
0 0 14 3 2 #"of"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 9 #"following"
0 0 24 3 1 #" "
0 0 14 3 5 #"ways:"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 8 #"breakout"
0 0 24 3 1 #" "
0 0 14 3 8 #"WORLD1x1"
0 0 24 3 2 #") "
0 0 17 3 31 #";;for the minimalists out there"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 8 #"breakout"
0 0 24 3 1 #" "
0 0 14 3 8 #"WORLD2x2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 8 #"breakout"
0 0 24 3 1 #" "
0 0 14 3 8 #"WORLD2x3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 8 #"breakout"
0 0 24 3 1 #" "
0 0 14 3 8 #"WORLD3x3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 8 #"breakout"
0 0 24 3 1 #" "
0 0 14 3 8 #"WORLD3x5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 8 #"breakout"
0 0 24 3 1 #" "
0 0 14 3 8 #"WORLD3x6"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 8 #"breakout"
0 0 24 3 1 #" "
0 0 14 3 8 #"WORLD5x5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 8 #"breakout"
0 0 24 3 1 #" "
0 0 14 3 8 #"WORLD5x6"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 8 #"breakout"
0 0 24 3 1 #" "
0 0 14 3 8 #"WORLD6x6"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 5 #"After"
0 0 24 3 1 #" "
0 0 14 3 3 #"you"
0 0 24 3 1 #" "
0 0 14 3 4 #"call"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 8 #"function"
0 0 28 3 1 #","
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 4 #"game"
0 0 24 3 1 #" "
0 0 14 3 4 #"will"
0 0 24 3 1 #" "
0 0 14 3 7 #"launch."
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 3 #"Hit"
0 0 24 3 1 #" "
0 0 14 3 5 #"space"
0 0 24 3 1 #" "
0 0 14 3 2 #"to"
0 0 24 3 1 #" "
0 0 14 3 6 #"launch"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 4 #"ball"
0 0 28 3 1 #","
0 0 24 3 1 #" "
0 0 14 3 3 #"and"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 5 #"arrow"
0 0 24 3 1 #" "
0 0 14 3 4 #"keys"
0 0 24 3 1 #" "
0 0 14 3 2 #"to"
0 0 24 3 1 #" "
0 0 14 3 4 #"move"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 6 #"paddle"
0           0 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 28 #"#|--- DATA DEFINITIONS ---|#"
0 0 24 29 1 #"\n"
0 0 17 3 53 #";;A Ball is a (make-ball Number Number Number Number)"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 4 #"ball"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 2 #"vx"
0 0 24 3 1 #" "
0 0 14 3 2 #"vy"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 53 #"; - where the first Number is the ball's x-coordinate"
0 0 24 29 1 #"\n"
0 0 17 3 48 #"; - the second Number is the ball's y-coordinate"
0 0 24 29 1 #"\n"
0 0 17 3 45 #"; - the third Number is the ball's x-velocity"
0 0 24 29 1 #"\n"
0 0 17 3 46 #"; - the fourth Number is the ball's y-velocity"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 59
#";;A Brick-Posn (or simply Brick) is a (make-bp Posn Number)"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 2 #"bp"
0 0 24 3 2 #" ("
0 0 14 3 4 #"posn"
0 0 24 3 1 #" "
0 0 14 3 6 #"health"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 52 #"; - where posn is the position of the brick's center"
0 0 24 29 1 #"\n"
0 0 17 3 61
#"; - health the amount of hits the brick at this posn can take"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";;A LoBr is one of the following:"
0 0 24 29 1 #"\n"
0 0 17 3 7 #"; - '()"
0 0 24 29 1 #"\n"
0 0 17 3 26 #"; - (cons Brick-Posn LoBr)"
0 0 24 29 1 #"\n"
0 0 17 3 66
#"; - interp, a list of Brick positions, representing the game field"
0 0 24 29 1 #"\n"
0 0 17 3 44 #";           (could also be seen as an array)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 80
(
 #";;A World is a (make-world Ball LoBr Number Number Number Boolean Nu"
 #"mber Number)"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 2 #" ("
0 0 14 3 4 #"ball"
0 0 24 3 1 #" "
0 0 14 3 6 #"bricks"
0 0 24 3 1 #" "
0 0 14 3 4 #"padx"
0 0 24 3 1 #" "
0 0 14 3 4 #"rows"
0 0 24 3 1 #" "
0 0 14 3 4 #"cols"
0 0 24 3 1 #" "
0 0 14 3 8 #"launched"
0 0 24 3 1 #" "
0 0 14 3 5 #"lives"
0 0 24 3 1 #" "
0 0 14 3 5 #"score"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 35 #"; - where the Ball is the game ball"
0 0 24 29 1 #"\n"
0 0 17 3 46 #"; - the LoBr is the List of bricks in the game"
0 0 24 29 1 #"\n"
0 0 17 3 47 #"; - the first Number is the paddle's x position"
0 0 24 29 1 #"\n"
0 0 17 3 53 #"; - the second Number is the number of Rows of bricks"
0 0 24 29 1 #"\n"
0 0 17 3 55 #"; - the third Number is the number of columns of bricks"
0 0 24 29 1 #"\n"
0 0 17 3 70
(
 #"; - the last Boolean answers the question: has the ball been launche"
 #"d?"
) 0 0 24 29 1 #"\n"
0 0 17 3 57 #"; - the fourth Number is the number of lives the user has"
0 0 24 29 1 #"\n"
0 0 17 3 46 #"; - the fifth Number is the score the user has"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 21 #"#|=== CONSTANTS ===|#"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"BALL-COLOR"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"BALL-RADIUS"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"BALL-SPEED"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"BALL-IMG"
0 0 24 3 2 #" ("
0 0 14 3 6 #"circle"
0 0 24 3 1 #" "
0 0 14 3 11 #"BALL-RADIUS"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 14 3 10 #"BALL-COLOR"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"BRICK-WIDTH"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"BRICK-HEIGHT"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 13 #"BRICK-PADDING"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"BRICK-VALUE"
0 0 24 3 1 #" "
0 0 21 3 2 #"12"
0 0 24 3 2 #") "
0 0 17 3 40 #";;divisible by 3,2, and 1 (brick-values)"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"BR-HEALTH"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"BRICK-3"
0 0 24 3 2 #" ("
0 0 14 3 5 #"frame"
0 0 24 3 2 #" ("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 14 3 11 #"BRICK-WIDTH"
0 0 24 3 1 #" "
0 0 14 3 12 #"BRICK-HEIGHT"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 9 #"\"magenta\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"BRICK-2"
0 0 24 3 2 #" ("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 14 3 11 #"BRICK-WIDTH"
0 0 24 3 1 #" "
0 0 14 3 12 #"BRICK-HEIGHT"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"BRICK-1"
0 0 24 3 2 #" ("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 14 3 11 #"BRICK-WIDTH"
0 0 24 3 1 #" "
0 0 14 3 12 #"BRICK-HEIGHT"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"cyan\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"BRICK-0"
0 0 24 3 2 #" ("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 14 3 11 #"BRICK-WIDTH"
0 0 24 3 1 #" "
0 0 14 3 12 #"BRICK-HEIGHT"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 11 #"transparent"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"WIDTH"
0 0 24 3 1 #" "
0 0 21 3 3 #"220"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"HEIGHT"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"PADDLE-COLOR"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"red"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"PADDLE-WIDTH"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 13 #"PADDLE-HEIGHT"
0 0 24 3 1 #" "
0 0 14 3 12 #"BRICK-HEIGHT"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"PADDLE-Y"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 6 #"HEIGHT"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 13 #"PADDLE-HEIGHT"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"PADDLE-SPEED"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"PADDLE-IMG"
0 0 24 3 2 #" ("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 14 3 12 #"PADDLE-WIDTH"
0 0 24 3 1 #" "
0 0 14 3 13 #"PADDLE-HEIGHT"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 14 3 12 #"PADDLE-COLOR"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"INITIAL-BALL"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-ball"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 5 #"WIDTH"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 6 #"HEIGHT"
0 0 24 3 1 #" "
0 0 14 3 13 #"PADDLE-HEIGHT"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 11 #"BALL-RADIUS"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                                "
0 0 14 3 10 #"BALL-SPEED"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"MIDDLE-BALL"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-ball"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 2 #"-4"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 21 #"#|=== FUNCTIONS ===|#"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 38 #"#| --- Ball Launching Functions --- |#"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";; speed: Ball -> Number"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";; compute the speed of the ball"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 5 #"speed"
0 0 24 3 1 #" "
0 0 14 3 12 #"INITIAL-BALL"
0 0 24 3 2 #") "
0 0 21 3 1 #"4"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 5 #"speed"
0 0 24 3 1 #" "
0 0 14 3 4 #"ball"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 4 #"sqrt"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 3 #"sqr"
0 0 24 3 2 #" ("
0 0 14 3 7 #"ball-vx"
0 0 24 3 1 #" "
0 0 14 3 4 #"ball"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 3 #"sqr"
0 0 24 3 2 #" ("
0 0 14 3 7 #"ball-vy"
0 0 24 3 1 #" "
0 0 14 3 4 #"ball"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";;new-x-velocity : Ball Number -> Number"
0 0 24 29 1 #"\n"
0 0 17 3 89
(
 #";;Produces the new x velocity of a ball that launched off a paddle w"
 #"ith this x-coordinate"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"new-x-velocity"
0 0 24 3 1 #" "
0 0 14 3 4 #"ball"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 14 #"inexact->exact"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 3 #".95"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 1 #"/"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 6 #"ball-x"
0 0 24 3 1 #" "
0 0 14 3 4 #"ball"
0 0 24 3 2 #") "
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 12 #"PADDLE-WIDTH"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 14 3 11 #"BALL-RADIUS"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 5 #"speed"
0 0 24 3 1 #" "
0 0 14 3 4 #"ball"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"new-x-velocity"
0 0 24 3 1 #" "
0 0 14 3 12 #"INITIAL-BALL"
0 0 24 3 1 #" "
0 0 21 3 3 #"110"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"new-x-velocity"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-ball"
0 0 24 3 1 #" "
0 0 21 3 2 #"60"
0 0 24 3 1 #" "
0 0 21 3 3 #"190"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #") "
0 0 21 3 3 #"100"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 14 #"inexact->exact"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 4 #"4.75"
0 0 24 3 1 #" "
0 0 21 3 6 #"-40/26"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";;new-y-velocity : Ball Number -> Number"
0 0 24 29 1 #"\n"
0 0 17 3 89
(
 #";;Produces the new y velocity of a ball that launched off a paddle w"
 #"ith this x-coordinate"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"new-y-velocity"
0 0 24 3 1 #" "
0 0 14 3 4 #"ball"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 14 #"inexact->exact"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 4 #"sqrt"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 3 #"sqr"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 3 #".95"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 1 #"/"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 6 #"ball-x"
0 0 24 3 1 #" "
0 0 14 3 4 #"ball"
0 0 24 3 2 #") "
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 12 #"PADDLE-WIDTH"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 14 3 11 #"BALL-RADIUS"
0 0 24 3 7 #")))))))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 5 #"speed"
0 0 24 3 1 #" "
0 0 14 3 4 #"ball"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"new-y-velocity"
0 0 24 3 1 #" "
0 0 14 3 12 #"INITIAL-BALL"
0 0 24 3 1 #" "
0 0 21 3 3 #"110"
0 0 24 3 2 #") "
0 0 21 3 2 #"-4"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"new-y-velocity"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-ball"
0 0 24 3 1 #" "
0 0 21 3 2 #"60"
0 0 24 3 1 #" "
0 0 21 3 3 #"190"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #") "
0 0 21 3 3 #"100"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 14 #"inexact->exact"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 2 #"-5"
0 0 24 3 2 #" ("
0 0 14 3 4 #"sqrt"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 3 #"sqr"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 3 #".95"
0 0 24 3 1 #" "
0 0 21 3 6 #"-40/26"
0 0 24 3 7 #")))))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";;launch-ball : Ball Number -> Ball"
0 0 24 29 1 #"\n"
0 0 17 3 47 #";;Launch ball off paddle with this x-coordinate"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"launch-ball"
0 0 24 3 1 #" "
0 0 14 3 4 #"ball"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 9 #"make-ball"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 6 #"ball-x"
0 0 24 3 1 #" "
0 0 14 3 4 #"ball"
0 0 24 3 3 #") ("
0 0 14 3 14 #"new-x-velocity"
0 0 24 3 1 #" "
0 0 14 3 4 #"ball"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 6 #"ball-y"
0 0 24 3 1 #" "
0 0 14 3 4 #"ball"
0 0 24 3 3 #") ("
0 0 14 3 14 #"new-y-velocity"
0 0 24 3 1 #" "
0 0 14 3 4 #"ball"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 14 #"new-x-velocity"
0 0 24 3 1 #" "
0 0 14 3 4 #"ball"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 14 #"new-y-velocity"
0 0 24 3 1 #" "
0 0 14 3 4 #"ball"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"launch-ball"
0 0 24 3 1 #" "
0 0 14 3 12 #"INITIAL-BALL"
0 0 24 3 1 #" "
0 0 21 3 3 #"110"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 9 #"make-ball"
0 0 24 3 1 #" "
0 0 21 3 3 #"110"
0 0 24 3 1 #" "
0 0 21 3 3 #"183"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 2 #"-4"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"launch-ball"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-ball"
0 0 24 3 1 #" "
0 0 21 3 2 #"60"
0 0 24 3 1 #" "
0 0 21 3 3 #"190"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #") "
0 0 21 3 3 #"100"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 9 #"make-ball"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 2 #"60"
0 0 24 3 2 #" ("
0 0 14 3 14 #"inexact->exact"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 4 #"4.75"
0 0 24 3 1 #" "
0 0 21 3 6 #"-40/26"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 3 #"190"
0 0 24 3 2 #" ("
0 0 14 3 14 #"inexact->exact"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 2 #"-5"
0 0 24 3 2 #" ("
0 0 14 3 4 #"sqrt"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 3 #"sqr"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 3 #".95"
0 0 24 3 1 #" "
0 0 21 3 6 #"-40/26"
0 0 24 3 7 #")))))))"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 14 #"inexact->exact"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 4 #"4.75"
0 0 24 3 1 #" "
0 0 21 3 6 #"-40/26"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 14 #"inexact->exact"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 2 #"-5"
0 0 24 3 2 #" ("
0 0 14 3 4 #"sqrt"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 3 #"sqr"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 3 #".95"
0 0 24 3 1 #" "
0 0 21 3 6 #"-40/26"
0 0 24 3 8 #"))))))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 51 #"#| --- BRICK INITALIZING/RENDERING FUNCTIONS --- |#"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";;get-img-x: PosInteger -> PosNumber"
0 0 24 29 1 #"\n"
0 0 17 3 66
#";;converts array-column position of a brick to an image-x position"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";;**helper for make-brick"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"get-img-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 13 #"BRICK-PADDING"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.5"
0 0 24 3 2 #") "
0 0 14 3 11 #"BRICK-WIDTH"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"get-img-x"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 21 3 2 #"20"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"get-img-x"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 21 3 2 #"55"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"get-img-x"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #") "
0 0 21 3 2 #"90"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"get-img-x"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #") "
0 0 21 3 3 #"125"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";;get-img-y: PosInteger -> PosNumber"
0 0 24 29 1 #"\n"
0 0 17 3 63
#";;converts array-row position of a brick to an image-y position"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";;**helper for make-brick"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"get-img-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 13 #"BRICK-PADDING"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.5"
0 0 24 3 2 #") "
0 0 14 3 12 #"BRICK-HEIGHT"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"get-img-y"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 21 3 2 #"10"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"get-img-y"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 21 3 2 #"25"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"get-img-y"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #") "
0 0 21 3 2 #"40"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"get-img-y"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #") "
0 0 21 3 2 #"55"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 54 #";;make-brick: PosIntger PosInteger [0,3] -> Brick-Posn"
0 0 24 29 1 #"\n"
0 0 17 3 85
(
 #";;creates a Brick-Posn at a given x and y array row & column w/ the "
 #"given health[0,3]"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 6 #"health"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 9 #"get-img-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 9 #"get-img-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 14 3 6 #"health"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #") ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #") ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"55"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"90"
0 0 24 3 1 #" "
0 0 21 3 2 #"70"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"230"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 42 #";;make-lobr: PosInteger PosInteger -> LoBr"
0 0 24 29 1 #"\n"
0 0 17 3 49 #";;LoBr created where each Brick-Posn is sitauated"
0 0 24 29 1 #"\n"
0 0 17 3 58
#";;in an r x c (the given ints) array and is at full health"
0 0 24 29 1 #"\n"
0 0 17 3 81
(
 #";; could have used (range Number Number Number) but wasn't sure if i"
 #"t was allowed"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-lobr"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 5 #"zero?"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 3 #"()]"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 6 #"append"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-lobr-row"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 9 #"make-lobr"
0 0 24 3 2 #" ("
0 0 14 3 4 #"sub1"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #")  "
0 0 14 3 1 #"c"
0 0 24 3 5 #"))]))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-lobr"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"55"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"55"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-lobr"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 3 #"())"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";;make-lobr-row: PosInteger -> LoBr"
0 0 24 29 1 #"\n"
0 0 17 3 85
(
 #";;LoBr created where each Brick-Posn is situated in a given row and "
 #"is at full health"
) 0 0 24 29 1 #"\n"
0 0 17 3 31 #";;**helper method for make-lobr"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-lobr-row"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 5 #"zero?"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 3 #"()]"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 1 #" "
0 0 14 3 9 #"BR-HEALTH"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 13 #"make-lobr-row"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 2 #" ("
0 0 14 3 4 #"sub1"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 6 #")))]))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-lobr-row"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                        ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                        ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-lobr-row"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 3 #"())"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";;draw-bricks: LoBr Scene -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 78
(
 #";;Draws bricks at the given locations (posns in the list) onto the g"
 #"iven scene"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"draw-bricks"
0 0 24 3 1 #" "
0 0 14 3 5 #"mlobr"
0 0 24 3 1 #" "
0 0 14 3 5 #"frame"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 5 #"mlobr"
0 0 24 3 2 #") "
0 0 14 3 5 #"frame"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 5 #"cons?"
0 0 24 3 1 #" "
0 0 14 3 5 #"mlobr"
0 0 24 3 3 #") ("
0 0 14 3 11 #"place-image"
0 0 24 3 2 #" ("
0 0 14 3 15 #"get-brick-image"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"mlobr"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 6 #"posn-x"
0 0 24 3 2 #" ("
0 0 14 3 7 #"bp-posn"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"mlobr"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 6 #"posn-y"
0 0 24 3 2 #" ("
0 0 14 3 7 #"bp-posn"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"mlobr"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 11 #"draw-bricks"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 5 #"mlobr"
0 0 24 3 2 #") "
0 0 14 3 5 #"frame"
0 0 24 3 5 #"))]))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"draw-bricks"
0 0 24 3 1 #" "
0 0 14 3 7 #"LOBR5x5"
0 0 24 3 1 #" "
0 0 14 3 8 #"FRAME5x5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 6           4 21 20132
(
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 220 0) #(struct:p"
 #"oint 220 200) #(struct:point 0 200)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 145 65 #(struct:overlay #(struct:crop (#"
 #"(struct:point 0 0) #(struct:point 30 0) #(struct:point 30 10) #(stru"
 #"ct:point 0 10)) #(struct:translate 0 0 #(struct:translate 0 0 #(stru"
 #"ct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point"
 #" 0 0 30 0 0 0) #(struct:pulled-point 0 0 30 10 0 0) #(struct:pulled-"
 #"point 0 0 0 10 0 0)) outline #(struct:pen \"black\" 2 solid round ro"
 #"und))))) #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-po"
 #"int 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(struct:pulled"
 #"-point 0 0 30 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) 255 \"mag"
 #"enta\")))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0)"
 #" #(struct:point 220 0) #(struct:point 220 200) #(struct:point 0 200)"
 #") #(struct:translate 0 0 #(struct:overlay #(struct:translate 145 50 "
 #"#(struct:overlay #(struct:crop (#(struct:point 0 0) #(struct:point 3"
 #"0 0) #(struct:point 30 10) #(struct:point 0 10)) #(struct:translate "
 #"0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0"
 #" 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(struct:pulled-poin"
 #"t 0 0 30 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) outline #(stru"
 #"ct:pen \"black\" 2 solid round round))))) #(struct:translate 0 0 #(s"
 #"truct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-po"
 #"int 0 0 30 0 0 0) #(struct:pulled-point 0 0 30 10 0 0) #(struct:pull"
 #"ed-point 0 0 0 10 0 0)) 255 \"magenta\")))) #(struct:translate 0 0 #"
 #"(struct:crop (#(struct:point 0 0) #(struct:point 220 0) #(struct:poi"
 #"nt 220 200) #(struct:point 0 200)) #(struct:translate 0 0 #(struct:o"
 #"verlay #(struct:translate 145 35 #(struct:overlay #(struct:crop (#(s"
 #"truct:point 0 0) #(struct:point 30 0) #(struct:point 30 10) #(struct"
 #":point 0 10)) #(struct:translate 0 0 #(struct:translate 0 0 #(struct"
 #":polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0"
 #" 0 30 0 0 0) #(struct:pulled-point 0 0 30 10 0 0) #(struct:pulled-po"
 #"int 0 0 0 10 0 0)) outline #(struct:pen \"black\" 2 solid round roun"
 #"d))))) #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-poin"
 #"t 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(struct:pulled-p"
 #"oint 0 0 30 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) 255 \"magen"
 #"ta\")))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #"
 #"(struct:point 220 0) #(struct:point 220 200) #(struct:point 0 200)) "
 #"#(struct:translate 0 0 #(struct:overlay #(struct:translate 145 20 #("
 #"struct:overlay #(struct:crop (#(struct:point 0 0) #(struct:point 30 "
 #"0) #(struct:point 30 10) #(struct:point 0 10)) #(struct:translate 0 "
 #"0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0"
 #" 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(struct:pulled-point "
 #"0 0 30 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) outline #(struct"
 #":pen \"black\" 2 solid round round))))) #(struct:translate 0 0 #(str"
 #"uct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-poin"
 #"t 0 0 30 0 0 0) #(struct:pulled-point 0 0 30 10 0 0) #(struct:pulled"
 #"-point 0 0 0 10 0 0)) 255 \"magenta\")))) #(struct:translate 0 0 #(s"
 #"truct:crop (#(struct:point 0 0) #(struct:point 220 0) #(struct:point"
 #" 220 200) #(struct:point 0 200)) #(struct:translate 0 0 #(struct:ove"
 #"rlay #(struct:translate 145 5 #(struct:overlay #(struct:crop (#(stru"
 #"ct:point 0 0) #(struct:point 30 0) #(struct:point 30 10) #(struct:po"
 #"int 0 10)) #(struct:translate 0 0 #(struct:translate 0 0 #(struct:po"
 #"lygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 "
 #"30 0 0 0) #(struct:pulled-point 0 0 30 10 0 0) #(struct:pulled-point"
 #" 0 0 0 10 0 0)) outline #(struct:pen \"black\" 2 solid round round))"
 #"))) #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0"
 #" 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(struct:pulled-poin"
 #"t 0 0 30 10 0 0) #(struct:pulled-"
 #"point 0 0 0 10 0 0)) 255 \"magenta\")))) #(struct:translate 0 0 #(st"
 #"ruct:crop (#(struct:point 0 0) #(struct:point 220 0) #(struct:point "
 #"220 200) #(struct:point 0 200)) #(struct:translate 0 0 #(struct:over"
 #"lay #(struct:translate 110 65 #(struct:overlay #(struct:crop (#(stru"
 #"ct:point 0 0) #(struct:point 30 0) #(struct:point 30 10) #(struct:po"
 #"int 0 10)) #(struct:translate 0 0 #(struct:translate 0 0 #(struct:po"
 #"lygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 "
 #"30 0 0 0) #(struct:pulled-point 0 0 30 10 0 0) #(struct:pulled-point"
 #" 0 0 0 10 0 0)) outline #(struct:pen \"black\" 2 solid round round))"
 #"))) #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0"
 #" 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(struct:pulled-poin"
 #"t 0 0 30 10 0 0) #(struct:pulled-"
 #"point 0 0 0 10 0 0)) 255 \"magenta\")))) #(struct:translate 0 0 #(st"
 #"ruct:crop (#(struct:point 0 0) #(struct:point 220 0) #(struct:point "
 #"220 200) #(struct:point 0 200)) #(struct:translate 0 0 #(struct:over"
 #"lay #(struct:translate 110 50 #(struct:overlay #(struct:crop (#(stru"
 #"ct:point 0 0) #(struct:point 30 0) #(struct:point 30 10) #(struct:po"
 #"int 0 10)) #(struct:translate 0 0 #(struct:translate 0 0 #(struct:po"
 #"lygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 "
 #"30 0 0 0) #(struct:pulled-point 0 0 30 10 0 0) #(struct:pulled-point"
 #" 0 0 0 10 0 0)) outline #(struct:pen \"black\" 2 solid round round))"
 #"))) #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0"
 #" 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(struct:pulled-poin"
 #"t 0 0 30 10 0 0) #(struct:pulled-"
 #"point 0 0 0 10 0 0)) 255 \"magenta\")))) #(struct:translate 0 0 #(st"
 #"ruct:crop (#(struct:point 0 0) #(struct:point 220 0) #(struct:point "
 #"220 200) #(struct:point 0 200)) #(struct:translate 0 0 #(struct:over"
 #"lay #(struct:translate 110 35 #(struct:overlay #(struct:crop (#(stru"
 #"ct:point 0 0) #(struct:point 30 0) #(struct:point 30 10) #(struct:po"
 #"int 0 10)) #(struct:translate 0 0 #(struct:translate 0 0 #(struct:po"
 #"lygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 "
 #"30 0 0 0) #(struct:pulled-point 0 0 30 10 0 0) #(struct:pulled-point"
 #" 0 0 0 10 0 0)) outline #(struct:pen \"black\" 2 solid round round))"
 #"))) #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0"
 #" 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(struct:pulled-poin"
 #"t 0 0 30 10 0 0) #(struct:pulled-"
 #"point 0 0 0 10 0 0)) 255 \"magenta\")))) #(struct:translate 0 0 #(st"
 #"ruct:crop (#(struct:point 0 0) #(struct:point 220 0) #(struct:point "
 #"220 200) #(struct:point 0 200)) #(struct:translate 0 0 #(struct:over"
 #"lay #(struct:translate 110 20 #(struct:overlay #(struct:crop (#(stru"
 #"ct:point 0 0) #(struct:point 30 0) #(struct:point 30 10) #(struct:po"
 #"int 0 10)) #(struct:translate 0 0 #(struct:translate 0 0 #(struct:po"
 #"lygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 "
 #"30 0 0 0) #(struct:pulled-point 0 0 30 10 0 0) #(struct:pulled-point"
 #" 0 0 0 10 0 0)) outline #(struct:pen \"black\" 2 solid round round))"
 #"))) #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0"
 #" 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(struct:pulled-poin"
 #"t 0 0 30 10 0 0) #(struct:pulled-"
 #"point 0 0 0 10 0 0)) 255 \"magenta\")))) #(struct:translate 0 0 #(st"
 #"ruct:crop (#(struct:point 0 0) #(struct:point 220 0) #(struct:point "
 #"220 200) #(struct:point 0 200)) #(struct:translate 0 0 #(struct:over"
 #"lay #(struct:translate 110 5 #(struct:overlay #(struct:crop (#(struc"
 #"t:point 0 0) #(struct:point 30 0) #(struct:point 30 10) #(struct:poi"
 #"nt 0 10)) #(struct:translate 0 0 #(struct:translate 0 0 #(struct:pol"
 #"ygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 3"
 #"0 0 0 0) #(struct:pulled-point 0 0 30 10 0 0) #(struct:pulled-point "
 #"0 0 0 10 0 0)) outline #(struct:pen \"black\" 2 solid round round)))"
 #")) #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 "
 #"0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(struct:pulled-point"
 #" 0 0 30 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) 255 \"magenta\""
 #")))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(str"
 #"uct:point 220 0) #(struct:point 220 200) #(struct:point 0 200)) #(st"
 #"ruct:translate 0 0 #(struct:overlay #(struct:translate 75 65 #(struc"
 #"t:overlay #(struct:crop (#(struct:point 0 0) #(struct:point 30 0) #("
 #"struct:point 30 10) #(struct:point 0 10)) #(struct:translate 0 0 #(s"
 #"truct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 "
 #"0 0) #(struct:pulled-point 0 0 30 0 0 0) #(struct:pulled-point 0 0 3"
 #"0 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) outline #(struct:pen "
 #"\"black\" 2 solid round round))))) #(struct:translate 0 0 #(struct:p"
 #"olygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0"
 #" 30 0 0 0) #(struct:pulled-point 0 0 30 10 0 0) #(struct:pulled-poin"
 #"t 0 0 0 10 0 0)) 255 \"magenta\")))) #(struct:translate 0 0 #(struct"
 #":crop (#(struct:point 0 0) #(struct:point 220 0) #(struct:point 220 "
 #"200) #(struct:point 0 200)) #(struct:translate 0 0 #(struct:overlay "
 #"#(struct:translate 75 50 #(struct:overlay #(struct:crop (#(struct:po"
 #"int 0 0) #(struct:point 30 0) #(struct:point 30 10) #(struct:point 0"
 #" 10)) #(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon"
 #" (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 "
 #"0 0) #(struct:pulled-point 0 0 30 10 0 0) #(struct:pulled-point 0 0 "
 #"0 10 0 0)) outline #(struct:pen \"black\" 2 solid round round))))) #"
 #"(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 "
 #"0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(struct:pulled-point 0 0"
 #" 30 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) 255 \"magenta\"))))"
 #" #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:"
 #"point 220 0) #(struct:point 220 200) #(struct:point 0 200)) #(struct"
 #":translate 0 0 #(struct:overlay #(struct:translate 75 35 #(struct:ov"
 #"erlay #(struct:crop (#(struct:point 0 0) #(struct:point 30 0) #(stru"
 #"ct:point 30 10) #(struct:point 0 10)) #(struct:translate 0 0 #(struc"
 #"t:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0)"
 #" #(struct:pulled-point 0 0 30 0 0 0) #(struct:pulled-point 0 0 30 10"
 #" 0 0) #(struct:pulled-point 0 0 0 10 0 0)) outline #(struct:pen \"bl"
 #"ack\" 2 solid round round))))) #(struct:translate 0 0 #(struct:polyg"
 #"on (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 "
 #"0 0 0) #(struct:pulled-point 0 0 30 10 0 0) #(struct:pulled-point 0 "
 #"0 0 10 0 0)) 255 \"magenta\")))) #(struct:translate 0 0 #(struct:cro"
 #"p (#(struct:point 0 0) #(struct:point 220 0) #(struct:point 220 200)"
 #" #(struct:point 0 200)) #(struct:translate 0 0 #(struct:overlay #(st"
 #"ruct:translate 75 20 #(struct:overlay #(struct:crop (#(struct:point "
 #"0 0) #(struct:point 30 0) #(struct:point 30 10) #(struct:point 0 10)"
 #") #(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#("
 #"struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0)"
 #" #(struct:pulled-point 0 0 30 10 0 0) #(struct:pulled-point 0 0 0 10"
 #" 0 0)) outline #(struct:pen \"black\" 2 solid round round))))) #(str"
 #"uct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 "
 #"0) #(struct:pulled-point 0 0 30 0 0 0) #(struct:pulled-point 0 0 30 "
 #"10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) 255 \"magenta\")))) #(s"
 #"truct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:poin"
 #"t 220 0) #(struct:point 220 200) #(struct:point 0 200)) #(struct:tra"
 #"nslate 0 0 #(struct:overlay #(struct:translate 75 5 #(struct:overlay"
 #" #(struct:crop (#(struct:point 0 0) #(struct:point 30 0) #(struct:po"
 #"int 30 10) #(struct:point 0 10)) #(struct:translate 0 0 #(struct:tra"
 #"nslate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(st"
 #"ruct:pulled-point 0 0 30 0 0 0) #(struct:pulled-point 0 0 30 10 0 0)"
 #" #(struct:pulled-point 0 0 0 10 0 0)) outline #(struct:pen \"black\""
 #" 2 solid round round))))) #(struct:translate 0 0 #(struct:polygon (#"
 #"(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0"
 #") #(struct:pulled-point 0 0 30 10 0 0) #(struct:pulled-point 0 0 0 1"
 #"0 0 0)) 255 \"magenta\")))) #(struct:translate 0 0 #(struct:crop (#("
 #"struct:point 0 0) #(struct:point 220 0) #(struct:point 220 200) #(st"
 #"ruct:point 0 200)) #(struct:translate 0 0 #(struct:overlay #(struct:"
 #"translate 40 65 #(struct:overlay #(struct:crop (#(struct:point 0 0) "
 #"#(struct:point 30 0) #(struct:point 30 10) #(struct:point 0 10)) #(s"
 #"truct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struc"
 #"t:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(st"
 #"ruct:pulled-point 0 0 30 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)"
 #") outline #(struct:pen \"black\" 2 solid round round))))) #(struct:t"
 #"ranslate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #("
 #"struct:pulled-point 0 0 30 0 0 0) #(struct:pulled-point 0 0 30 10 0 "
 #"0) #(struct:pulled-point 0 0 0 10 0 0)) 255 \"magenta\")))) #(struct"
 #":translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 220"
 #" 0) #(struct:point 220 200) #(struct:point 0 200)) #(struct:translat"
 #"e 0 0 #(struct:overlay #(struct:translate 40 50 #(struct:overlay #(s"
 #"truct:crop (#(struct:point 0 0) #(struct:point 30 0) #(struct:point "
 #"30 10) #(struct:point 0 10)) #(struct:translate 0 0 #(struct:transla"
 #"te 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct"
 #":pulled-point 0 0 30 0 0 0) #(struct:pulled-point 0 0 30 10 0 0) #(s"
 #"truct:pulled-point 0 0 0 10 0 0)) outline #(struct:pen \"black\" 2 s"
 #"olid round round))))) #(struct:translate 0 0 #(struct:polygon (#(str"
 #"uct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #("
 #"struct:pulled-point 0 0 30 10 0 0) #(struct:pulled-point 0 0 0 10 0 "
 #"0)) 255 \"magenta\")))) #(struct:translate 0 0 #(struct:crop (#(stru"
 #"ct:point 0 0) #(struct:point 220 0) #(struct:point 220 200) #(struct"
 #":point 0 200)) #(struct:translate 0 0 #(struct:overlay #(struct:tran"
 #"slate 40 35 #(struct:overlay #(struct:crop (#(struct:point 0 0) #(st"
 #"ruct:point 30 0) #(struct:point 30 10) #(struct:point 0 10)) #(struc"
 #"t:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pu"
 #"lled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(struct"
 #":pulled-point 0 0 30 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) ou"
 #"tline #(struct:pen \"black\" 2 solid round round))))) #(struct:trans"
 #"late 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(stru"
 #"ct:pulled-point 0 0 30 0 0 0) #(struct:pulled-point 0 0 30 10 0 0) #"
 #"(struct:pulled-point 0 0 0 10 0 0)) 255 \"magenta\")))) #(struct:tra"
 #"nslate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 220 0) "
 #"#(struct:point 220 200) #(struct:point 0 200)) #(struct:translate 0 "
 #"0 #(struct:overlay #(struct:translate 40 20 #(struct:overlay #(struc"
 #"t:crop (#(struct:point 0 0) #(struct:point 30 0) #(struct:point 30 1"
 #"0) #(struct:point 0 10)) #(struct:translate 0 0 #(struct:translate 0"
 #" 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pul"
 #"led-point 0 0 30 0 0 0) #(struct:pulled-point 0 0 30 10 0 0) #(struc"
 #"t:pulled-point 0 0 0 10 0 0)) outline #(struct:pen \"black\" 2 solid"
 #" round round))))) #(struct:translate 0 0 #(struct:polygon (#(struct:"
 #"pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(stru"
 #"ct:pulled-point 0 0 30 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) "
 #"255 \"magenta\")))) #(struct:translate 0 0 #(struct:crop (#(struct:p"
 #"oint 0 0) #(struct:point 220 0) #(struct:point 220 200) #(struct:poi"
 #"nt 0 200)) #(struct:translate 0 0 #(struct:overlay #(struct:translat"
 #"e 40 5 #(struct:overlay #(struct:crop (#(struct:point 0 0) #(struct:"
 #"point 30 0) #(struct:point 30 10) #(struct:point 0 10)) #(struct:tra"
 #"nslate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-"
 #"point 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(struct:pull"
 #"ed-point 0 0 30 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) outline"
 #" #(struct:pen \"black\" 2 solid round round))))) #(struct:translate "
 #"0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pu"
 #"lled-point 0 0 30 0 0 0) #(struct:pulled-point 0 0 30 10 0 0) #(stru"
 #"ct:pulled-point 0 0 0 10 0 0)) 255 \"magenta\")))) #(struct:translat"
 #"e 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 220 0) #(str"
 #"uct:point 220 200) #(struct:point 0 200)) #(struct:translate 0 0 #(s"
 #"truct:overlay #(struct:translate 5 65 #(struct:overlay #(struct:crop"
 #" (#(struct:point 0 0) #(struct:point 30 0) #(struct:point 30 10) #(s"
 #"truct:point 0 10)) #(struct:translate 0 0 #(struct:translate 0 0 #(s"
 #"truct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-po"
 #"int 0 0 30 0 0 0) #(struct:pulled-point 0 0 30 10 0 0) #(struct:pull"
 #"ed-point 0 0 0 10 0 0)) outline #(struct:pen \"black\" 2 solid round"
 #" round))))) #(struct:translate 0 0 #(struct:polygon (#(struct:pulled"
 #"-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(struct:pul"
 #"led-point 0 0 30 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) 255 \""
 #"magenta\")))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0"
 #" 0) #(struct:point 220 0) #(struct:point 220 200) #(struct:point 0 2"
 #"00)) #(struct:translate 0 0 #(struct:overlay #(struct:translate 5 50"
 #" #(struct:overlay #(struct:crop (#(struct:point 0 0) #(struct:point "
 #"30 0) #(struct:point 30 10) #(struct:point 0 10)) #(struct:translate"
 #" 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point "
 #"0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(struct:pulled-poi"
 #"nt 0 0 30 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) outline #(str"
 #"uct:pen \"black\" 2 solid round round))))) #(struct:translate 0 0 #("
 #"struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-p"
 #"oint 0 0 30 0 0 0) #(struct:pulled-point 0 0 30 10 0 0) #(struct:pul"
 #"led-point 0 0 0 10 0 0)) 255 \"magenta\")))) #(struct:translate 0 0 "
 #"#(struct:crop (#(struct:point 0 0) #(struct:point 220 0) #(struct:po"
 #"int 220 200) #(struct:point 0 200)) #(struct:translate 0 0 #(struct:"
 #"overlay #(struct:translate 5 35 #(struct:overlay #(struct:crop (#(st"
 #"ruct:point 0 0) #(struct:point 30 0) #(struct:point 30 10) #(struct:"
 #"point 0 10)) #(struct:translate 0 0 #(struct:translate 0 0 #(struct:"
 #"polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 "
 #"0 30 0 0 0) #(struct:pulled-point 0 0 30 10 0 0) #(struct:pulled-poi"
 #"nt 0 0 0 10 0 0)) outline #(struct:pen \"black\" 2 solid round round"
 #"))))) #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point"
 #" 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(struct:pulled-po"
 #"int 0 0 30 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) 255 \"magent"
 #"a\")))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #("
 #"struct:point 220 0) #(struct:point 220 200) #(struct:point 0 200)) #"
 #"(struct:translate 0 0 #(struct:overlay #(struct:translate 5 20 #(str"
 #"uct:overlay #(struct:crop (#(struct:point 0 0) #(struct:point 30 0) "
 #"#(struct:point 30 10) #(struct:point 0 10)) #(struct:translate 0 0 #"
 #"(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 "
 #"0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(struct:pulled-point 0 0"
 #" 30 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) outline #(struct:pe"
 #"n \"black\" 2 solid round round))))) #(struct:translate 0 0 #(struct"
 #":polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0"
 #" 0 30 0 0 0) #(struct:pulled-point 0 0 30 10 0 0) #(struct:pulled-po"
 #"int 0 0 0 10 0 0)) 255 \"magenta\")))) #(struct:translate 0 0 #(stru"
 #"ct:crop (#(struct:point 0 0) #(struct:point 220 0) #(struct:point 22"
 #"0 200) #(struct:point 0 200)) #(struct:translate 0 0 #(struct:overla"
 #"y #(struct:translate 5 5 #(struct:overlay #(struct:crop (#(struct:po"
 #"int 0 0) #(struct:point 30 0) #(struct:point 30 10) #(struct:point 0"
 #" 10)) #(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon"
 #" (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 "
 #"0 0) #(struct:pulled-point 0 0 30 10 0 0) #(struct:pulled-point 0 0 "
 #"0 10 0 0)) outline #(struct:pen \"black\" 2 solid round round))))) #"
 #"(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 "
 #"0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(struct:pulled-point 0 0"
 #" 30 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) 255 \"magenta\"))))"
 #" #(struct:translate 0 0 #(struct:overlay #(struct:crop (#(struct:poi"
 #"nt 0 0) #(struct:point 220 0) #(struct:point 220 200) #(struct:point"
 #" 0 200)) #(struct:translate 0 0 #(struct:translate 0 0 #(struct:poly"
 #"gon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 22"
 #"0 0 0 0) #(struct:pulled-point 0 0 220 200 0 0) #(struct:pulled-poin"
 #"t 0 0 0 200 0 0)) outline #(struct:pen \"black\" 2 solid round round"
 #"))))) #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point"
 #" 0 0 0 0 0 0) #(struct:pulled-point 0 0 220 0 0 0) #(struct:pulled-p"
 #"oint 0 0 220 200 0 0) #(struct:pulled-point 0 0 0 200 0 0)) outline "
 #"\"transparent\")))))))))))))))))))))))))))))))))))))))))))))))))))))"
 #")))))))))))))))))))))))))))))))))))))))))))))))))) #(struct:bb 220 2"
 #"00 200) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #"("
0 0 14 3 11 #"draw-bricks"
0 0 24 3 1 #" "
0 0 14 3 7 #"LOBR2x3"
0 0 24 3 1 #" "
0 0 14 3 8 #"FRAME2x3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 6           4 21 5307
(
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 220 0) #(struct:p"
 #"oint 220 200) #(struct:point 0 200)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 75 20 #(struct:overlay #(struct:crop (#("
 #"struct:point 0 0) #(struct:point 30 0) #(struct:point 30 10) #(struc"
 #"t:point 0 10)) #(struct:translate 0 0 #(struct:translate 0 0 #(struc"
 #"t:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point "
 #"0 0 30 0 0 0) #(struct:pulled-point 0 0 30 10 0 0) #(struct:pulled-p"
 #"oint 0 0 0 10 0 0)) outline #(struct:pen \"black\" 2 solid round rou"
 #"nd))))) #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-poi"
 #"nt 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(struct:pulled-"
 #"point 0 0 30 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) 255 \"mage"
 #"nta\")))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) "
 #"#(struct:point 220 0) #(struct:point 220 200) #(struct:point 0 200))"
 #" #(struct:translate 0 0 #(struct:overlay #(struct:translate 75 5 #(s"
 #"truct:overlay #(struct:crop (#(struct:point 0 0) #(struct:point 30 0"
 #") #(struct:point 30 10) #(struct:point 0 10)) #(struct:translate 0 0"
 #" #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 "
 #"0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(struct:pulled-point 0"
 #" 0 30 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) outline #(struct:"
 #"pen \"black\" 2 solid round round))))) #(struct:translate 0 0 #(stru"
 #"ct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point"
 #" 0 0 30 0 0 0) #(struct:pulled-point 0 0 30 10 0 0) #(struct:pulled-"
 #"point 0 0 0 10 0 0)) 255 \"magenta\")))) #(struct:translate 0 0 #(st"
 #"ruct:crop (#(struct:point 0 0) #(struct:point 220 0) #(struct:point "
 #"220 200) #(struct:point 0 200)) #(struct:translate 0 0 #(struct:over"
 #"lay #(struct:translate 40 20 #(struct:overlay #(struct:crop (#(struc"
 #"t:point 0 0) #(struct:point 30 0) #(struct:point 30 10) #(struct:poi"
 #"nt 0 10)) #(struct:translate 0 0 #(struct:translate 0 0 #(struct:pol"
 #"ygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 3"
 #"0 0 0 0) #(struct:pulled-point 0 0 30 10 0 0) #(struct:pulled-point "
 #"0 0 0 10 0 0)) outline #(struct:pen \"black\" 2 solid round round)))"
 #")) #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 "
 #"0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(struct:pulled-point"
 #" 0 0 30 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) 255 \"magenta\""
 #")))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(str"
 #"uct:point 220 0) #(struct:point 220 200) #(struct:point 0 200)) #(st"
 #"ruct:translate 0 0 #(struct:overlay #(struct:translate 40 5 #(struct"
 #":overlay #(struct:crop (#(struct:point 0 0) #(struct:point 30 0) #(s"
 #"truct:point 30 10) #(struct:point 0 10)) #(struct:translate 0 0 #(st"
 #"ruct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0"
 #" 0) #(struct:pulled-point 0 0 30 0 0 0) #(struct:pulled-point 0 0 30"
 #" 10 0 0) #(struct:pulled-point 0 0"
 #" 0 10 0 0)) outline #(struct:pen \"black\" 2 solid round round))))) "
 #"#(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0"
 #" 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(struct:pulled-point 0 "
 #"0 30 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) 255 \"magenta\")))"
 #") #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct"
 #":point 220 0) #(struct:point 220 200) #(struct:point 0 200)) #(struc"
 #"t:translate 0 0 #(struct:overlay #(struct:translate 5 20 #(struct:ov"
 #"erlay #(struct:crop (#(struct:point 0 0) #(struct:point 30 0) #(stru"
 #"ct:point 30 10) #(struct:point 0 10)) #(struct:translate 0 0 #(struc"
 #"t:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0)"
 #" #(struct:pulled-point 0 0 30 0 0 0) #(struct:pulled-point 0 0 30 10"
 #" 0 0) #(struct:pulled-point 0 0 0 10 0 0)) outline #(struct:pen \"bl"
 #"ack\" 2 solid round round))))) #(struct:translate 0 0 #(struct:polyg"
 #"on (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 "
 #"0 0 0) #(struct:pulled-point 0 0 30 10 0 0) #(struct:pulled-point 0 "
 #"0 0 10 0 0)) 255 \"magenta\")))) #(struct:translate 0 0 #(struct:cro"
 #"p (#(struct:point 0 0) #(struct:point 220 0) #(struct:point 220 200)"
 #" #(struct:point 0 200)) #(struct:translate 0 0 #(struct:overlay #(st"
 #"ruct:translate 5 5 #(struct:overlay #(struct:crop (#(struct:point 0 "
 #"0) #(struct:point 30 0) #(struct:point 30 10) #(struct:point 0 10)) "
 #"#(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(st"
 #"ruct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #"
 #"(struct:pulled-point 0 0 30 10 0 0) #(struct:pulled-point 0 0 0 10 0"
 #" 0)) outline #(struct:pen \"black\" 2 solid round round))))) #(struc"
 #"t:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0)"
 #" #(struct:pulled-point 0 0 30 0 0 0) #(struct:pulled-point 0 0 30 10"
 #" 0 0) #(struct:pulled-point 0 0 0 10 0 0)) 255 \"magenta\")))) #(str"
 #"uct:translate 0 0 #(struct:overlay #(struct:crop (#(struct:point 0 0"
 #") #(struct:point 220 0) #(struct:point 220 200) #(struct:point 0 200"
 #")) #(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#"
 #"(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 220 0 0 "
 #"0) #(struct:pulled-point 0 0 220 200 0 0) #(struct:pulled-point 0 0 "
 #"0 200 0 0)) outline #(struct:pen \"black\" 2 solid round round))))) "
 #"#(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0"
 #" 0 0 0) #(struct:pulled-point 0 0 220 0 0 0) #(struct:pulled-point 0"
 #" 0 220 200 0 0) #(struct:pulled-point 0 0 0 200 0 0)) outline \"tran"
 #"sparent\"))))))))))))))))))))))))))) #(struct:bb 220 200 200) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"draw-bricks"
0 0 24 3 1 #" "
0 0 14 3 7 #"LOBR6x6"
0 0 24 3 1 #" "
0 0 14 3 8 #"FRAME6x6"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 6           4 21 28718
(
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 220 0) #(struct:p"
 #"oint 220 200) #(struct:point 0 200)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 180 80 #(struct:overlay #(struct:crop (#"
 #"(struct:point 0 0) #(struct:point 30 0) #(struct:point 30 10) #(stru"
 #"ct:point 0 10)) #(struct:translate 0 0 #(struct:translate 0 0 #(stru"
 #"ct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point"
 #" 0 0 30 0 0 0) #(struct:pulled-point 0 0 30 10 0 0) #(struct:pulled-"
 #"point 0 0 0 10 0 0)) outline #(struct:pen \"black\" 2 solid round ro"
 #"und))))) #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-po"
 #"int 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(struct:pulled"
 #"-point 0 0 30 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) 255 \"mag"
 #"enta\")))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0)"
 #" #(struct:point 220 0) #(struct:point 220 200) #(struct:point 0 200)"
 #") #(struct:translate 0 0 #(struct:overlay #(struct:translate 180 65 "
 #"#(struct:overlay #(struct:crop (#(struct:point 0 0) #(struct:point 3"
 #"0 0) #(struct:point 30 10) #(struct:point 0 10)) #(struct:translate "
 #"0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0"
 #" 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(struct:pulled-poin"
 #"t 0 0 30 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) outline #(stru"
 #"ct:pen \"black\" 2 solid round round))))) #(struct:translate 0 0 #(s"
 #"truct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-po"
 #"int 0 0 30 0 0 0) #(struct:pulled-point 0 0 30 10 0 0) #(struct:pull"
 #"ed-point 0 0 0 10 0 0)) 255 \"magenta\")))) #(struct:translate 0 0 #"
 #"(struct:crop (#(struct:point 0 0) #(struct:point 220 0) #(struct:poi"
 #"nt 220 200) #(struct:point 0 200)) #(struct:translate 0 0 #(struct:o"
 #"verlay #(struct:translate 180 50 #(struct:overlay #(struct:crop (#(s"
 #"truct:point 0 0) #(struct:point 30 0) #(struct:point 30 10) #(struct"
 #":point 0 10)) #(struct:translate 0 0 #(struct:translate 0 0 #(struct"
 #":polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0"
 #" 0 30 0 0 0) #(struct:pulled-point 0 0 30 10 0 0) #(struct:pulled-po"
 #"int 0 0 0 10 0 0)) outline #(struct:pen \"black\" 2 solid round roun"
 #"d))))) #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-poin"
 #"t 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(struct:pulled-p"
 #"oint 0 0 30 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) 255 \"magen"
 #"ta\")))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #"
 #"(struct:point 220 0) #(struct:point 220 200) #(struct:point 0 200)) "
 #"#(struct:translate 0 0 #(struct:overlay #(struct:translate 180 35 #("
 #"struct:overlay #(struct:crop (#(struct:point 0 0) #(struct:point 30 "
 #"0) #(struct:point 30 10) #(struct:point 0 10)) #(struct:translate 0 "
 #"0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0"
 #" 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(struct:pulled-point "
 #"0 0 30 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) outline #(struct"
 #":pen \"black\" 2 solid round round))))) #(struct:translate 0 0 #(str"
 #"uct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-poin"
 #"t 0 0 30 0 0 0) #(struct:pulled-point 0 0 30 10 0 0) #(struct:pulled"
 #"-point 0 0 0 10 0 0)) 255 \"magenta\")))) #(struct:translate 0 0 #(s"
 #"truct:crop (#(struct:point 0 0) #(struct:point 220 0) #(struct:point"
 #" 220 200) #(struct:point 0 200)) #(struct:translate 0 0 #(struct:ove"
 #"rlay #(struct:translate 180 20 #(struct:overlay #(struct:crop (#(str"
 #"uct:point 0 0) #(struct:point 30 0) #(struct:point 30 10) #(struct:p"
 #"oint 0 10)) #(struct:translate 0 0 #(struct:translate 0 0 #(struct:p"
 #"olygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0"
 #" 30 0 0 0) #(struct:pulled-point 0 0 30 10 0 0) #(struct:pulled-poin"
 #"t 0 0 0 10 0 0)) outline #(struct:pen \"black\" 2 solid round round)"
 #")))) #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point "
 #"0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(struct:pulled-poi"
 #"nt 0 0 30 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) 255 \"magenta"
 #"\")))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(s"
 #"truct:point 220 0) #(struct:point 220 200) #(struct:point 0 200)) #("
 #"struct:translate 0 0 #(struct:overlay #(struct:translate 180 5 #(str"
 #"uct:overlay #(struct:crop (#(struct:point 0 0) #(struct:point 30 0) "
 #"#(struct:point 30 10) #(struct:point 0 10)) #(struct:translate 0 0 #"
 #"(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 "
 #"0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(struct:pulled-point 0 0"
 #" 30 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) outline #(struct:pe"
 #"n \"black\" 2 solid round round))))) #(struct:translate 0 0 #(struct"
 #":polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0"
 #" 0 30 0 0 0) #(struct:pulled-point 0 0 30 10 0 0) #(struct:pulled-po"
 #"int 0 0 0 10 0 0)) 255 \"magenta\")))) #(struct:translate 0 0 #(stru"
 #"ct:crop (#(struct:point 0 0) #(struct:point 220 0) #(struct:point 22"
 #"0 200) #(struct:point 0 200)) #(struct:translate 0 0 #(struct:overla"
 #"y #(struct:translate 145 80 #(struct:overlay #(struct:crop (#(struct"
 #":point 0 0) #(struct:point 30 0) #(struct:point 30 10) #(struct:poin"
 #"t 0 10)) #(struct:translate 0 0 #(struct:translate 0 0 #(struct:poly"
 #"gon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 30"
 #" 0 0 0) #(struct:pulled-point 0 0 30 10 0 0) #(struct:pulled-point 0"
 #" 0 0 10 0 0)) outline #(struct:pen \"black\" 2 solid round round))))"
 #") #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0"
 #" 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(struct:pulled-point "
 #"0 0 30 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) 255 \"magenta\")"
 #"))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(stru"
 #"ct:point 220 0) #(struct:point 220 200) #(struct:point 0 200)) #(str"
 #"uct:translate 0 0 #(struct:overlay #(struct:translate 145 65 #(struc"
 #"t:overlay #(struct:crop (#(struct:point 0 0) #(struct:point 30 0) #("
 #"struct:point 30 10) #(struct:point 0 10)) #(struct:translate 0 0 #(s"
 #"truct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 "
 #"0 0) #(struct:pulled-point 0 0 30 0 0 0) #(struct:pulled-point 0 0 3"
 #"0 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) outline #(struct:pen "
 #"\"black\" 2 solid round round))))) #(struct:translate 0 0 #(struct:p"
 #"olygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0"
 #" 30 0 0 0) #(struct:pulled-point 0 0 30 10 0 0) #(struct:pulled-poin"
 #"t 0 0 0 10 0 0)) 255 \"magenta\")))) #(struct:translate 0 0 #(struct"
 #":crop (#(struct:point 0 0) #(struct:point 220 0) #(struct:point 220 "
 #"200) #(struct:point 0 200)) #(struct:translate 0 0 #(struct:overlay "
 #"#(struct:translate 145 50 #(struct:overlay #(struct:crop (#(struct:p"
 #"oint 0 0) #(struct:point 30 0) #(struct:point 30 10) #(struct:point "
 #"0 10)) #(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygo"
 #"n (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0"
 #" 0 0) #(struct:pulled-point 0 0 30 10 0 0) #(struct:pulled-point 0 0"
 #" 0 10 0 0)) outline #(struct:pen \"black\" 2 solid round round))))) "
 #"#(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0"
 #" 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(struct:pulled-point 0 "
 #"0 30 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) 255 \"magenta\")))"
 #") #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct"
 #":point 220 0) #(struct:point 220 200) #(struct:point 0 200)) #(struc"
 #"t:translate 0 0 #(struct:overlay #(struct:translate 145 35 #(struct:"
 #"overlay #(struct:crop (#(struct:point 0 0) #(struct:point 30 0) #(st"
 #"ruct:point 30 10) #(struct:point 0 10)) #(struct:translate 0 0 #(str"
 #"uct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 "
 #"0) #(struct:pulled-point 0 0 30 0 0 0) #(struct:pulled-point 0 0 30 "
 #"10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) outline #(struct:pen \""
 #"black\" 2 solid round round))))) #(struct:translate 0 0 #(struct:pol"
 #"ygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 3"
 #"0 0 0 0) #(struct:pulled-point 0 0 30 10 0 0) #(struct:pulled-point "
 #"0 0 0 10 0 0)) 255 \"magenta\")))) #(struct:translate 0 0 #(struct:c"
 #"rop (#(struct:point 0 0) #(struct:point 220 0) #(struct:point 220 20"
 #"0) #(struct:point 0 200)) #(struct:translate 0 0 #(struct:overlay #("
 #"struct:translate 145 20 #(struct:overlay #(struct:crop (#(struct:poi"
 #"nt 0 0) #(struct:point 30 0) #(struct:point 30 10) #(struct:point 0 "
 #"10)) #(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon "
 #"(#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0"
 #" 0) #(struct:pulled-point 0 0 30 10 0 0) #(struct:pulled-point 0 0 0"
 #" 10 0 0)) outline #(struct:pen \"black\" 2 solid round round))))) #("
 #"struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0"
 #" 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(struct:pulled-point 0 0 "
 #"30 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) 255 \"magenta\")))) "
 #"#(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:p"
 #"oint 220 0) #(struct:point 220 200) #(struct:point 0 200)) #(struct:"
 #"translate 0 0 #(struct:overlay #(struct:translate 145 5 #(struct:ove"
 #"rlay #(struct:crop (#(struct:point 0 0) #(struct:point 30 0) #(struc"
 #"t:point 30 10) #(struct:point 0 10)) #(struct:translate 0 0 #(struct"
 #":translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) "
 #"#(struct:pulled-point 0 0 30 0 0 0) #(struct:pulled-point 0 0 30 10 "
 #"0 0) #(struct:pulled-point 0 0 0 10 0 0)) outline #(struct:pen \"bla"
 #"ck\" 2 solid round round))))) #(struct:translate 0 0 #(struct:polygo"
 #"n (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0"
 #" 0 0) #(struct:pulled-point 0 0 30 10 0 0) #(struct:pulled-point 0 0"
 #" 0 10 0 0)) 255 \"magenta\")))) #(struct:translate 0 0 #(struct:crop"
 #" (#(struct:point 0 0) #(struct:point 220 0) #(struct:point 220 200) "
 #"#(struct:point 0 200)) #(struct:translate 0 0 #(struct:overlay #(str"
 #"uct:translate 110 80 #(struct:overlay #(struct:crop (#(struct:point "
 #"0 0) #(struct:point 30 0) #(struct:point 30 10) #(struct:point 0 10)"
 #") #(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#("
 #"struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0)"
 #" #(struct:pulled-point 0 0 30 10 0 0) #(struct:pulled-point 0 0 0 10"
 #" 0 0)) outline #(struct:pen \"black\" 2 solid round round))))) #(str"
 #"uct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 "
 #"0) #(struct:pulled-point 0 0 30 0 0 0) #(struct:pulled-point 0 0 30 "
 #"10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) 255 \"magenta\")))) #(s"
 #"truct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:poin"
 #"t 220 0) #(struct:point 220 200) #(struct:point 0 200)) #(struct:tra"
 #"nslate 0 0 #(struct:overlay #(struct:translate 110 65 #(struct:overl"
 #"ay #(struct:crop (#(struct:point 0 0) #(struct:point 30 0) #(struct:"
 #"point 30 10) #(struct:point 0 10)) #(struct:translate 0 0 #(struct:t"
 #"ranslate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #("
 #"struct:pulled-point 0 0 30 0 0 0) #(struct:pulled-point 0 0 30 10 0 "
 #"0) #(struct:pulled-point 0 0 0 10 0 0)) outline #(struct:pen \"black"
 #"\" 2 solid round round))))) #(struct:translate 0 0 #(struct:polygon "
 #"(#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0"
 #" 0) #(struct:pulled-point 0 0 30 10 0 0) #(struct:pulled-point 0 0 0"
 #" 10 0 0)) 255 \"magenta\")))) #(struct:translate 0 0 #(struct:crop ("
 #"#(struct:point 0 0) #(struct:point 220 0) #(struct:point 220 200) #("
 #"struct:point 0 200)) #(struct:translate 0 0 #(struct:overlay #(struc"
 #"t:translate 110 50 #(struct:overlay #(struct:crop (#(struct:point 0 "
 #"0) #(struct:point 30 0) #(struct:point 30 10) #(struct:point 0 10)) "
 #"#(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(st"
 #"ruct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #"
 #"(struct:pulled-point 0 0 30 10 0 0) #(struct:pulled-point 0 0 0 10 0"
 #" 0)) outline #(struct:pen \"black\" 2 solid round round))))) #(struc"
 #"t:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0)"
 #" #(struct:pulled-point 0 0 30 0 0 0) #(struct:pulled-point 0 0 30 10"
 #" 0 0) #(struct:pulled-point 0 0 0 10 0 0)) 255 \"magenta\")))) #(str"
 #"uct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point "
 #"220 0) #(struct:point 220 200) #(struct:point 0 200)) #(struct:trans"
 #"late 0 0 #(struct:overlay #(struct:translate 110 35 #(struct:overlay"
 #" #(struct:crop (#(struct:point 0 0) #(struct:point 30 0) #(struct:po"
 #"int 30 10) #(struct:point 0 10)) #(struct:translate 0 0 #(struct:tra"
 #"nslate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(st"
 #"ruct:pulled-point 0 0 30 0 0 0) #(struct:pulled-point 0 0 30 10 0 0)"
 #" #(struct:pulled-point 0 0 0 10 0 0)) outline #(struct:pen \"black\""
 #" 2 solid round round))))) #(struct:translate 0 0 #(struct:polygon (#"
 #"(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0"
 #") #(struct:pulled-point 0 0 30 10 0 0) #(struct:pulled-point 0 0 0 1"
 #"0 0 0)) 255 \"magenta\")))) #(struct:translate 0 0 #(struct:crop (#("
 #"struct:point 0 0) #(struct:point 220 0) #(struct:point 220 200) #(st"
 #"ruct:point 0 200)) #(struct:translate 0 0 #(struct:overlay #(struct:"
 #"translate 110 20 #(struct:overlay #(struct:crop (#(struct:point 0 0)"
 #" #(struct:point 30 0) #(struct:point 30 10) #(struct:point 0 10)) #("
 #"struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(stru"
 #"ct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(s"
 #"truct:pulled-point 0 0 30 10 0 0) #(struct:pulled-point 0 0 0 10 0 0"
 #")) outline #(struct:pen \"black\" 2 solid round round))))) #(struct:"
 #"translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #"
 #"(struct:pulled-point 0 0 30 0 0 0) #(struct:pulled-point 0 0 30 10 0"
 #" 0) #(struct:pulled-point 0 0 0 10 0 0)) 255 \"magenta\")))) #(struc"
 #"t:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 22"
 #"0 0) #(struct:point 220 200) #(struct:point 0 200)) #(struct:transla"
 #"te 0 0 #(struct:overlay #(struct:translate 110 5 #(struct:overlay #("
 #"struct:crop (#(struct:point 0 0) #(struct:point 30 0) #(struct:point"
 #" 30 10) #(struct:point 0 10)) #(struct:translate 0 0 #(struct:transl"
 #"ate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struc"
 #"t:pulled-point 0 0 30 0 0 0) #(struct:pulled-point 0 0 30 10 0 0) #("
 #"struct:pulled-point 0 0 0 10 0 0)) outline #(struct:pen \"black\" 2 "
 #"solid round round))))) #(struct:translate 0 0 #(struct:polygon (#(st"
 #"ruct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #"
 #"(struct:pulled-point 0 0 30 10 0 0) #(struct:pulled-point 0 0 0 10 0"
 #" 0)) 255 \"magenta\")))) #(struct:translate 0 0 #(struct:crop (#(str"
 #"uct:point 0 0) #(struct:point 220 0) #(struct:point 220 200) #(struc"
 #"t:point 0 200)) #(struct:translate 0 0 #(struct:overlay #(struct:tra"
 #"nslate 75 80 #(struct:overlay #(struct:crop (#(struct:point 0 0) #(s"
 #"truct:point 30 0) #(struct:point 30 10) #(struct:point 0 10)) #(stru"
 #"ct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:p"
 #"ulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(struc"
 #"t:pulled-point 0 0 30 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) o"
 #"utline #(struct:pen \"black\" 2 solid round round))))) #(struct:tran"
 #"slate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(str"
 #"uct:pulled-point 0 0 30 0 0 0) #(struct:pulled-point 0 0 30 10 0 0) "
 #"#(struct:pulled-point 0 0 0 10 0 0)) 255 \"magenta\")))) #(struct:tr"
 #"anslate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 220 0)"
 #" #(struct:point 220 200) #(struct:point 0 200)) #(struct:translate 0"
 #" 0 #(struct:overlay #(struct:translate 75 65 #(struct:overlay #(stru"
 #"ct:crop (#(struct:point 0 0) #(struct:point 30 0) #(struct:point 30 "
 #"10) #(struct:point 0 10)) #(struct:translate 0 0 #(struct:translate "
 #"0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pu"
 #"lled-point 0 0 30 0 0 0) #(struct:pulled-point 0 0 30 10 0 0) #(stru"
 #"ct:pulled-point 0 0 0 10 0 0)) outline #(struct:pen \"black\" 2 soli"
 #"d round round))))) #(struct:translate 0 0 #(struct:polygon (#(struct"
 #":pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(str"
 #"uct:pulled-point 0 0 30 10 0 0) #(struct:pulled-point 0 0 0 10 0 0))"
 #" 255 \"magenta\")))) #(struct:translate 0 0 #(struct:crop (#(struct:"
 #"point 0 0) #(struct:point 220 0) #(struct:point 220 200) #(struct:po"
 #"int 0 200)) #(struct:translate 0 0 #(struct:overlay #(struct:transla"
 #"te 75 50 #(struct:overlay #(struct:crop (#(struct:point 0 0) #(struc"
 #"t:point 30 0) #(struct:point 30 10) #(struct:point 0 10)) #(struct:t"
 #"ranslate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulle"
 #"d-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(struct:pu"
 #"lled-point 0 0 30 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) outli"
 #"ne #(struct:pen \"black\" 2 solid round round))))) #(struct:translat"
 #"e 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:"
 #"pulled-point 0 0 30 0 0 0) #(struct:pulled-point 0 0 30 10 0 0) #(st"
 #"ruct:pulled-point 0 0 0 10 0 0)) 255 \"magenta\")))) #(struct:transl"
 #"ate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 220 0) #(s"
 #"truct:point 220 200) #(struct:point 0 200)) #(struct:translate 0 0 #"
 #"(struct:overlay #(struct:translate 75 35 #(struct:overlay #(struct:c"
 #"rop (#(struct:point 0 0) #(struct:point 30 0) #(struct:point 30 10) "
 #"#(struct:point 0 10)) #(struct:translate 0 0 #(struct:translate 0 0 "
 #"#(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled"
 #"-point 0 0 30 0 0 0) #(struct:pulled-point 0 0 30 10 0 0) #(struct:p"
 #"ulled-point 0 0 0 10 0 0)) outline #(struct:pen \"black\" 2 solid ro"
 #"und round))))) #(struct:translate 0 0 #(struct:polygon (#(struct:pul"
 #"led-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(struct:"
 #"pulled-point 0 0 30 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) 255"
 #" \"magenta\")))) #(struct:translate 0 0 #(struct:crop (#(struct:poin"
 #"t 0 0) #(struct:point 220 0) #(struct:point 220 200) #(struct:point "
 #"0 200)) #(struct:translate 0 0 #(struct:overlay #(struct:translate 7"
 #"5 20 #(struct:overlay #(struct:crop (#(struct:point 0 0) #(struct:po"
 #"int 30 0) #(struct:point 30 10) #(struct:point 0 10)) #(struct:trans"
 #"late 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-po"
 #"int 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(struct:pulled"
 #"-point 0 0 30 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) outline #"
 #"(struct:pen \"black\" 2 solid round round))))) #(struct:translate 0 "
 #"0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pull"
 #"ed-point 0 0 30 0 0 0) #(struct:pulled-point 0 0 30 10 0 0) #(struct"
 #":pulled-point 0 0 0 10 0 0)) 255 \"magenta\")))) #(struct:translate "
 #"0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 220 0) #(struc"
 #"t:point 220 200) #(struct:point 0 200)) #(struct:translate 0 0 #(str"
 #"uct:overlay #(struct:translate 75 5 #(struct:overlay #(struct:crop ("
 #"#(struct:point 0 0) #(struct:point 30 0) #(struct:point 30 10) #(str"
 #"uct:point 0 10)) #(struct:translate 0 0 #(struct:translate 0 0 #(str"
 #"uct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-poin"
 #"t 0 0 30 0 0 0) #(struct:pulled-point 0 0 30 10 0 0) #(struct:pulled"
 #"-point 0 0 0 10 0 0)) outline #(struct:pen \"black\" 2 solid round r"
 #"ound))))) #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-p"
 #"oint 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(struct:pulle"
 #"d-point 0 0 30 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) 255 \"ma"
 #"genta\")))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0"
 #") #(struct:point 220 0) #(struct:point 220 200) #(struct:point 0 200"
 #")) #(struct:translate 0 0 #(struct:overlay #(struct:translate 40 80 "
 #"#(struct:overlay #(struct:crop (#(struct:point 0 0) #(struct:point 3"
 #"0 0) #(struct:point 30 10) #(struct:point 0 10)) #(struct:translate "
 #"0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0"
 #" 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(struct:pulled-poin"
 #"t 0 0 30 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) outline #(stru"
 #"ct:pen \"black\" 2 solid round round))))) #(struct:translate 0 0 #(s"
 #"truct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-po"
 #"int 0 0 30 0 0 0) #(struct:pulled-point 0 0 30 10 0 0) #(struct:pull"
 #"ed-point 0 0 0 10 0 0)) 255 \"magenta\")))) #(struct:translate 0 0 #"
 #"(struct:crop (#(struct:point 0 0) #(struct:point 220 0) #(struct:poi"
 #"nt 220 200) #(struct:point 0 200)) #(struct:translate 0 0 #(struct:o"
 #"verlay #(struct:translate 40 65 #(struct:overlay #(struct:crop (#(st"
 #"ruct:point 0 0) #(struct:point 30 0) #(struct:point 30 10) #(struct:"
 #"point 0 10)) #(struct:translate 0 0 #(struct:translate 0 0 #(struct:"
 #"polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 "
 #"0 30 0 0 0) #(struct:pulled-point 0 0 30 10 0 0) #(struct:pulled-poi"
 #"nt 0 0 0 10 0 0)) outline #(struct:pen \"black\" 2 solid round round"
 #"))))) #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point"
 #" 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(struct:pulled-po"
 #"int 0 0 30 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) 255 \"magent"
 #"a\")))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #("
 #"struct:point 220 0) #(struct:point 220 200) #(struct:point 0 200)) #"
 #"(struct:translate 0 0 #(struct:overlay #(struct:translate 40 50 #(st"
 #"ruct:overlay #(struct:crop (#(struct:point 0 0) #(struct:point 30 0)"
 #" #(struct:point 30 10) #(struct:point 0 10)) #(struct:translate 0 0 "
 #"#(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0"
 #" 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(struct:pulled-point 0 "
 #"0 30 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) outline #(struct:p"
 #"en \"black\" 2 solid round round))))) #(struct:translate 0 0 #(struc"
 #"t:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point "
 #"0 0 30 0 0 0) #(struct:pulled-point 0 0 30 10 0 0) #(struct:pulled-p"
 #"oint 0 0 0 10 0 0)) 255 \"magenta\")))) #(struct:translate 0 0 #(str"
 #"uct:crop (#(struct:point 0 0) #(struct:point 220 0) #(struct:point 2"
 #"20 200) #(struct:point 0 200)) #(struct:translate 0 0 #(struct:overl"
 #"ay #(struct:translate 40 35 #(struct:overlay #(struct:crop (#(struct"
 #":point 0 0) #(struct:point 30 0) #(struct:point 30 10) #(struct:poin"
 #"t 0 10)) #(struct:translate 0 0 #(struct:translate 0 0 #(struct:poly"
 #"gon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 30"
 #" 0 0 0) #(struct:pulled-point 0 0 30 10 0 0) #(struct:pulled-point 0"
 #" 0 0 10 0 0)) outline #(struct:pen \"black\" 2 solid round round))))"
 #") #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0"
 #" 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(struct:pulled-point "
 #"0 0 30 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) 255 \"magenta\")"
 #"))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(stru"
 #"ct:point 220 0) #(struct:point 220 200) #(struct:point 0 200)) #(str"
 #"uct:translate 0 0 #(struct:overlay #(struct:translate 40 20 #(struct"
 #":overlay #(struct:crop (#(struct:point 0 0) #(struct:point 30 0) #(s"
 #"truct:point 30 10) #(struct:point 0 10)) #(struct:translate 0 0 #(st"
 #"ruct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0"
 #" 0) #(struct:pulled-point 0 0 30 0 0 0) #(struct:pulled-point 0 0 30"
 #" 10 0 0) #(struct:pulled-point 0 0"
 #" 0 10 0 0)) outline #(struct:pen \"black\" 2 solid round round))))) "
 #"#(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0"
 #" 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(struct:pulled-point 0 "
 #"0 30 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) 255 \"magenta\")))"
 #") #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct"
 #":point 220 0) #(struct:point 220 200) #(struct:point 0 200)) #(struc"
 #"t:translate 0 0 #(struct:overlay #(struct:translate 40 5 #(struct:ov"
 #"erlay #(struct:crop (#(struct:point 0 0) #(struct:point 30 0) #(stru"
 #"ct:point 30 10) #(struct:point 0 10)) #(struct:translate 0 0 #(struc"
 #"t:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0)"
 #" #(struct:pulled-point 0 0 30 0 0 0) #(struct:pulled-point 0 0 30 10"
 #" 0 0) #(struct:pulled-point 0 0 0 10 0 0)) outline #(struct:pen \"bl"
 #"ack\" 2 solid round round))))) #(struct:translate 0 0 #(struct:polyg"
 #"on (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 "
 #"0 0 0) #(struct:pulled-point 0 0 30 10 0 0) #(struct:pulled-point 0 "
 #"0 0 10 0 0)) 255 \"magenta\")))) #(struct:translate 0 0 #(struct:cro"
 #"p (#(struct:point 0 0) #(struct:point 220 0) #(struct:point 220 200)"
 #" #(struct:point 0 200)) #(struct:translate 0 0 #(struct:overlay #(st"
 #"ruct:translate 5 80 #(struct:overlay #(struct:crop (#(struct:point 0"
 #" 0) #(struct:point 30 0) #(struct:point 30 10) #(struct:point 0 10))"
 #" #(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(s"
 #"truct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) "
 #"#(struct:pulled-point 0 0 30 10 0 0) #(struct:pulled-point 0 0 0 10 "
 #"0 0)) outline #(struct:pen \"black\" 2 solid round round))))) #(stru"
 #"ct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0"
 #") #(struct:pulled-point 0 0 30 0 0 0) #(struct:pulled-point 0 0 30 1"
 #"0 0 0) #(struct:pulled-point 0 0 0 10 0 0)) 255 \"magenta\")))) #(st"
 #"ruct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point"
 #" 220 0) #(struct:point 220 200) #(struct:point 0 200)) #(struct:tran"
 #"slate 0 0 #(struct:overlay #(struct:translate 5 65 #(struct:overlay "
 #"#(struct:crop (#(struct:point 0 0) #(struct:point 30 0) #(struct:poi"
 #"nt 30 10) #(struct:point 0 10)) #(struct:translate 0 0 #(struct:tran"
 #"slate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(str"
 #"uct:pulled-point 0 0 30 0 0 0) #(struct:pulled-point 0 0 30 10 0 0) "
 #"#(struct:pulled-point 0 0 0 10 0 0)) outline #(struct:pen \"black\" "
 #"2 solid round round))))) #(struct:translate 0 0 #(struct:polygon (#("
 #"struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0)"
 #" #(struct:pulled-point 0 0 30 10 0 0) #(struct:pulled-point 0 0 0 10"
 #" 0 0)) 255 \"magenta\")))) #(struct:translate 0 0 #(struct:crop (#(s"
 #"truct:point 0 0) #(struct:point 220 0) #(struct:point 220 200) #(str"
 #"uct:point 0 200)) #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 5 50 #(struct:overlay #(struct:crop (#(struct:point 0 0) #("
 #"struct:point 30 0) #(struct:point 30 10) #(struct:point 0 10)) #(str"
 #"uct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:"
 #"pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(stru"
 #"ct:pulled-point 0 0 30 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) "
 #"outline #(struct:pen \"black\" 2 solid round round))))) #(struct:tra"
 #"nslate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(st"
 #"ruct:pulled-point 0 0 30 0 0 0) #(struct:pulled-point 0 0 30 10 0 0)"
 #" #(struct:pulled-point 0 0 0 10 0 0)) 255 \"magenta\")))) #(struct:t"
 #"ranslate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 220 0"
 #") #(struct:point 220 200) #(struct:point 0 200)) #(struct:translate "
 #"0 0 #(struct:overlay #(struct:translate 5 35 #(struct:overlay #(stru"
 #"ct:crop (#(struct:point 0 0) #(struct:point 30 0) #(struct:point 30 "
 #"10) #(struct:point 0 10)) #(struct:translate 0 0 #(struct:translate "
 #"0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pu"
 #"lled-point 0 0 30 0 0 0) #(struct:pulled-point 0 0 30 10 0 0) #(stru"
 #"ct:pulled-point 0 0 0 10 0 0)) outline #(struct:pen \"black\" 2 soli"
 #"d round round))))) #(struct:translate 0 0 #(struct:polygon (#(struct"
 #":pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(str"
 #"uct:pulled-point 0 0 30 10 0 0) #(struct:pulled-point 0 0 0 10 0 0))"
 #" 255 \"magenta\")))) #(struct:translate 0 0 #(struct:crop (#(struct:"
 #"point 0 0) #(struct:point 220 0) #(struct:point 220 200) #(struct:po"
 #"int 0 200)) #(struct:translate 0 0 #(struct:overlay #(struct:transla"
 #"te 5 20 #(struct:overlay #(struct:crop (#(struct:point 0 0) #(struct"
 #":point 30 0) #(struct:point 30 10) #(struct:point 0 10)) #(struct:tr"
 #"anslate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled"
 #"-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(struct:pul"
 #"led-point 0 0 30 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) outlin"
 #"e #(struct:pen \"black\" 2 solid round round))))) #(struct:translate"
 #" 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:p"
 #"ulled-point 0 0 30 0 0 0) #(struct:pulled-point 0 0 30 10 0 0) #(str"
 #"uct:pulled-point 0 0 0 10 0 0)) 255 \"magenta\")))) #(struct:transla"
 #"te 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 220 0) #(st"
 #"ruct:point 220 200) #(struct:point 0 200)) #(struct:translate 0 0 #("
 #"struct:overlay #(struct:translate 5 5 #(struct:overlay #(struct:crop"
 #" (#(struct:point 0 0) #(struct:point 30 0) #(struct:point 30 10) #(s"
 #"truct:point 0 10)) #(struct:translate 0 0 #(struct:translate 0 0 #(s"
 #"truct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-po"
 #"int 0 0 30 0 0 0) #(struct:pulled-point 0 0 30 10 0 0) #(struct:pull"
 #"ed-point 0 0 0 10 0 0)) outline #(struct:pen \"black\" 2 solid round"
 #" round))))) #(struct:translate 0 0 #(struct:polygon (#(struct:pulled"
 #"-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(struct:pul"
 #"led-point 0 0 30 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) 255 \""
 #"magenta\")))) #(struct:translate 0 0 #(struct:overlay #(struct:crop "
 #"(#(struct:point 0 0) #(struct:point 220 0) #(struct:point 220 200) #"
 #"(struct:point 0 200)) #(struct:translate 0 0 #(struct:translate 0 0 "
 #"#(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled"
 #"-point 0 0 220 0 0 0) #(struct:pulled-point 0 0 220 200 0 0) #(struc"
 #"t:pulled-point 0 0 0 200 0 0)) outline #(struct:pen \"black\" 2 soli"
 #"d round round))))) #(struct:translate 0 0 #(struct:polygon (#(struct"
 #":pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 220 0 0 0) #(st"
 #"ruct:pulled-point 0 0 220 200 0 0) #(struct:pulled-point 0 0 0 200 0"
 #" 0)) outline \"transparent\"))))))))))))))))))))))))))))))))))))))))"
 #"))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))"
 #"))))))))))))))))))))))))))))))))))))))) #(struct:bb 220 200 200) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";;get-brick-image: Brick-Posn -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 75
(
 #";;returns an image of the given Brick-Posn (w/ appropriate health co"
 #"loring)"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"get-brick-image"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 9 #"bp-health"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 2 #") "
0 0 14 3 7 #"BRICK-3"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 9 #"bp-health"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 14 3 7 #"BRICK-2"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 9 #"bp-health"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 14 3 7 #"BRICK-1"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 9 #"bp-health"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 14 3 7 #"BRICK-0"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 7 #"BRICK-3"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"get-brick-image"
0 0 24 3 2 #" ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 3 #")) "
0 0 14 3 7 #"BRICK-3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"get-brick-image"
0 0 24 3 2 #" ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 3 #")) "
0 0 14 3 7 #"BRICK-2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"get-brick-image"
0 0 24 3 2 #" ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 3 #")) "
0 0 14 3 7 #"BRICK-1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"get-brick-image"
0 0 24 3 2 #" ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 3 #")) "
0 0 14 3 7 #"BRICK-0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"get-brick-image"
0 0 24 3 2 #" ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 21 3 1 #"5"
0 0 24 3 3 #")) "
0 0 14 3 7 #"BRICK-3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"BP-ALIVE"
0 0 24 3 2 #" ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"65"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"BP-DEAD"
0 0 24 3 2 #" ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"LOBR3x5"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-lobr"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"LOBR5x5"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-lobr"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"LOBR2x3"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-lobr"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"LOBR6x6"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-lobr"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 42 #"#|---- Balls and Bricks for Testing ----|#"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"COMPARE-BP"
0 0 24 3 2 #" ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"BALL-TOP"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-ball"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 21 3 2 #"55"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"BALL-BOT"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-ball"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 21 3 2 #"45"
0 0 24 3 1 #" "
0 0 21 3 2 #"-5"
0 0 24 3 1 #" "
0 0 21 3 2 #"-5"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"BALL-LEFT"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-ball"
0 0 24 3 1 #" "
0 0 21 3 2 #"45"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"BALL-RIGHT"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-ball"
0 0 24 3 1 #" "
0 0 21 3 2 #"55"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 21 3 2 #"-5"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"BALL-CORNER"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-ball"
0 0 24 3 1 #" "
0 0 21 3 2 #"66"
0 0 24 3 1 #" "
0 0 21 3 2 #"55"
0 0 24 3 1 #" "
0 0 21 3 2 #"-5"
0 0 24 3 1 #" "
0 0 21 3 2 #"-5"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 14 #"BALL-CORNER-BR"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-ball"
0 0 24 3 1 #" "
0 0 21 3 2 #"39"
0 0 24 3 1 #" "
0 0 21 3 2 #"55"
0 0 24 3 1 #" "
0 0 21 3 2 #"-5"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 14 #"BALL-CORNER-BL"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-ball"
0 0 24 3 1 #" "
0 0 21 3 2 #"39"
0 0 24 3 1 #" "
0 0 21 3 2 #"45"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 14 #"BALL-CORNER-TR"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-ball"
0 0 24 3 1 #" "
0 0 21 3 2 #"66"
0 0 24 3 1 #" "
0 0 21 3 2 #"55"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 2 #"-5"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 48 #"#| --- Brick Collision REACTION Functions --- |#"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";;ball-brick-interact: World -> World"
0 0 24 29 1 #"\n"
0 0 17 3 85
(
 #";;Updates the entire World based on if it's ball is hitting one of i"
 #"t's active bricks"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 19 #"ball-brick-interact"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 13 #"brick-bounces"
0 0 24 3 2 #" ("
0 0 14 3 10 #"world-ball"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 12 #"world-bricks"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 13 #"update-bricks"
0 0 24 3 2 #" ("
0 0 14 3 10 #"world-ball"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 12 #"world-bricks"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 10 #"world-padx"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 10 #"world-rows"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 10 #"world-cols"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 14 #"world-launched"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 11 #"world-lives"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 11 #"world-score"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 19 #"ball-brick-interact"
0 0 24 3 1 #" "
0 0 14 3 8 #"WORLD3x5"
0 0 24 3 2 #") "
0 0 14 3 8 #"WORLD3x5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 19 #"ball-brick-interact"
0 0 24 3 1 #" "
0 0 14 3 10 #"WORLD3x5-S"
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-ball"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 21 3 2 #"54"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 60
#"                                                           ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"160"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 66
#"                                                                 ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"160"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 66
#"                                                                 ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"160"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 66
#"                                                                 ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"125"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 66
#"                                                                 ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"125"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 66
#"                                                                 ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"125"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 66
#"                                                                 ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"90"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 66
#"                                                                 ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"90"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 66
#"                                                                 ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"90"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 66
#"                                                                 ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"55"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 66
#"                                                                 ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"55"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 66
#"                                                                 ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"55"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 66
#"                                                                 ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 66
#"                                                                 ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 66
#"                                                                 ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 59
#"                                                           "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 6 #"#false"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 42 #";;update-score: Number Ball LoBr -> Number"
0 0 24 29 1 #"\n"
0 0 17 3 49 #";;updates the given score (scr) if a brick is hit"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"update-score"
0 0 24 3 1 #" "
0 0 14 3 3 #"scr"
0 0 24 3 1 #" "
0 0 14 3 2 #"ba"
0 0 24 3 1 #" "
0 0 14 3 5 #"mlobr"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 5 #"mlobr"
0 0 24 3 2 #") "
0 0 14 3 3 #"scr"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 5 #"cons?"
0 0 24 3 1 #" "
0 0 14 3 5 #"mlobr"
0 0 24 3 3 #") ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 8 #"hitting?"
0 0 24 3 1 #" "
0 0 14 3 2 #"ba"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"mlobr"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 15 #"get-brick-value"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"mlobr"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 14 3 12 #"update-score"
0 0 24 3 1 #" "
0 0 14 3 3 #"scr"
0 0 24 3 1 #" "
0 0 14 3 2 #"ba"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 5 #"mlobr"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 12 #"update-score"
0 0 24 3 1 #" "
0 0 14 3 3 #"scr"
0 0 24 3 1 #" "
0 0 14 3 2 #"ba"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 5 #"mlobr"
0 0 24 3 6 #")))]))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"update-score"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 12 #"INITIAL-BALL"
0 0 24 3 1 #" "
0 0 14 3 7 #"LOBR3x5"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"update-score"
0 0 24 3 1 #" "
0 0 21 3 2 #"60"
0 0 24 3 1 #" "
0 0 14 3 11 #"MIDDLE-BALL"
0 0 24 3 1 #" "
0 0 14 3 7 #"LOBR3x5"
0 0 24 3 2 #") "
0 0 21 3 2 #"68"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"update-score"
0 0 24 3 1 #" "
0 0 21 3 2 #"60"
0 0 24 3 1 #" "
0 0 14 3 11 #"MIDDLE-BALL"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 4 #"()) "
0 0 21 3 2 #"60"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";;get-brick-value: Brick -> Number"
0 0 24 29 1 #"\n"
0 0 17 3 74
(
 #";;the less health a brick has, the less it's value is for the game's"
 #" score"
) 0 0 24 29 1 #"\n"
0 0 17 3 43 #";;this function calculates that final value"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"get-brick-value"
0 0 24 3 1 #" "
0 0 14 3 2 #"br"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 5 #"zero?"
0 0 24 3 2 #" ("
0 0 14 3 9 #"bp-health"
0 0 24 3 1 #" "
0 0 14 3 2 #"br"
0 0 24 3 3 #")) "
0 0 21 3 1 #"0"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 11 #"BRICK-VALUE"
0 0 24 3 2 #" ("
0 0 14 3 9 #"bp-health"
0 0 24 3 1 #" "
0 0 14 3 2 #"br"
0 0 24 3 5 #"))]))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"get-brick-value"
0 0 24 3 2 #" ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 21 3 2 #"10"
0 0 24 3 3 #")) "
0 0 21 3 3 #"1.2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"get-brick-value"
0 0 24 3 1 #" "
0 0 14 3 8 #"BP-ALIVE"
0 0 24 3 2 #") "
0 0 21 3 1 #"6"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"get-brick-value"
0 0 24 3 1 #" "
0 0 14 3 7 #"BP-DEAD"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";;update-bricks: Ball LoBr -> LoBr"
0 0 24 29 1 #"\n"
0 0 17 3 57 #";;updates all bricks healths if they were hit by the ball"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"update-bricks"
0 0 24 3 1 #" "
0 0 14 3 2 #"ba"
0 0 24 3 1 #" "
0 0 14 3 5 #"mlobr"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 5 #"mlobr"
0 0 24 3 2 #") "
0 0 14 3 5 #"mlobr"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 5 #"cons?"
0 0 24 3 1 #" "
0 0 14 3 5 #"mlobr"
0 0 24 3 3 #") ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 8 #"hitting?"
0 0 24 3 1 #" "
0 0 14 3 2 #"ba"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"mlobr"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 10 #"hurt-brick"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"mlobr"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 13 #"update-bricks"
0 0 24 3 1 #" "
0 0 14 3 2 #"ba"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 5 #"mlobr"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"mlobr"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 13 #"update-bricks"
0 0 24 3 1 #" "
0 0 14 3 2 #"ba"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 5 #"mlobr"
0 0 24 3 7 #"))))]))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"update-bricks"
0 0 24 3 1 #" "
0 0 14 3 11 #"MIDDLE-BALL"
0 0 24 3 1 #" "
0 0 14 3 7 #"LOBR3x5"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"90"
0 0 24 3 1 #" "
0 0 21 3 2 #"70"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 57 #"                                                        ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"90"
0 0 24 3 1 #" "
0 0 21 3 2 #"55"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 57 #"                                                        ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"90"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 57 #"                                                        ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"90"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 57 #"                                                        ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"90"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 57 #"                                                        ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"55"
0 0 24 3 1 #" "
0 0 21 3 2 #"70"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 57 #"                                                        ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"55"
0 0 24 3 1 #" "
0 0 21 3 2 #"55"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 57 #"                                                        ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"55"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 57 #"                                                        ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"55"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 57 #"                                                        ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"55"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 57 #"                                                        ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 2 #"70"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 57 #"                                                        ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 2 #"55"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 57 #"                                                        ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 57 #"                                                        ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 57 #"                                                        ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"update-bricks"
0 0 24 3 1 #" "
0 0 14 3 11 #"MIDDLE-BALL"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 4 #"()) "
0 0 21 3 1 #"'"
0 0 24 3 3 #"())"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";;brick-bounce: Ball LoBr -> Ball"
0 0 24 29 1 #"\n"
0 0 17 3 50 #";;determines if the ball is hitting 1 or 2 bricks,"
0 0 24 29 1 #"\n"
0 0 17 3 74
(
 #";;and uses helpers to determine how the ball will respond to the bri"
 #"ck-hit"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"brick-bounces"
0 0 24 3 1 #" "
0 0 14 3 2 #"ba"
0 0 24 3 1 #" "
0 0 14 3 5 #"mlobr"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 5 #"mlobr"
0 0 24 3 2 #") "
0 0 14 3 2 #"ba"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 5 #"cons?"
0 0 24 3 1 #" "
0 0 14 3 5 #"mlobr"
0 0 24 3 3 #") ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 8 #"hitting?"
0 0 24 3 1 #" "
0 0 14 3 2 #"ba"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"mlobr"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 13 #"brick-bounces"
0 0 24 3 2 #" ("
0 0 15 3 17 #"deflect-off-brick"
0 0 24 3 1 #" "
0 0 14 3 2 #"ba"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"mlobr"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 5 #"mlobr"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 13 #"brick-bounces"
0 0 24 3 1 #" "
0 0 14 3 2 #"ba"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 5 #"mlobr"
0 0 24 3 7 #")))])) "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"brick-bounces"
0 0 24 3 1 #" "
0 0 14 3 11 #"MIDDLE-BALL"
0 0 24 3 1 #" "
0 0 14 3 7 #"LOBR3x5"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-ball"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"brick-bounces"
0 0 24 3 1 #" "
0 0 14 3 11 #"MIDDLE-BALL"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 4 #"()) "
0 0 14 3 11 #"MIDDLE-BALL"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"brick-bounces"
0 0 24 3 1 #" "
0 0 14 3 12 #"INITIAL-BALL"
0 0 24 3 1 #" "
0 0 14 3 7 #"LOBR3x5"
0 0 24 3 2 #") "
0 0 14 3 12 #"INITIAL-BALL"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";;deflect-off-brick: Ball Brick -> Ball"
0 0 24 29 1 #"\n"
0 0 17 3 78
(
 #";;determine how the given Ball hit the given Brick, and makes the ba"
 #"ll deflect"
) 0 0 24 29 1 #"\n"
0 0 17 3 91
(
 #";;certain ways for certain hits (i.e. hit on the top of the brick, s"
 #"ide of the brick, etc.)"
) 0 0 24 29 1 #"\n"
0 0 17 3 94
(
 #";;**Note, this is inteded to be used after you have guarenteed that "
 #"the given Brick is hitting"
) 0 0 24 29 1 #"\n"
0 0 17 3 18 #";;  the given Ball"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 15 3 17 #"deflect-off-brick"
0 0 24 3 1 #" "
0 0 14 3 2 #"ba"
0 0 24 3 1 #" "
0 0 14 3 2 #"br"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 15 #"hitting-corner?"
0 0 24 3 1 #" "
0 0 14 3 2 #"ba"
0 0 24 3 1 #" "
0 0 14 3 2 #"br"
0 0 24 3 3 #") ("
0 0 14 3 12 #"flip-ball-vx"
0 0 24 3 2 #" ("
0 0 14 3 12 #"flip-ball-vy"
0 0 24 3 1 #" "
0 0 14 3 2 #"ba"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 11 #"hitting-lr?"
0 0 24 3 1 #" "
0 0 14 3 2 #"ba"
0 0 24 3 1 #" "
0 0 14 3 2 #"br"
0 0 24 3 3 #") ("
0 0 14 3 12 #"flip-ball-vx"
0 0 24 3 1 #" "
0 0 14 3 2 #"ba"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 11 #"hitting-tb?"
0 0 24 3 1 #" "
0 0 14 3 2 #"ba"
0 0 24 3 1 #" "
0 0 14 3 2 #"br"
0 0 24 3 3 #") ("
0 0 14 3 12 #"flip-ball-vy"
0 0 24 3 1 #" "
0 0 14 3 2 #"ba"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 2 #"ba"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 15 3 17 #"deflect-off-brick"
0 0 24 3 1 #" "
0 0 14 3 8 #"BALL-TOP"
0 0 24 3 1 #" "
0 0 14 3 10 #"COMPARE-BP"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-ball"
0 0 24 3 1 #" "
0 0 21 3 2 #"45"
0 0 24 3 1 #" "
0 0 21 3 2 #"60"
0 0 24 3 1 #" "
0 0 21 3 2 #"-5"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 15 3 17 #"deflect-off-brick"
0 0 24 3 1 #" "
0 0 14 3 9 #"BALL-LEFT"
0 0 24 3 1 #" "
0 0 14 3 10 #"COMPARE-BP"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-ball"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #" "
0 0 21 3 2 #"55"
0 0 24 3 1 #" "
0 0 21 3 2 #"-5"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 15 3 17 #"deflect-off-brick"
0 0 24 3 1 #" "
0 0 14 3 11 #"BALL-CORNER"
0 0 24 3 1 #" "
0 0 14 3 10 #"COMPARE-BP"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-ball"
0 0 24 3 1 #" "
0 0 21 3 2 #"66"
0 0 24 3 1 #" "
0 0 21 3 2 #"65"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 15 3 17 #"deflect-off-brick"
0 0 24 3 1 #" "
0 0 14 3 12 #"INITIAL-BALL"
0 0 24 3 1 #" "
0 0 14 3 10 #"COMPARE-BP"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-ball"
0 0 24 3 1 #" "
0 0 21 3 3 #"110"
0 0 24 3 1 #" "
0 0 21 3 3 #"187"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 28 #";;hurt-brick: Brick -> Brick"
0 0 24 29 1 #"\n"
0 0 17 3 57 #";;decreases the given brick's health (but not below zero)"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"hurt-brick"
0 0 24 3 1 #" "
0 0 14 3 2 #"br"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 7 #"bp-posn"
0 0 24 3 1 #" "
0 0 14 3 2 #"br"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 3 #"max"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #" ("
0 0 14 3 4 #"sub1"
0 0 24 3 2 #" ("
0 0 14 3 9 #"bp-health"
0 0 24 3 1 #" "
0 0 14 3 2 #"br"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"hurt-brick"
0 0 24 3 1 #" "
0 0 14 3 10 #"COMPARE-BP"
0 0 24 3 3 #") ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"hurt-brick"
0 0 24 3 1 #" "
0 0 14 3 7 #"BP-DEAD"
0 0 24 3 2 #") "
0 0 14 3 7 #"BP-DEAD"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"hurt-brick"
0 0 24 3 1 #" "
0 0 14 3 8 #"BP-ALIVE"
0 0 24 3 3 #") ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"65"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 49 #"#| --- Brick Collision DETECTION Functions --- |#"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";;hitting/lobr?: Ball LoBr -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 62
#";;Is the ball hitting any of the Bricks in this Listof Bricks?"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"hitting/lobr?"
0 0 24 3 1 #" "
0 0 14 3 4 #"ball"
0 0 24 3 1 #" "
0 0 14 3 4 #"lobr"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 4 #"lobr"
0 0 24 3 2 #") "
0 0 21 3 6 #"#false"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 5 #"cons?"
0 0 24 3 1 #" "
0 0 14 3 4 #"lobr"
0 0 24 3 3 #") ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 8 #"hitting?"
0 0 24 3 1 #" "
0 0 14 3 4 #"ball"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 4 #"lobr"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 13 #"hitting/lobr?"
0 0 24 3 1 #" "
0 0 14 3 4 #"ball"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 4 #"lobr"
0 0 24 3 6 #")))]))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"hitting/lobr?"
0 0 24 3 1 #" "
0 0 14 3 12 #"INITIAL-BALL"
0 0 24 3 1 #" "
0 0 14 3 7 #"LOBR3x5"
0 0 24 3 2 #") "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"hitting/lobr?"
0 0 24 3 1 #" "
0 0 14 3 11 #"MIDDLE-BALL"
0 0 24 3 1 #" "
0 0 14 3 7 #"LOBR3x5"
0 0 24 3 2 #") "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 3 #"  ("
0 0 14 3 13 #"hitting/lobr?"
0 0 24 3 1 #" "
0 0 14 3 11 #"MIDDLE-BALL"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 4 #"()) "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";;hitting?: Ball Brick -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";;Is this ball hitting this brick?"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"hitting?"
0 0 24 3 1 #" "
0 0 14 3 4 #"ball"
0 0 24 3 1 #" "
0 0 14 3 5 #"brick"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 9 #"bp-health"
0 0 24 3 1 #" "
0 0 14 3 5 #"brick"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 11 #"hitting-tb?"
0 0 24 3 1 #" "
0 0 14 3 4 #"ball"
0 0 24 3 1 #" "
0 0 14 3 5 #"brick"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 11 #"hitting-lr?"
0 0 24 3 1 #" "
0 0 14 3 4 #"ball"
0 0 24 3 1 #" "
0 0 14 3 5 #"brick"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 15 #"hitting-corner?"
0 0 24 3 1 #" "
0 0 14 3 4 #"ball"
0 0 24 3 1 #" "
0 0 14 3 5 #"brick"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 8 #"hitting?"
0 0 24 3 1 #" "
0 0 14 3 9 #"BALL-LEFT"
0 0 24 3 1 #" "
0 0 14 3 10 #"COMPARE-BP"
0 0 24 3 2 #") "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 8 #"hitting?"
0 0 24 3 1 #" "
0 0 14 3 9 #"BALL-LEFT"
0 0 24 3 1 #" "
0 0 14 3 7 #"BP-DEAD"
0 0 24 3 2 #") "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";;hitting-corner?: Ball Brick -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 48 #";;Is this ball hitting the corner of this Brick?"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"hitting-corner?"
0 0 24 3 1 #" "
0 0 14 3 2 #"bl"
0 0 24 3 1 #" "
0 0 14 3 2 #"br"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 16 #"hitting-tb-edge?"
0 0 24 3 1 #" "
0 0 14 3 2 #"bl"
0 0 24 3 1 #" "
0 0 14 3 2 #"br"
0 0 24 3 3 #") ("
0 0 14 3 16 #"hitting-lr-edge?"
0 0 24 3 1 #" "
0 0 14 3 2 #"bl"
0 0 24 3 1 #" "
0 0 14 3 2 #"br"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"hitting-corner?"
0 0 24 3 1 #" "
0 0 14 3 11 #"BALL-CORNER"
0 0 24 3 1 #" "
0 0 14 3 10 #"COMPARE-BP"
0 0 24 3 2 #") "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"hitting-corner?"
0 0 24 3 1 #" "
0 0 14 3 8 #"BALL-TOP"
0 0 24 3 1 #" "
0 0 14 3 10 #"COMPARE-BP"
0 0 24 3 2 #") "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"hitting-corner?"
0 0 24 3 1 #" "
0 0 14 3 11 #"MIDDLE-BALL"
0 0 24 3 1 #" "
0 0 14 3 7 #"BP-DEAD"
0 0 24 3 2 #") "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";;hitting-tb?: Ball Brick -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 55 #";;Is this ball hitting the top or bottom of this Brick?"
0 0 24 29 1 #"\n"
0 0 17 3 53 #";;interp. hitting? = (and touching? heading-towards?)"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"hitting-tb?"
0 0 24 3 1 #" "
0 0 14 3 2 #"bl"
0 0 24 3 1 #" "
0 0 14 3 2 #"br"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 12 #"hitting-top?"
0 0 24 3 1 #" "
0 0 14 3 2 #"bl"
0 0 24 3 1 #" "
0 0 14 3 2 #"br"
0 0 24 3 3 #") ("
0 0 14 3 12 #"hitting-bot?"
0 0 24 3 1 #" "
0 0 14 3 2 #"bl"
0 0 24 3 1 #" "
0 0 14 3 2 #"br"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 9 #"bp-health"
0 0 24 3 1 #" "
0 0 14 3 2 #"br"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"hitting-tb?"
0 0 24 3 1 #" "
0 0 14 3 8 #"BALL-BOT"
0 0 24 3 1 #" "
0 0 14 3 10 #"COMPARE-BP"
0 0 24 3 2 #") "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"hitting-tb?"
0 0 24 3 1 #" "
0 0 14 3 10 #"BALL-RIGHT"
0 0 24 3 1 #" "
0 0 14 3 10 #"COMPARE-BP"
0 0 24 3 2 #") "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"hitting-tb?"
0 0 24 3 1 #" "
0 0 14 3 8 #"BALL-BOT"
0 0 24 3 1 #" "
0 0 14 3 7 #"BP-DEAD"
0 0 24 3 2 #") "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";;hitting-lf?: Ball Brick -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 60
#";;Is this ball hitting the left or right side of this Brick?"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"hitting-lr?"
0 0 24 3 1 #" "
0 0 14 3 2 #"bl"
0 0 24 3 1 #" "
0 0 14 3 2 #"br"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 13 #"hitting-left?"
0 0 24 3 1 #" "
0 0 14 3 2 #"bl"
0 0 24 3 1 #" "
0 0 14 3 2 #"br"
0 0 24 3 3 #") ("
0 0 14 3 14 #"hitting-right?"
0 0 24 3 1 #" "
0 0 14 3 2 #"bl"
0 0 24 3 1 #" "
0 0 14 3 2 #"br"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 9 #"bp-health"
0 0 24 3 1 #" "
0 0 14 3 2 #"br"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"hitting-tb?"
0 0 24 3 1 #" "
0 0 14 3 9 #"BALL-LEFT"
0 0 24 3 1 #" "
0 0 14 3 10 #"COMPARE-BP"
0 0 24 3 2 #") "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"hitting-tb?"
0 0 24 3 1 #" "
0 0 14 3 8 #"BALL-BOT"
0 0 24 3 1 #" "
0 0 14 3 7 #"BP-DEAD"
0 0 24 3 2 #") "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 41 #";;hitting-tb-edge?: Ball Brick -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 63
#";;Is this ball hitting the top or bottom corners of this Brick?"
0 0 24 29 1 #"\n"
0 0 17 3 53 #";;interp. hitting? = (and touching? heading-towards?)"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"hitting-tb-edge?"
0 0 24 3 1 #" "
0 0 14 3 2 #"bl"
0 0 24 3 1 #" "
0 0 14 3 2 #"br"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 17 #"hitting-top-edge?"
0 0 24 3 1 #" "
0 0 14 3 2 #"bl"
0 0 24 3 1 #" "
0 0 14 3 2 #"br"
0 0 24 3 3 #") ("
0 0 14 3 17 #"hitting-bot-edge?"
0 0 24 3 1 #" "
0 0 14 3 2 #"bl"
0 0 24 3 1 #" "
0 0 14 3 2 #"br"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 9 #"bp-health"
0 0 24 3 1 #" "
0 0 14 3 2 #"br"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 16 #"hitting-tb-edge?"
0 0 24 3 1 #" "
0 0 14 3 11 #"BALL-CORNER"
0 0 24 3 1 #" "
0 0 14 3 10 #"COMPARE-BP"
0 0 24 3 2 #") "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 16 #"hitting-tb-edge?"
0 0 24 3 1 #" "
0 0 14 3 10 #"BALL-RIGHT"
0 0 24 3 1 #" "
0 0 14 3 10 #"COMPARE-BP"
0 0 24 3 2 #") "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 16 #"hitting-tb-edge?"
0 0 24 3 1 #" "
0 0 14 3 11 #"BALL-CORNER"
0 0 24 3 1 #" "
0 0 14 3 7 #"BP-DEAD"
0 0 24 3 2 #") "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 41 #";;hitting-lr-edge?: Ball Brick -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 63
#";;Is this ball hitting the left or right corners of this Brick?"
0 0 24 29 1 #"\n"
0 0 17 3 53 #";;interp. hitting? = (and touching? heading-towards?)"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"hitting-lr-edge?"
0 0 24 3 1 #" "
0 0 14 3 2 #"bl"
0 0 24 3 1 #" "
0 0 14 3 2 #"br"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 18 #"hitting-left-edge?"
0 0 24 3 1 #" "
0 0 14 3 2 #"bl"
0 0 24 3 1 #" "
0 0 14 3 2 #"br"
0 0 24 3 3 #") ("
0 0 14 3 19 #"hitting-right-edge?"
0 0 24 3 1 #" "
0 0 14 3 2 #"bl"
0 0 24 3 1 #" "
0 0 14 3 2 #"br"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 9 #"bp-health"
0 0 24 3 1 #" "
0 0 14 3 2 #"br"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 16 #"hitting-lr-edge?"
0 0 24 3 1 #" "
0 0 14 3 11 #"BALL-CORNER"
0 0 24 3 1 #" "
0 0 14 3 10 #"COMPARE-BP"
0 0 24 3 2 #") "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 16 #"hitting-lr-edge?"
0 0 24 3 1 #" "
0 0 14 3 10 #"BALL-RIGHT"
0 0 24 3 1 #" "
0 0 14 3 10 #"COMPARE-BP"
0 0 24 3 2 #") "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 16 #"hitting-lr-edge?"
0 0 24 3 1 #" "
0 0 14 3 11 #"BALL-CORNER"
0 0 24 3 1 #" "
0 0 14 3 7 #"BP-DEAD"
0 0 24 3 2 #") "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";;aligned-tb?: Ball Brick -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 51 #";;Is this ball touching this brick's top or bottom?"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"aligned-tb?"
0 0 24 3 1 #" "
0 0 14 3 2 #"bl"
0 0 24 3 1 #" "
0 0 14 3 2 #"br"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 3 #"abs"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 6 #"ball-x"
0 0 24 3 1 #" "
0 0 14 3 2 #"bl"
0 0 24 3 3 #") ("
0 0 14 3 6 #"posn-x"
0 0 24 3 2 #" ("
0 0 14 3 7 #"bp-posn"
0 0 24 3 1 #" "
0 0 14 3 2 #"br"
0 0 24 3 6 #")))) ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 11 #"BRICK-WIDTH"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #") )"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 3 #"abs"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 6 #"ball-y"
0 0 24 3 1 #" "
0 0 14 3 2 #"bl"
0 0 24 3 3 #") ("
0 0 14 3 6 #"posn-y"
0 0 24 3 2 #" ("
0 0 14 3 7 #"bp-posn"
0 0 24 3 1 #" "
0 0 14 3 2 #"br"
0 0 24 3 6 #")))) ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 12 #"BRICK-HEIGHT"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 14 3 11 #"BALL-RADIUS"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"aligned-tb?"
0 0 24 3 1 #" "
0 0 14 3 8 #"BALL-TOP"
0 0 24 3 1 #" "
0 0 14 3 10 #"COMPARE-BP"
0 0 24 3 2 #") "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"aligned-tb?"
0 0 24 3 1 #" "
0 0 14 3 11 #"BALL-CORNER"
0 0 24 3 1 #" "
0 0 14 3 10 #"COMPARE-BP"
0 0 24 3 2 #") "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"aligned-tb?"
0 0 24 3 1 #" "
0 0 14 3 8 #"BALL-TOP"
0 0 24 3 1 #" "
0 0 14 3 7 #"BP-DEAD"
0 0 24 3 2 #") "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";;aligned-tb?: Ball Brick -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 59
#";;Is this ball touching this brick's top or bottom corners?"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"aligned-tb-edge?"
0 0 24 3 1 #" "
0 0 14 3 2 #"bl"
0 0 24 3 1 #" "
0 0 14 3 2 #"br"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 9 #"in-range?"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 2 #" ("
0 0 14 3 7 #"bp-posn"
0 0 24 3 1 #" "
0 0 14 3 2 #"br"
0 0 24 3 4 #")) ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 11 #"BRICK-WIDTH"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 14 3 11 #"BALL-RADIUS"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 6 #"ball-x"
0 0 24 3 1 #" "
0 0 14 3 2 #"bl"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 2 #" ("
0 0 14 3 7 #"bp-posn"
0 0 24 3 1 #" "
0 0 14 3 2 #"br"
0 0 24 3 4 #")) ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 11 #"BRICK-WIDTH"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 14 3 11 #"BALL-RADIUS"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 9 #"in-range?"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 2 #" ("
0 0 14 3 7 #"bp-posn"
0 0 24 3 1 #" "
0 0 14 3 2 #"br"
0 0 24 3 4 #")) ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 11 #"BRICK-WIDTH"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 6 #"ball-x"
0 0 24 3 1 #" "
0 0 14 3 2 #"bl"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 2 #" ("
0 0 14 3 7 #"bp-posn"
0 0 24 3 1 #" "
0 0 14 3 2 #"br"
0 0 24 3 4 #")) ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 11 #"BRICK-WIDTH"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 3 #"abs"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 6 #"ball-y"
0 0 24 3 1 #" "
0 0 14 3 2 #"bl"
0 0 24 3 3 #") ("
0 0 14 3 6 #"posn-y"
0 0 24 3 2 #" ("
0 0 14 3 7 #"bp-posn"
0 0 24 3 1 #" "
0 0 14 3 2 #"br"
0 0 24 3 6 #")))) ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 12 #"BRICK-HEIGHT"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 14 3 11 #"BALL-RADIUS"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 16 #"aligned-tb-edge?"
0 0 24 3 1 #" "
0 0 14 3 11 #"BALL-CORNER"
0 0 24 3 1 #" "
0 0 14 3 10 #"COMPARE-BP"
0 0 24 3 2 #") "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 16 #"aligned-tb-edge?"
0 0 24 3 1 #" "
0 0 14 3 11 #"BALL-CORNER"
0 0 24 3 1 #" "
0 0 14 3 7 #"BP-DEAD"
0 0 24 3 2 #") "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 16 #"aligned-tb-edge?"
0 0 24 3 1 #" "
0 0 14 3 8 #"BALL-TOP"
0 0 24 3 1 #" "
0 0 14 3 10 #"COMPARE-BP"
0 0 24 3 2 #") "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";;aligned-lr?: Ball Brick -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 56 #";;Is this ball touching this brick's left or right side?"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"aligned-lr?"
0 0 24 3 1 #" "
0 0 14 3 2 #"bl"
0 0 24 3 1 #" "
0 0 14 3 2 #"br"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 2 #"<="
0 0 24 3 2 #" ("
0 0 14 3 3 #"abs"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 6 #"ball-y"
0 0 24 3 1 #" "
0 0 14 3 2 #"bl"
0 0 24 3 3 #") ("
0 0 14 3 6 #"posn-y"
0 0 24 3 2 #" ("
0 0 14 3 7 #"bp-posn"
0 0 24 3 1 #" "
0 0 14 3 2 #"br"
0 0 24 3 6 #")))) ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 12 #"BRICK-HEIGHT"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 2 #"<="
0 0 24 3 2 #" ("
0 0 14 3 3 #"abs"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 6 #"ball-x"
0 0 24 3 1 #" "
0 0 14 3 2 #"bl"
0 0 24 3 3 #") ("
0 0 14 3 6 #"posn-x"
0 0 24 3 2 #" ("
0 0 14 3 7 #"bp-posn"
0 0 24 3 1 #" "
0 0 14 3 2 #"br"
0 0 24 3 6 #")))) ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 11 #"BRICK-WIDTH"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 14 3 11 #"BALL-RADIUS"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"aligned-lr?"
0 0 24 3 1 #" "
0 0 14 3 9 #"BALL-LEFT"
0 0 24 3 1 #" "
0 0 14 3 10 #"COMPARE-BP"
0 0 24 3 2 #") "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"aligned-lr?"
0 0 24 3 1 #" "
0 0 14 3 10 #"BALL-RIGHT"
0 0 24 3 1 #" "
0 0 14 3 10 #"COMPARE-BP"
0 0 24 3 2 #") "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"aligned-lr?"
0 0 24 3 1 #" "
0 0 14 3 12 #"INITIAL-BALL"
0 0 24 3 1 #" "
0 0 14 3 10 #"COMPARE-BP"
0 0 24 3 2 #") "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 41 #";;aligned-lr-edge?: Ball Brick -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 56 #";;Is this ball touching this brick's left or right edge?"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"aligned-lr-edge?"
0 0 24 3 1 #" "
0 0 14 3 2 #"bl"
0 0 24 3 1 #" "
0 0 14 3 2 #"br"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 9 #"in-range?"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 24 3 2 #" ("
0 0 14 3 7 #"bp-posn"
0 0 24 3 1 #" "
0 0 14 3 2 #"br"
0 0 24 3 4 #")) ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 12 #"BRICK-HEIGHT"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 14 3 11 #"BALL-RADIUS"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 6 #"ball-y"
0 0 24 3 1 #" "
0 0 14 3 2 #"bl"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 24 3 2 #" ("
0 0 14 3 7 #"bp-posn"
0 0 24 3 1 #" "
0 0 14 3 2 #"br"
0 0 24 3 4 #")) ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 12 #"BRICK-HEIGHT"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 14 3 11 #"BALL-RADIUS"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 9 #"in-range?"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 24 3 2 #" ("
0 0 14 3 7 #"bp-posn"
0 0 24 3 1 #" "
0 0 14 3 2 #"br"
0 0 24 3 4 #")) ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 12 #"BRICK-HEIGHT"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 6 #"ball-y"
0 0 24 3 1 #" "
0 0 14 3 2 #"bl"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 24 3 2 #" ("
0 0 14 3 7 #"bp-posn"
0 0 24 3 1 #" "
0 0 14 3 2 #"br"
0 0 24 3 4 #")) ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 12 #"BRICK-HEIGHT"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 3 #"abs"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 6 #"ball-x"
0 0 24 3 1 #" "
0 0 14 3 2 #"bl"
0 0 24 3 3 #") ("
0 0 14 3 6 #"posn-x"
0 0 24 3 2 #" ("
0 0 14 3 7 #"bp-posn"
0 0 24 3 1 #" "
0 0 14 3 2 #"br"
0 0 24 3 6 #")))) ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 11 #"BRICK-WIDTH"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 14 3 11 #"BALL-RADIUS"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 16 #"aligned-lr-edge?"
0 0 24 3 1 #" "
0 0 14 3 11 #"BALL-CORNER"
0 0 24 3 1 #" "
0 0 14 3 10 #"COMPARE-BP"
0 0 24 3 2 #") "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 16 #"aligned-lr-edge?"
0 0 24 3 1 #" "
0 0 14 3 11 #"BALL-CORNER"
0 0 24 3 1 #" "
0 0 14 3 7 #"BP-DEAD"
0 0 24 3 2 #") "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 16 #"aligned-lr-edge?"
0 0 24 3 1 #" "
0 0 14 3 8 #"BALL-TOP"
0 0 24 3 1 #" "
0 0 14 3 10 #"COMPARE-BP"
0 0 24 3 2 #") "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";;hitting-left?: Ball Brick -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 51 #";;Is this ball hitting the left side of this Brick?"
0 0 24 29 1 #"\n"
0 0 17 3 53 #";;interp. hitting? = (and touching? heading-towards?)"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"hitting-left?"
0 0 24 3 1 #" "
0 0 14 3 2 #"bl"
0 0 24 3 1 #" "
0 0 14 3 2 #"br"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 11 #"aligned-lr?"
0 0 24 3 1 #" "
0 0 14 3 2 #"bl"
0 0 24 3 1 #" "
0 0 14 3 2 #"br"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 9 #"positive?"
0 0 24 3 2 #" ("
0 0 14 3 7 #"ball-vy"
0 0 24 3 1 #" "
0 0 14 3 2 #"bl"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"hitting-left?"
0 0 24 3 1 #" "
0 0 14 3 9 #"BALL-LEFT"
0 0 24 3 1 #" "
0 0 14 3 10 #"COMPARE-BP"
0 0 24 3 2 #") "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"hitting-left?"
0 0 24 3 1 #" "
0 0 14 3 11 #"BALL-CORNER"
0 0 24 3 1 #" "
0 0 14 3 10 #"COMPARE-BP"
0 0 24 3 2 #") "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";;hitting-top?: Ball Brick -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 45 #";;Is this ball hitting the top of this Brick?"
0 0 24 29 1 #"\n"
0 0 17 3 53 #";;interp. hitting? = (and touching? heading-towards?)"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"hitting-top?"
0 0 24 3 1 #" "
0 0 14 3 2 #"bl"
0 0 24 3 1 #" "
0 0 14 3 2 #"br"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 11 #"aligned-tb?"
0 0 24 3 1 #" "
0 0 14 3 2 #"bl"
0 0 24 3 1 #" "
0 0 14 3 2 #"br"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 9 #"positive?"
0 0 24 3 2 #" ("
0 0 14 3 7 #"ball-vy"
0 0 24 3 1 #" "
0 0 14 3 2 #"bl"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"hitting-left?"
0 0 24 3 1 #" "
0 0 14 3 8 #"BALL-TOP"
0 0 24 3 1 #" "
0 0 14 3 10 #"COMPARE-BP"
0 0 24 3 2 #") "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"hitting-left?"
0 0 24 3 1 #" "
0 0 14 3 11 #"BALL-CORNER"
0 0 24 3 1 #" "
0 0 14 3 10 #"COMPARE-BP"
0 0 24 3 2 #") "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";;hitting-bot?: Ball Brick -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 48 #";;Is this ball hitting the bottom of this Brick?"
0 0 24 29 1 #"\n"
0 0 17 3 53 #";;interp. hitting? = (and touching? heading-towards?)"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"hitting-bot?"
0 0 24 3 1 #" "
0 0 14 3 2 #"bl"
0 0 24 3 1 #" "
0 0 14 3 2 #"br"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 11 #"aligned-tb?"
0 0 24 3 1 #" "
0 0 14 3 2 #"bl"
0 0 24 3 1 #" "
0 0 14 3 2 #"br"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 9 #"negative?"
0 0 24 3 2 #" ("
0 0 14 3 7 #"ball-vy"
0 0 24 3 1 #" "
0 0 14 3 2 #"bl"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"hitting-bot?"
0 0 24 3 1 #" "
0 0 14 3 8 #"BALL-BOT"
0 0 24 3 1 #" "
0 0 14 3 10 #"COMPARE-BP"
0 0 24 3 2 #") "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"hitting-bot?"
0 0 24 3 1 #" "
0 0 14 3 11 #"BALL-CORNER"
0 0 24 3 1 #" "
0 0 14 3 10 #"COMPARE-BP"
0 0 24 3 2 #") "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";;hitting-right?: Ball Brick -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 52 #";;Is this ball hitting the right side of this Brick?"
0 0 24 29 1 #"\n"
0 0 17 3 53 #";;interp. hitting? = (and touching? heading-towards?)"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"hitting-right?"
0 0 24 3 1 #" "
0 0 14 3 2 #"bl"
0 0 24 3 1 #" "
0 0 14 3 2 #"br"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 11 #"aligned-lr?"
0 0 24 3 1 #" "
0 0 14 3 2 #"bl"
0 0 24 3 1 #" "
0 0 14 3 2 #"br"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 9 #"negative?"
0 0 24 3 2 #" ("
0 0 14 3 7 #"ball-vy"
0 0 24 3 1 #" "
0 0 14 3 2 #"bl"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"hitting-right?"
0 0 24 3 1 #" "
0 0 14 3 10 #"BALL-RIGHT"
0 0 24 3 1 #" "
0 0 14 3 10 #"COMPARE-BP"
0 0 24 3 2 #") "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"hitting-right?"
0 0 24 3 1 #" "
0 0 14 3 11 #"BALL-CORNER"
0 0 24 3 1 #" "
0 0 14 3 10 #"COMPARE-BP"
0 0 24 3 2 #") "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 42 #";;hitting-top-edge?: Ball Brick -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 45 #";;Is this ball next to the top of this Brick?"
0 0 24 29 1 #"\n"
0 0 17 3 53 #";;interp. hitting? = (and touching? heading-towards?)"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 17 #"hitting-top-edge?"
0 0 24 3 1 #" "
0 0 14 3 2 #"bl"
0 0 24 3 1 #" "
0 0 14 3 2 #"br"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 16 #"aligned-tb-edge?"
0 0 24 3 1 #" "
0 0 14 3 2 #"bl"
0 0 24 3 1 #" "
0 0 14 3 2 #"br"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 9 #"positive?"
0 0 24 3 2 #" ("
0 0 14 3 7 #"ball-vy"
0 0 24 3 1 #" "
0 0 14 3 2 #"bl"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 17 #"hitting-top-edge?"
0 0 24 3 1 #" "
0 0 14 3 8 #"BALL-TOP"
0 0 24 3 1 #" "
0 0 14 3 10 #"COMPARE-BP"
0 0 24 3 2 #") "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 17 #"hitting-top-edge?"
0 0 24 3 1 #" "
0 0 14 3 14 #"BALL-CORNER-BR"
0 0 24 3 1 #" "
0 0 14 3 10 #"COMPARE-BP"
0 0 24 3 2 #") "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 42 #";;hitting-bot-edge?: Ball Brick -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 48 #";;Is this ball next to the bottom of this Brick?"
0 0 24 29 1 #"\n"
0 0 17 3 53 #";;interp. hitting? = (and touching? heading-towards?)"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 17 #"hitting-bot-edge?"
0 0 24 3 1 #" "
0 0 14 3 2 #"bl"
0 0 24 3 1 #" "
0 0 14 3 2 #"br"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 16 #"aligned-tb-edge?"
0 0 24 3 1 #" "
0 0 14 3 2 #"bl"
0 0 24 3 1 #" "
0 0 14 3 2 #"br"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 9 #"negative?"
0 0 24 3 2 #" ("
0 0 14 3 7 #"ball-vy"
0 0 24 3 1 #" "
0 0 14 3 2 #"bl"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 17 #"hitting-bot-edge?"
0 0 24 3 1 #" "
0 0 14 3 8 #"BALL-TOP"
0 0 24 3 1 #" "
0 0 14 3 10 #"COMPARE-BP"
0 0 24 3 2 #") "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 17 #"hitting-bot-edge?"
0 0 24 3 1 #" "
0 0 14 3 11 #"BALL-CORNER"
0 0 24 3 1 #" "
0 0 14 3 10 #"COMPARE-BP"
0 0 24 3 2 #") "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 43 #";;hitting-left-edge?: Ball Brick -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 46 #";;Is this ball next to the left of this Brick?"
0 0 24 29 1 #"\n"
0 0 17 3 53 #";;interp. hitting? = (and touching? heading-towards?)"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 18 #"hitting-left-edge?"
0 0 24 3 1 #" "
0 0 14 3 2 #"bl"
0 0 24 3 1 #" "
0 0 14 3 2 #"br"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 16 #"aligned-lr-edge?"
0 0 24 3 1 #" "
0 0 14 3 2 #"bl"
0 0 24 3 1 #" "
0 0 14 3 2 #"br"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 9 #"positive?"
0 0 24 3 2 #" ("
0 0 14 3 7 #"ball-vy"
0 0 24 3 1 #" "
0 0 14 3 2 #"bl"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 16 #"hitting-lr-edge?"
0 0 24 3 1 #" "
0 0 14 3 8 #"BALL-TOP"
0 0 24 3 1 #" "
0 0 14 3 10 #"COMPARE-BP"
0 0 24 3 2 #") "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 16 #"hitting-lr-edge?"
0 0 24 3 1 #" "
0 0 14 3 11 #"BALL-CORNER"
0 0 24 3 1 #" "
0 0 14 3 10 #"COMPARE-BP"
0 0 24 3 2 #") "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 44 #";;hitting-right-edge?: Ball Brick -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 47 #";;Is this ball next to the right of this Brick?"
0 0 24 29 1 #"\n"
0 0 17 3 53 #";;interp. hitting? = (and touching? heading-towards?)"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 19 #"hitting-right-edge?"
0 0 24 3 1 #" "
0 0 14 3 2 #"bl"
0 0 24 3 1 #" "
0 0 14 3 2 #"br"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 16 #"aligned-lr-edge?"
0 0 24 3 1 #" "
0 0 14 3 2 #"bl"
0 0 24 3 1 #" "
0 0 14 3 2 #"br"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 9 #"negative?"
0 0 24 3 2 #" ("
0 0 14 3 7 #"ball-vy"
0 0 24 3 1 #" "
0 0 14 3 2 #"bl"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 19 #"hitting-right-edge?"
0 0 24 3 1 #" "
0 0 14 3 8 #"BALL-TOP"
0 0 24 3 1 #" "
0 0 14 3 10 #"COMPARE-BP"
0 0 24 3 2 #") "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 19 #"hitting-right-edge?"
0 0 24 3 1 #" "
0 0 14 3 11 #"BALL-CORNER"
0 0 24 3 1 #" "
0 0 14 3 10 #"COMPARE-BP"
0 0 24 3 2 #") "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 34 #"#| --- Displaying Functions --- |#"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";play-ended: World Boolean -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 62
#";; produced an end of game message onto the image of the World"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"play-ended"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #" "
0 0 14 3 3 #"won"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 7 #"overlay"
0 0 24 3 2 #" ("
0 0 14 3 11 #"end-message"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #" "
0 0 14 3 3 #"won"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 9 #"gameboard"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"play-ended"
0 0 24 3 1 #" "
0 0 14 3 8 #"WORLD3x5"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 6           4 21 23594
(
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:crop (#(struct:poi"
 #"nt 0 0) #(struct:point 220 0) #(struct:point 220 200) #(struct:point"
 #" 0 200)) #(struct:translate 0 0 #(struct:overlay #(struct:translate "
 #"25.0 79.0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #"
 #"(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(stru"
 #"ct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:translat"
 #"e 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(str"
 #"uct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:t"
 #"ranslate 6.0 10.5 #(struct:text \"Y\" 0 1 \"maroon\" 18 #f swiss nor"
 #"mal normal #f))) #(struct:translate 12.0 0.0 #(struct:translate 5.0 "
 #"10.5 #(struct:text \"o\" 0 1 \"maroon\" 18 #f swiss normal normal #f"
 #"))))) #(struct:translate 22.0 0.0 #(struct:translate 5.0 10.5 #(stru"
 #"ct:text \"u\" 0 1 \"maroon\" 18 #f swiss normal normal #f))))) #(str"
 #"uct:translate 32.0 0.0 #(struct:translate 2.5 10.5 #(struct:text \" "
 #"\" 0 1 \"maroon\" 18 #f swiss normal normal #f))))) #(struct:transla"
 #"te 37.0 0.0 #(struct:translate 8.5 10.5 #(struct:text \"W\" 0 1 \"ma"
 #"roon\" 18 #f swiss normal normal #f))))) #(struct:translate 54.0 0.0"
 #" #(struct:translate 2.0 10.5 #(struct:text \"i\" 0 1 \"maroon\" 18 #"
 #"f swiss normal normal #f))))) #(struct:translate 58.0 0.0 #(struct:t"
 #"ranslate 5.0 10.5 #(struct:text \"n\" 0 1 \"maroon\" 18 #f swiss nor"
 #"mal normal #f))))) #(struct:translate 68.0 0.0 #(struct:translate 3."
 #"0 10.5 #(struct:text \"!\" 0 1 \"maroon\" 18 #f swiss normal normal "
 #"#f))))) #(struct:translate 0 21.0 #(struct:overlay #(struct:translat"
 #"e 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(str"
 #"uct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:o"
 #"verlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 "
 #"0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:"
 #"translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overl"
 #"ay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #("
 #"struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tran"
 #"slate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #"
 #"(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(stru"
 #"ct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:translat"
 #"e 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(str"
 #"uct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:o"
 #"verlay #(struct:translate 0 0 #(struct:translate 6.0 10.5 #(struct:t"
 #"ext \"P\" 0 1 \"maroon\" 18 #f swiss normal normal #f))) #(struct:tr"
 #"anslate 12.0 0.0 #(struct:translate 3.0 10.5 #(struct:text \"r\" 0 1"
 #" \"maroon\" 18 #f swiss normal normal #f))))) #(struct:translate 18."
 #"0 0.0 #(struct:translate 5.0 10.5 #(struct:text \"e\" 0 1 \"maroon\""
 #" 18 #f swiss normal normal #f))))) #(struct:translate 28.0 0.0 #(str"
 #"uct:translate 4.5 10.5 #(struct:text \"s\" 0 1 \"maroon\" 18 #f swis"
 #"s normal normal #f))))) #(struct:translate 37.0 0.0 #(struct:transla"
 #"te 4.5 10.5 #(struct:text \"s\" 0 1 \"maroon\" 18 #f swiss normal no"
 #"rmal #f))))) #(struct:translate 46.0 0.0 #(struct:translate 2.5 10.5"
 #" #(struct:text \" \" 0 1 \"maroon\" 18 #f swiss normal normal #f))))"
 #") #(struct:translate 51.0 0.0 #(struct:translate 1.5 10.5 #(struct:t"
 #"ext \"'\" 0 1 \"maroon\" 18 #f swiss normal normal #f))))) #(struct:"
 #"translate 54.0 0.0 #(struct:translate 3.0 10.5 #(struct:text \"r\" 0"
 #" 1 \"maroon\" 18 #f swiss normal normal #f))))) #(struct:translate 6"
 #"0.0 0.0 #(struct:translate 1.5 10.5 #(struct:text \"'\" 0 1 \"maroon"
 #"\" 18 #f swiss normal normal #f))))) #(struct:translate 63.0 0.0 #(s"
 #"truct:translate 2.5 10.5 #(struct:text \" \" 0 1 \"maroon\" 18 #f sw"
 #"iss normal normal #f))))) #(struct:translate 68.0 0.0 #(struct:trans"
 #"late 2.5 10.5 #(struct:text \"t\" 0 1 \"maroon\" 18 #f swiss normal "
 #"normal #f))))) #(struct:translate 73.0 0.0 #(struct:translate 5.0 10"
 #".5 #(struct:text \"o\" 0 1 \"maroon\" 18 #f swiss normal normal #f))"
 #"))) #(struct:translate 83.0 0.0 #(struct:translate 2.5 10.5 #(struct"
 #":text \" \" 0 1 \"maroon\" 18 #f swiss normal normal #f))))) #(struc"
 #"t:translate 88.0 0.0 #(struct:translate 5.0 10.5 #(struct:text \"p\""
 #" 0 1 \"maroon\" 18 #f swiss normal normal #f))))) #(struct:translate"
 #" 98.0 0.0 #(struct:translate 2.0 10.5 #(struct:text \"l\" 0 1 \"maro"
 #"on\" 18 #f swiss normal normal #f))))) #(struct:translate 102.0 0.0 "
 #"#(struct:translate 5.0 10.5 #(struct:text \"a\" 0 1 \"maroon\" 18 #f"
 #" swiss normal normal #f))))) #(struct:translate 112.0 0.0 #(struct:t"
 #"ranslate 4.5 10.5 #(struct:text \"y\" 0 1 \"maroon\" 18 #f swiss nor"
 #"mal normal #f))))) #(struct:translate 121.0 0.0 #(struct:translate 2"
 #".5 10.5 #(struct:text \" \" 0 1 \"maroon\" 18 #f swiss normal normal"
 #" #f))))) #(struct:translate 126.0 0.0 #(struct:translate 5.0 10.5 #("
 #"struct:text \"a\" 0 1 \"maroon\" 18 #f swiss normal normal #f))))) #"
 #"(struct:translate 136.0 0.0 #(struct:translate 5.0 10.5 #(struct:tex"
 #"t \"g\" 0 1 \"maroon\" 18 #f swiss normal normal #f))))) #(struct:tr"
 #"anslate 146.0 0.0 #(struct:translate 5.0 10.5 #(struct:text \"a\" 0 "
 #"1 \"maroon\" 18 #f swiss normal normal #f))))) #(struct:translate 15"
 #"6.0 0.0 #(struct:translate 2.0 10.5 #(struct:text \"i\" 0 1 \"maroon"
 #"\" 18 #f swiss normal normal #f))))) #(struct:translate 160.0 0.0 #("
 #"struct:translate 5.0 10.5 #(struct:text \"n\" 0 1 \"maroon\" 18 #f s"
 #"wiss normal normal #f))))))) #(struct:translate 0 0 #(struct:overlay"
 #" #(struct:crop (#(struct:point 0 0) #(struct:point 220 0) #(struct:p"
 #"oint 220 200) #(struct:point 0 200)) #(struct:translate 0 0 #(struct"
 #":translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) "
 #"#(struct:pulled-point 0 0 220 0 0 0) #(struct:pulled-point 0 0 220 2"
 #"00 0 0) #(struct:pulled-point 0 0 "
 #"0 200 0 0)) outline #(struct:pen \"black\" 2 solid round round))))) "
 #"#(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0"
 #" 0 0 0) #(struct:pulled-point 0 0 220 0 0 0) #(struct:pulled-point 0"
 #" 0 220 200 0 0) #(struct:pulled-point 0 0 0 200 0 0)) outline \"tran"
 #"sparent\")))))))) #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overla"
 #"y #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct"
 #":point 220 0) #(struct:point 220 200) #(struct:point 0 200)) #(struc"
 #"t:translate 0 0 #(struct:overlay #(struct:translate 9.5 187.0 #(stru"
 #"ct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:translat"
 #"e 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(str"
 #"uct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:o"
 #"verlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 "
 #"0 #(struct:translate 3.5 7.0 #(struct:text \"S\" 0 1 \"black\" 11 #f"
 #" swiss normal normal #f))) #(struct:translate 7.0 0.0 #(struct:trans"
 #"late 3.0 7.0 #(struct:text \"c\" 0 1 \"black\" 11 #f swiss normal no"
 #"rmal #f))))) #(struct:translate 13.0 0.0 #(struct:translate 3.0 7.0 "
 #"#(struct:text \"o\" 0 1 \"black\" 11 #f swiss normal normal #f))))) "
 #"#(struct:translate 19.0 0.0 #(struct:translate 2.0 7.0 #(struct:text"
 #" \"r\" 0 1 \"black\" 11 #f swiss normal normal #f))))) #(struct:tran"
 #"slate 23.0 0.0 #(struct:translate 3.0 7.0 #(struct:text \"e\" 0 1 \""
 #"black\" 11 #f swiss normal normal #f))))) #(struct:translate 29.0 0."
 #"0 #(struct:translate 1.5 7.0 #(struct:text \":\" 0 1 \"black\" 11 #f"
 #" swiss normal normal #f))))) #(struct:translate 32.0 0.0 #(struct:tr"
 #"anslate 1.5 7.0 #(struct:text \" \" 0 1 \"black\" 11 #f swiss normal"
 #" normal #f))))) #(struct:translate 35.0 0.0 #(struct:translate 3.0 7"
 #".0 #(struct:text \"0\" 0 1 \"black\" 11 #f swiss normal normal #f)))"
 #")) #(struct:translate 0 0 #(struct:overlay #(struct:crop (#(struct:p"
 #"oint 0 0) #(struct:point 220 0) #(struct:point 220 200) #(struct:poi"
 #"nt 0 200)) #(struct:translate 0 0 #(struct:translate 0 0 #(struct:po"
 #"lygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 "
 #"220 0 0 0) #(struct:pulled-point 0 0 220 200 0 0) #(struct:pulled-po"
 #"int 0 0 0 200 0 0)) outline #(struct:pen \"black\" 2 solid round rou"
 #"nd))))) #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-poi"
 #"nt 0 0 0 0 0 0) #(struct:pulled-point 0 0 220 0 0 0) #(struct:pulled"
 #"-point 0 0 220 200 0 0) #(struct:pulled-point 0 0 0 200 0 0)) outlin"
 #"e \"transparent\")))))))) #(struct:translate 0 0 #(struct:crop (#(st"
 #"ruct:point 0 0) #(struct:point 220 0) #(struct:point 220 200) #(stru"
 #"ct:point 0 200)) #(struct:translate 0 0 #(struct:overlay #(struct:tr"
 #"anslate 171.0 187.0 #(struct:overlay #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 0 0 #(struct:overlay #(struct:translate "
 #"0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struc"
 #"t:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:ove"
 #"rlay #(struct:translate 0 0 #(struct:translate 3.0 7.0 #(struct:text"
 #" \"L\" 0 1 \"black\" 11 #f swiss normal normal #f))) #(struct:transl"
 #"ate 6.0 0.0 #(struct:translate 1.0 7.0 #(struct:text \"i\" 0 1 \"bla"
 #"ck\" 11 #f swiss normal normal #f))))) #(struct:translate 8.0 0.0 #("
 #"struct:translate 3.0 7.0 #(struct:text \"v\" 0 1 \"black\" 11 #f swi"
 #"ss normal normal #f))))) #(struct:translate 14.0 0.0 #(struct:transl"
 #"ate 3.0 7.0 #(struct:text \"e\" 0 1 \"black\" 11 #f swiss normal nor"
 #"mal #f))))) #(struct:translate 20.0 0.0 #(struct:translate 3.0 7.0 #"
 #"(struct:text \"s\" 0 1 \"black\" 11 #f swiss normal normal #f))))) #"
 #"(struct:translate 26.0 0.0 #(struct:translate 1.5 7.0 #(struct:text "
 #"\":\" 0 1 \"black\" 11 #f swiss normal normal #f))))) #(struct:trans"
 #"late 29.0 0.0 #(struct:translate 1.5 7.0 #(struct:text \" \" 0 1 \"b"
 #"lack\" 11 #f swiss normal normal #f))))) #(struct:translate 32.0 0.0"
 #" #(struct:translate 3.0 7.0 #(struct:text \"3\" 0 1 \"black\" 11 #f "
 #"swiss normal normal #f))))) #(struct:translate 0 0 #(struct:overlay "
 #"#(struct:crop (#(struct:point 0 0) #(struct:point 220 0) #(struct:po"
 #"int 220 200) #(struct:point 0 200)) #(struct:translate 0 0 #(struct:"
 #"translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #"
 #"(struct:pulled-point 0 0 220 0 0 0) #(struct:pulled-point 0 0 220 20"
 #"0 0 0) #(struct:pulled-point 0 0 0 200 0 0)) outline #(struct:pen \""
 #"black\" 2 solid round round))))) #(struct:translate 0 0 #(struct:pol"
 #"ygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 2"
 #"20 0 0 0) #(struct:pulled-point 0 0 220 200 0 0) #(struct:pulled-poi"
 #"nt 0 0 0 200 0 0)) outline \"transparent\")))))))))) #(struct:transl"
 #"ate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 220 0) #(s"
 #"truct:point 220 200) #(struct:point 0 200)) #(struct:translate 0 0 #"
 #"(struct:overlay #(struct:translate 104 181 #(struct:translate 6 6 #("
 #"struct:ellipse 12 12 0 255 \"blue\"))) #(struct:translate 0 0 #(stru"
 #"ct:overlay #(struct:crop (#(struct:point 0 0) #(struct:point 220 0) "
 #"#(struct:point 220 200) #(struct:point 0 200)) #(struct:translate 0 "
 #"0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0"
 #" 0 0 0 0) #(struct:pulled-point 0 0 220 0 0 0) #(struct:pulled-point"
 #" 0 0 220 200 0 0) #(struct:pulled-point 0 0 0 200 0 0)) outline #(st"
 #"ruct:pen \"black\" 2 solid round round))))) #(struct:translate 0 0 #"
 #"(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-"
 #"point 0 0 220 0 0 0) #(struct:pulled-point 0 0 220 200 0 0) #(struct"
 #":pulled-point 0 0 0 200 0 0)) outline \"transparent\")))))))))) #(st"
 #"ruct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point"
 #" 220 0) #(struct:point 220 200) #(struct:point 0 200)) #(struct:tran"
 #"slate 0 0 #(struct:overlay #(struct:translate 80 190 #(struct:transl"
 #"ate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struc"
 #"t:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 10 0 0) #("
 #"struct:pulled-point 0 0 0 10 0 0)) 255 \"red\"))) #(struct:translate"
 #" 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 220 0) #(stru"
 #"ct:point 220 200) #(struct:point 0 200)) #(struct:translate 0 0 #(st"
 #"ruct:overlay #(struct:translate 145 35 #(struct:overlay #(struct:cro"
 #"p (#(struct:point 0 0) #(struct:point 30 0) #(struct:point 30 10) #("
 #"struct:point 0 10)) #(struct:translate 0 0 #(struct:translate 0 0 #("
 #"struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-p"
 #"oint 0 0 30 0 0 0) #(struct:pulled-point 0 0 30 10 0 0) #(struct:pul"
 #"led-point 0 0 0 10 0 0)) outline #(struct:pen \"black\" 2 solid roun"
 #"d round))))) #(struct:translate 0 0 #(struct:polygon (#(struct:pulle"
 #"d-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(struct:pu"
 #"lled-point 0 0 30 10 0 0) #(struct"
 #":pulled-point 0 0 0 10 0 0)) 255 \"magenta\")))) #(struct:translate "
 #"0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 220 0) #(struc"
 #"t:point 220 200) #(struct:point 0 200)) #(struct:translate 0 0 #(str"
 #"uct:overlay #(struct:translate 145 20 #(struct:overlay #(struct:crop"
 #" (#(struct:point 0 0) #(struct:point 30 0) #(struct:point 30 10) #(s"
 #"truct:point 0 10)) #(struct:translate 0 0 #(struct:translate 0 0 #(s"
 #"truct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-po"
 #"int 0 0 30 0 0 0) #(struct:pulled-point 0 0 30 10 0 0) #(struct:pull"
 #"ed-point 0 0 0 10 0 0)) outline #(struct:pen \"black\" 2 solid round"
 #" round))))) #(struct:translate 0 0 #(struct:polygon (#(struct:pulled"
 #"-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(struct:pul"
 #"led-point 0 0 30 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) 255 \""
 #"magenta\")))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0"
 #" 0) #(struct:point 220 0) #(struct:point 220 200) #(struct:point 0 2"
 #"00)) #(struct:translate 0 0 #(struct:overlay #(struct:translate 145 "
 #"5 #(struct:overlay #(struct:crop (#(struct:point 0 0) #(struct:point"
 #" 30 0) #(struct:point 30 10) #(struct:point 0 10)) #(struct:translat"
 #"e 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point"
 #" 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(struct:pulled-po"
 #"int 0 0 30 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) outline #(st"
 #"ruct:pen \"black\" 2 solid round round))))) #(struct:translate 0 0 #"
 #"(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-"
 #"point 0 0 30 0 0 0) #(struct:pulled-point 0 0 30 10 0 0) #(struct:pu"
 #"lled-point 0 0 0 10 0 0)) 255 \"magenta\")))) #(struct:translate 0 0"
 #" #(struct:crop (#(struct:point 0 0) #(struct:point 220 0) #(struct:p"
 #"oint 220 200) #(struct:point 0 200)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 110 35 #(struct:overlay #(struct:crop (#"
 #"(struct:point 0 0) #(struct:point 30 0) #(struct:point 30 10) #(stru"
 #"ct:point 0 10)) #(struct:translate 0 0 #(struct:translate 0 0 #(stru"
 #"ct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point"
 #" 0 0 30 0 0 0) #(struct:pulled-point 0 0 30 10 0 0) #(struct:pulled-"
 #"point 0 0 0 10 0 0)) outline #(struct:pen \"black\" 2 solid round ro"
 #"und))))) #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-po"
 #"int 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(struct:pulled"
 #"-point 0 0 30 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) 255 \"mag"
 #"enta\")))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0)"
 #" #(struct:point 220 0) #(struct:point 220 200) #(struct:point 0 200)"
 #") #(struct:translate 0 0 #(struct:overlay #(struct:translate 110 20 "
 #"#(struct:overlay #(struct:crop (#(struct:point 0 0) #(struct:point 3"
 #"0 0) #(struct:point 30 10) #(struct:point 0 10)) #(struct:translate "
 #"0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0"
 #" 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(struct:pulled-poin"
 #"t 0 0 30 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) outline #(stru"
 #"ct:pen \"black\" 2 solid round round))))) #(struct:translate 0 0 #(s"
 #"truct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-po"
 #"int 0 0 30 0 0 0) #(struct:pulled-point 0 0 30 10 0 0) #(struct:pull"
 #"ed-point 0 0 0 10 0 0)) 255 \"magenta\")))) #(struct:translate 0 0 #"
 #"(struct:crop (#(struct:point 0 0) #(struct:point 220 0) #(struct:poi"
 #"nt 220 200) #(struct:point 0 200)) #(struct:translate 0 0 #(struct:o"
 #"verlay #(struct:translate 110 5 #(struct:overlay #(struct:crop (#(st"
 #"ruct:point 0 0) #(struct:point 30 0) #(struct:point 30 10) #(struct:"
 #"point 0 10)) #(struct:translate 0 0 #(struct:translate 0 0 #(struct:"
 #"polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 "
 #"0 30 0 0 0) #(struct:pulled-point 0 0 30 10 0 0) #(struct:pulled-poi"
 #"nt 0 0 0 10 0 0)) outline #(struct:pen \"black\" 2 solid round round"
 #"))))) #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point"
 #" 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(struct:pulled-po"
 #"int 0 0 30 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) 255 \"magent"
 #"a\")))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #("
 #"struct:point 220 0) #(struct:point 220 200) #(struct:point 0 200)) #"
 #"(struct:translate 0 0 #(struct:overlay #(struct:translate 75 35 #(st"
 #"ruct:overlay #(struct:crop (#(struct:point 0 0) #(struct:point 30 0)"
 #" #(struct:point 30 10) #(struct:point 0 10)) #(struct:translate 0 0 "
 #"#(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0"
 #" 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(struct:pulled-point 0 "
 #"0 30 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) outline #(struct:p"
 #"en \"black\" 2 solid round round))))) #(struct:translate 0 0 #(struc"
 #"t:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point "
 #"0 0 30 0 0 0) #(struct:pulled-point 0 0 30 10 0 0) #(struct:pulled-p"
 #"oint 0 0 0 10 0 0)) 255 \"magenta\")))) #(struct:translate 0 0 #(str"
 #"uct:crop (#(struct:point 0 0) #(struct:point 220 0) #(struct:point 2"
 #"20 200) #(struct:point 0 200)) #(struct:translate 0 0 #(struct:overl"
 #"ay #(struct:translate 75 20 #(struct:overlay #(struct:crop (#(struct"
 #":point 0 0) #(struct:point 30 0) #(struct:point 30 10) #(struct:poin"
 #"t 0 10)) #(struct:translate 0 0 #(struct:translate 0 0 #(struct:poly"
 #"gon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 30"
 #" 0 0 0) #(struct:pulled-point 0 0 30 10 0 0) #(struct:pulled-point 0"
 #" 0 0 10 0 0)) outline #(struct:pen \"black\" 2 solid round round))))"
 #") #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0"
 #" 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(struct:pulled-point "
 #"0 0 30 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) 255 \"magenta\")"
 #"))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(stru"
 #"ct:point 220 0) #(struct:point 220 200) #(struct:point 0 200)) #(str"
 #"uct:translate 0 0 #(struct:overlay #(struct:translate 75 5 #(struct:"
 #"overlay #(struct:crop (#(struct:point 0 0) #(struct:point 30 0) #(st"
 #"ruct:point 30 10) #(struct:point 0 10)) #(struct:translate 0 0 #(str"
 #"uct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 "
 #"0) #(struct:pulled-point 0 0 30 0 0 0) #(struct:pulled-point 0 0 30 "
 #"10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) outline #(struct:pen \""
 #"black\" 2 solid round round))))) #(struct:translate 0 0 #(struct:pol"
 #"ygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 3"
 #"0 0 0 0) #(struct:pulled-point 0 0 30 10 0 0) #(struct:pulled-point "
 #"0 0 0 10 0 0)) 255 \"magenta\")))) #(struct:translate 0 0 #(struct:c"
 #"rop (#(struct:point 0 0) #(struct:point 220 0) #(struct:point 220 20"
 #"0) #(struct:point 0 200)) #(struct:translate 0 0 #(struct:overlay #("
 #"struct:translate 40 35 #(struct:overlay #(struct:crop (#(struct:poin"
 #"t 0 0) #(struct:point 30 0) #(struct:point 30 10) #(struct:point 0 1"
 #"0)) #(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon ("
 #"#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 "
 #"0) #(struct:pulled-point 0 0 30 10 0 0) #(struct:pulled-point 0 0 0 "
 #"10 0 0)) outline #(struct:pen \"black\" 2 solid round round))))) #(s"
 #"truct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 "
 #"0 0) #(struct:pulled-point 0 0 30 0 0 0) #(struct:pulled-point 0 0 3"
 #"0 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) 255 \"magenta\")))) #"
 #"(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:po"
 #"int 220 0) #(struct:point 220 200) #(struct:point 0 200)) #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 40 20 #(struct:over"
 #"lay #(struct:crop (#(struct:point 0 0) #(struct:point 30 0) #(struct"
 #":point 30 10) #(struct:point 0 10)) #(struct:translate 0 0 #(struct:"
 #"translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #"
 #"(struct:pulled-point 0 0 30 0 0 0) #(struct:pulled-point 0 0 30 10 0"
 #" 0) #(struct:pulled-point 0 0 0 10 0 0)) outline #(struct:pen \"blac"
 #"k\" 2 solid round round))))) #(struct:translate 0 0 #(struct:polygon"
 #" (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 "
 #"0 0) #(struct:pulled-point 0 0 30 10 0 0) #(struct:pulled-point 0 0 "
 #"0 10 0 0)) 255 \"magenta\")))) #(struct:translate 0 0 #(struct:crop "
 #"(#(struct:point 0 0) #(struct:point 220 0) #(struct:point 220 200) #"
 #"(struct:point 0 200)) #(struct:translate 0 0 #(struct:overlay #(stru"
 #"ct:translate 40 5 #(struct:overlay #(struct:crop (#(struct:point 0 0"
 #") #(struct:point 30 0) #(struct:point 30 10) #(struct:point 0 10)) #"
 #"(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(str"
 #"uct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #("
 #"struct:pulled-point 0 0 30 10 0 0) #(struct:pulled-point 0 0 0 10 0 "
 #"0)) outline #(struct:pen \"black\" 2 solid round round))))) #(struct"
 #":translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) "
 #"#(struct:pulled-point 0 0 30 0 0 0) #(struct:pulled-point 0 0 30 10 "
 #"0 0) #(struct:pulled-point 0 0 0 10 0 0)) 255 \"magenta\")))) #(stru"
 #"ct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 2"
 #"20 0) #(struct:point 220 200) #(struct:point 0 200)) #(struct:transl"
 #"ate 0 0 #(struct:overlay #(struct:translate 5 35 #(struct:overlay #("
 #"struct:crop (#(struct:point 0 0) #(struct:point 30 0) #(struct:point"
 #" 30 10) #(struct:point 0 10)) #(struct:translate 0 0 #(struct:transl"
 #"ate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struc"
 #"t:pulled-point 0 0 30 0 0 0) #(struct:pulled-point 0 0 30 10 0 0) #("
 #"struct:pulled-point 0 0 0 10 0 0)) outline #(struct:pen \"black\" 2 "
 #"solid round round))))) #(struct:translate 0 0 #(struct:polygon (#(st"
 #"ruct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #"
 #"(struct:pulled-point 0 0 30 10 0 0) #(struct:pulled-point 0 0 0 10 0"
 #" 0)) 255 \"magenta\")))) #(struct:translate 0 0 #(struct:crop (#(str"
 #"uct:point 0 0) #(struct:point 220 0) #(struct:point 220 200) #(struc"
 #"t:point 0 200)) #(struct:translate 0 0 #(struct:overlay #(struct:tra"
 #"nslate 5 20 #(struct:overlay #(struct:crop (#(struct:point 0 0) #(st"
 #"ruct:point 30 0) #(struct:point 30 10) #(struct:point 0 10)) #(struc"
 #"t:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pu"
 #"lled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(struct"
 #":pulled-point 0 0 30 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) ou"
 #"tline #(struct:pen \"black\" 2 solid round round))))) #(struct:trans"
 #"late 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(stru"
 #"ct:pulled-point 0 0 30 0 0 0) #(struct:pulled-point 0 0 30 10 0 0) #"
 #"(struct:pulled-point 0 0 0 10 0 0)) 255 \"magenta\")))) #(struct:tra"
 #"nslate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 220 0) "
 #"#(struct:point 220 200) #(struct:point 0 200)) #(struct:translate 0 "
 #"0 #(struct:overlay #(struct:translate 5 5 #(struct:overlay #(struct:"
 #"crop (#(struct:point 0 0) #(struct:point 30 0) #(struct:point 30 10)"
 #" #(struct:point 0 10)) #(struct:translate 0 0 #(struct:translate 0 0"
 #" #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulle"
 #"d-point 0 0 30 0 0 0) #(struct:pulled-point 0 0 30 10 0 0) #(struct:"
 #"pulled-point 0 0 0 10 0 0)) outline #(struct:pen \"black\" 2 solid r"
 #"ound round))))) #(struct:translate 0 0 #(struct:polygon (#(struct:pu"
 #"lled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(struct"
 #":pulled-point 0 0 30 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) 25"
 #"5 \"magenta\")))) #(struct:translate 0 0 #(struct:overlay #(struct:c"
 #"rop (#(struct:point 0 0) #(struct:point 220 0) #(struct:point 220 20"
 #"0) #(struct:point 0 200)) #(struct:translate 0 0 #(struct:translate "
 #"0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pu"
 #"lled-point 0 0 220 0 0 0) #(struct:pulled-point 0 0 220 200 0 0) #(s"
 #"truct:pulled-point 0 0 0 200 0 0)) outline #(struct:pen \"black\" 2 "
 #"solid round round))))) #(struct:translate 0 0 #(struct:polygon (#(st"
 #"ruct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 220 0 0 0) "
 #"#(struct:pulled-point 0 0 220 200 0 0) #(struct:pulled-point 0 0 0 2"
 #"00 0 0)) outline \"transparent\"))))))))))))))))))))))))))))))))))))"
 #"))))))))))))))))))))))))))))))))))) #(struct:bb 220 200 200.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"play-ended"
0 0 24 3 1 #" "
0 0 14 3 8 #"WORLD3x5"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 6           4 21 25373
(
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:crop (#(struct:poi"
 #"nt 0 0) #(struct:point 220 0) #(struct:point 220 200) #(struct:point"
 #" 0 200)) #(struct:translate 0 0 #(struct:overlay #(struct:translate "
 #"25.0 129.0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay "
 #"#(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(str"
 #"uct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:transla"
 #"te 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(st"
 #"ruct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:"
 #"overlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0"
 #" 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct"
 #":translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:over"
 #"lay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #"
 #"(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tra"
 #"nslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay "
 #"#(struct:translate 0 0 #(struct:translate 6.0 10.5 #(struct:text \"Y"
 #"\" 0 1 \"maroon\" 18 #f swiss normal normal #f))) #(struct:translate"
 #" 12.0 0.0 #(struct:translate 5.0 10.5 #(struct:text \"o\" 0 1 \"maro"
 #"on\" 18 #f swiss normal normal #f))))) #(struct:translate 22.0 0.0 #"
 #"(struct:translate 5.0 10.5 #(struct:text \"u\" 0 1 \"maroon\" 18 #f "
 #"swiss normal normal #f))))) #(struct:translate 32.0 0.0 #(struct:tra"
 #"nslate 2.5 10.5 #(struct:text \" \" 0 1 \"maroon\" 18 #f swiss norma"
 #"l normal #f))))) #(struct:translate 37.0 0.0 #(struct:translate 5.0 "
 #"10.5 #(struct:text \"L\" 0 1 \"maroon\" 18 #f swiss normal normal #f"
 #"))))) #(struct:translate 47.0 0.0 #(struct:translate 5.0 10.5 #(stru"
 #"ct:text \"o\" 0 1 \"maroon\" 18 #f swiss normal normal #f))))) #(str"
 #"uct:translate 57.0 0.0 #(struct:translate 4.5 10.5 #(struct:text \"s"
 #"\" 0 1 \"maroon\" 18 #f swiss normal normal #f))))) #(struct:transla"
 #"te 66.0 0.0 #(struct:translate 5.0 10.5 #(struct:text \"e\" 0 1 \"ma"
 #"roon\" 18 #f swiss normal normal #f))))) #(struct:translate 76.0 0.0"
 #" #(struct:translate 3.0 10.5 #(struct:text \"!\" 0 1 \"maroon\" 18 #"
 #"f swiss normal normal #f))))) #(struct:translate 82.0 0.0 #(struct:t"
 #"ranslate 2.5 10.5 #(struct:text \" \" 0 1 \"maroon\" 18 #f swiss nor"
 #"mal normal #f))))) #(struct:translate 87.0 0.0 #(struct:translate 6."
 #"0 10.5 #(struct:text \"S\" 0 1 \"maroon\" 18 #f swiss normal normal "
 #"#f))))) #(struct:translate 99.0 0.0 #(struct:translate 4.5 10.5 #(st"
 #"ruct:text \"c\" 0 1 \"maroon\" 18 #f swiss normal normal #f))))) #(s"
 #"truct:translate 108.0 0.0 #(struct:translate 5.0 10.5 #(struct:text "
 #"\"o\" 0 1 \"maroon\" 18 #f swiss normal normal #f))))) #(struct:tran"
 #"slate 118.0 0.0 #(struct:translate 3.0 10.5 #(struct:text \"r\" 0 1 "
 #"\"maroon\" 18 #f swiss normal normal #f))))) #(struct:translate 124."
 #"0 0.0 #(struct:translate 5.0 10.5 #(struct:text \"e\" 0 1 \"maroon\""
 #" 18 #f swiss normal normal #f))))) #(struct:translate 134.0 0.0 #(st"
 #"ruct:translate 5.5 10.5 #(struct:text \"=\" 0 1 \"maroon\" 18 #f swi"
 #"ss normal normal #f))))) #(struct:translate 145.0 0.0 #(struct:trans"
 #"late 2.5 10.5 #(struct:text \" \" 0 1 \"maroon\" 18 #f swiss normal "
 #"normal #f))))) #(struct:translate 150.0 0.0 #(struct:translate 5.0 1"
 #"0.5 #(struct:text \"0\" 0 1 \"maroon\" 18 #f swiss normal normal #f)"
 #")))) #(struct:translate 160.0 0.0 #(struct:translate 3.0 10.5 #(stru"
 #"ct:text \"!\" 0 1 \"maroon\" 18 #f swiss normal normal #f))))) #(str"
 #"uct:translate 0 21.0 #(struct:overlay #(struct:translate 0 0 #(struc"
 #"t:overlay #(struct:translate 0 0 #(struct:overlay #(struct:translate"
 #" 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(stru"
 #"ct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:ov"
 #"erlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0"
 #" #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overla"
 #"y #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(s"
 #"truct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:trans"
 #"late 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #("
 #"struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struc"
 #"t:overlay #(struct:translate 0 0 #(struct:overlay #(struct:translate"
 #" 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(stru"
 #"ct:translate 0 0 #(struct:translate 6.0 10.5 #(struct:text \"P\" 0 1"
 #" \"maroon\" 18 #f swiss normal normal #f))) #(struct:translate 12.0 "
 #"0.0 #(struct:translate 3.0 10.5 #(struct:text \"r\" 0 1 \"maroon\" 1"
 #"8 #f swiss normal normal #f))))) #(struct:translate 18.0 0.0 #(struc"
 #"t:translate 5.0 10.5 #(struct:text \"e\" 0 1 \"maroon\" 18 #f swiss "
 #"normal normal #f))))) #(struct:translate 28.0 0.0 #(struct:translate"
 #" 4.5 10.5 #(struct:text \"s\" 0 1 \"maroon\" 18 #f swiss normal norm"
 #"al #f))))) #(struct:translate 37.0 0.0 #(struct:translate 4.5 10.5 #"
 #"(struct:text \"s\" 0 1 \"maroon\" 18 #f swiss normal normal #f))))) "
 #"#(struct:translate 46.0 0.0 #(struct:translate 2.5 10.5 #(struct:tex"
 #"t \" \" 0 1 \"maroon\" 18 #f swiss normal normal #f))))) #(struct:tr"
 #"anslate 51.0 0.0 #(struct:translate 1.5 10.5 #(struct:text \"'\" 0 1"
 #" \"maroon\" 18 #f swiss normal normal #f))))) #(struct:translate 54."
 #"0 0.0 #(struct:translate 3.0 10.5 #(struct:text \"r\" 0 1 \"maroon\""
 #" 18 #f swiss normal normal #f))))) #(struct:translate 60.0 0.0 #(str"
 #"uct:translate 1.5 10.5 #(struct:text \"'\" 0 1 \"maroon\" 18 #f swis"
 #"s normal normal #f))))) #(struct:translate 63.0 0.0 #(struct:transla"
 #"te 2.5 10.5 #(struct:text \" \" 0 1 \"maroon\" 18 #f swiss normal no"
 #"rmal #f))))) #(struct:translate 68.0 0.0 #(struct:translate 2.5 10.5"
 #" #(struct:text \"t\" 0 1 \"maroon\" 18 #f swiss normal normal #f))))"
 #") #(struct:translate 73.0 0.0 #(struct:translate 5.0 10.5 #(struct:t"
 #"ext \"o\" 0 1 \"maroon\" 18 #f swiss normal normal #f))))) #(struct:"
 #"translate 83.0 0.0 #(struct:translate 2.5 10.5 #(struct:text \" \" 0"
 #" 1 \"maroon\" 18 #f swiss normal normal #f))))) #(struct:translate 8"
 #"8.0 0.0 #(struct:translate 5.0 10.5 #(struct:text \"p\" 0 1 \"maroon"
 #"\" 18 #f swiss normal normal #f))))) #(struct:translate 98.0 0.0 #(s"
 #"truct:translate 2.0 10.5 #(struct:text \"l\" 0 1 \"maroon\" 18 #f sw"
 #"iss normal normal #f))))) #(struct:translate 102.0 0.0 #(struct:tran"
 #"slate 5.0 10.5 #(struct:text \"a\" 0 1 \"maroon\" 18 #f swiss normal"
 #" normal #f))))) #(struct:translate 112.0 0.0 #(struct:translate 4.5 "
 #"10.5 #(struct:text \"y\" 0 1 \"maroon\" 18 #f swiss normal normal #f"
 #"))))) #(struct:translate 121.0 0.0 #(struct:translate 2.5 10.5 #(str"
 #"uct:text \" \" 0 1 \"maroon\" 18 #f swiss normal normal #f))))) #(st"
 #"ruct:translate 126.0 0.0 #(struct:"
 #"translate 5.0 10.5 #(struct:text \"a\" 0 1 \"maroon\" 18 #f swiss no"
 #"rmal normal #f))))) #(struct:translate 136.0 0.0 #(struct:translate "
 #"5.0 10.5 #(struct:text \"g\" 0 1 \"maroon\" 18 #f swiss normal norma"
 #"l #f))))) #(struct:translate 146.0 0.0 #(struct:translate 5.0 10.5 #"
 #"(struct:text \"a\" 0 1 \"maroon\" 18 #f swiss normal normal #f))))) "
 #"#(struct:translate 156.0 0.0 #(struct:translate 2.0 10.5 #(struct:te"
 #"xt \"i\" 0 1 \"maroon\" 18 #f swiss normal normal #f))))) #(struct:t"
 #"ranslate 160.0 0.0 #(struct:translate 5.0 10.5 #(struct:text \"n\" 0"
 #" 1 \"maroon\" 18 #f swiss normal normal #f))))))) #(struct:translate"
 #" 0 0 #(struct:overlay #(struct:crop (#(struct:point 0 0) #(struct:po"
 #"int 220 0) #(struct:point 220 200) #(struct:point 0 200)) #(struct:t"
 #"ranslate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulle"
 #"d-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 220 0 0 0) #(struct:p"
 #"ulled-point 0 0 220 200 0 0) #(struct:pulled-point 0 0 0 200 0 0)) o"
 #"utline #(struct:pen \"black\" 2 solid round round))))) #(struct:tran"
 #"slate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(str"
 #"uct:pulled-point 0 0 220 0 0 0) #(struct:pulled-point 0 0 220 200 0 "
 #"0) #(struct:pulled-point 0 0 0 200 0 0)) outline \"transparent\"))))"
 #")))) #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 "
 #"#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tr"
 #"anslate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 220 0)"
 #" #(struct:point 220 200) #(struct:point 0 200)) #(struct:translate 0"
 #" 0 #(struct:overlay #(struct:translate 9.5 187.0 #(struct:overlay #("
 #"struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struc"
 #"t:overlay #(struct:translate 0 0 #(struct:overlay #(struct:translate"
 #" 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(stru"
 #"ct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:tr"
 #"anslate 3.5 7.0 #(struct:text \"S\" 0 1 \"black\" 11 #f swiss normal"
 #" normal #f))) #(struct:translate 7.0 0.0 #(struct:translate 3.0 7.0 "
 #"#(struct:text \"c\" 0 1 \"black\" 11 #f swiss normal normal #f))))) "
 #"#(struct:translate 13.0 0.0 #(struct:translate 3.0 7.0 #(struct:text"
 #" \"o\" 0 1 \"black\" 11 #f swiss normal normal #f))))) #(struct:tran"
 #"slate 19.0 0.0 #(struct:translate 2.0 7.0 #(struct:text \"r\" 0 1 \""
 #"black\" 11 #f swiss normal normal #f))))) #(struct:translate 23.0 0."
 #"0 #(struct:translate 3.0 7.0 #(struct:text \"e\" 0 1 \"black\" 11 #f"
 #" swiss normal normal #f))))) #(struct:translate 29.0 0.0 #(struct:tr"
 #"anslate 1.5 7.0 #(struct:text \":\" 0 1 \"black\" 11 #f swiss normal"
 #" normal #f))))) #(struct:translate 32.0 0.0 #(struct:translate 1.5 7"
 #".0 #(struct:text \" \" 0 1 \"black\" 11 #f swiss normal normal #f)))"
 #")) #(struct:translate 35.0 0.0 #(struct:translate 3.0 7.0 #(struct:t"
 #"ext \"0\" 0 1 \"black\" 11 #f swiss normal normal #f))))) #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:crop (#(struct:point 0 0) #(s"
 #"truct:point 220 0) #(struct:point 220 200) #(struct:point 0 200)) #("
 #"struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(stru"
 #"ct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 220 0 0 0) #("
 #"struct:pulled-point 0 0 220 200 0 0) #(struct:pulled-point 0 0 0 200"
 #" 0 0)) outline #(struct:pen \"black\" 2 solid round round))))) #(str"
 #"uct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 "
 #"0) #(struct:pulled-point 0 0 220 0 0 0) #(struct:pulled-point 0 0 22"
 #"0 200 0 0) #(struct:pulled-point 0 0 0 200 0 0)) outline \"transpare"
 #"nt\")))))))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 "
 #"0) #(struct:point 220 0) #(struct:point 220 200) #(struct:point 0 20"
 #"0)) #(struct:translate 0 0 #(struct:overlay #(struct:translate 171.0"
 #" 187.0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(st"
 #"ruct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:"
 #"overlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0"
 #" 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct"
 #":translate 0 0 #(struct:translate 3.0 7.0 #(struct:text \"L\" 0 1 \""
 #"black\" 11 #f swiss normal normal #f))) #(struct:translate 6.0 0.0 #"
 #"(struct:translate 1.0 7.0 #(struct:text \"i\" 0 1 \"black\" 11 #f sw"
 #"iss normal normal #f))))) #(struct:translate 8.0 0.0 #(struct:transl"
 #"ate 3.0 7.0 #(struct:text \"v\" 0 1 \"black\" 11 #f swiss normal nor"
 #"mal #f))))) #(struct:translate 14.0 0.0 #(struct:translate 3.0 7.0 #"
 #"(struct:text \"e\" 0 1 \"black\" 11 #f swiss normal normal #f))))) #"
 #"(struct:translate 20.0 0.0 #(struct:translate 3.0 7.0 #(struct:text "
 #"\"s\" 0 1 \"black\" 11 #f swiss normal normal #f))))) #(struct:trans"
 #"late 26.0 0.0 #(struct:translate 1.5 7.0 #(struct:text \":\" 0 1 \"b"
 #"lack\" 11 #f swiss normal normal #f))))) #(struct:translate 29.0 0.0"
 #" #(struct:translate 1.5 7.0 #(struct:text \" \" 0 1 \"black\" 11 #f "
 #"swiss normal normal #f))))) #(struct:translate 32.0 0.0 #(struct:tra"
 #"nslate 3.0 7.0 #(struct:text \"3\" 0 1 \"black\" 11 #f swiss normal "
 #"normal #f))))) #(struct:translate 0 0 #(struct:overlay #(struct:crop"
 #" (#(struct:point 0 0) #(struct:point 220 0) #(struct:point 220 200) "
 #"#(struct:point 0 200)) #(struct:translate 0 0 #(struct:translate 0 0"
 #" #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulle"
 #"d-point 0 0 220 0 0 0) #(struct:pulled-point 0 0 220 200 0 0) #(stru"
 #"ct:pulled-point 0 0 0 200 0 0)) outline #(struct:pen \"black\" 2 sol"
 #"id round round))))) #(struct:translate 0 0 #(struct:polygon (#(struc"
 #"t:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 220 0 0 0) #(s"
 #"truct:pulled-point 0 0 220 200 0 0) #(struct:pulled-point 0 0 0 200 "
 #"0 0)) outline \"transparent\")))))))))) #(struct:translate 0 0 #(str"
 #"uct:crop (#(struct:point 0 0) #(struct:point 220 0) #(struct:point 2"
 #"20 200) #(struct:point 0 200)) #(struct:translate 0 0 #(struct:overl"
 #"ay #(struct:translate 104 181 #(struct:translate 6 6 #(struct:ellips"
 #"e 12 12 0 255 \"blue\"))) #(struct:translate 0 0 #(struct:overlay #("
 #"struct:crop (#(struct:point 0 0) #(struct:point 220 0) #(struct:poin"
 #"t 220 200) #(struct:point 0 200)) #(struct:translate 0 0 #(struct:tr"
 #"anslate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(s"
 #"truct:pulled-point 0 0 220 0 0 0) #(struct:pulled-point 0 0 220 200 "
 #"0 0) #(struct:pulled-point 0 0 0 200 0 0)) outline #(struct:pen \"bl"
 #"ack\" 2 solid round round))))) #(struct:translate 0 0 #(struct:polyg"
 #"on (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 220"
 #" 0 0 0) #(struct:pulled-point 0 0 220 200 0 0) #(struct:pulled-point"
 #" 0 0 0 200 0 0)) outline \"transparent\")))))))))) #(struct:translat"
 #"e 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 220 0) #(str"
 #"uct:point 220 200) #(struct:point 0 200)) #(struct:translate 0 0 #(s"
 #"truct:overlay #(struct:translate 80 190 #(struct:translate 0 0 #(str"
 #"uct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-poin"
 #"t 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 10 0 0) #(struct:pulled"
 #"-point 0 0 0 10 0 0)) 255 \"red\"))) #(struct:translate 0 0 #(struct"
 #":crop (#(struct:point 0 0) #(struct:point 220 0) #(struct:point 220 "
 #"200) #(struct:point 0 200)) #(struct:translate 0 0 #(struct:overlay "
 #"#(struct:translate 145 35 #(struct:overlay #(struct:crop (#(struct:p"
 #"oint 0 0) #(struct:point 30 0) #(struct:point 30 10) #(struct:point "
 #"0 10)) #(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygo"
 #"n (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0"
 #" 0 0) #(struct:pulled-point 0 0 30 10 0 0) #(struct:pulled-point 0 0"
 #" 0 10 0 0)) outline #(struct:pen \"black\" 2 solid round round))))) "
 #"#(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0"
 #" 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(struct:pulled-point 0 "
 #"0 30 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) 255 \"magenta\")))"
 #") #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct"
 #":point 220 0) #(struct:point 220 200) #(struct:point 0 200)) #(struc"
 #"t:translate 0 0 #(struct:overlay #(struct:translate 145 20 #(struct:"
 #"overlay #(struct:crop (#(struct:point 0 0) #(struct:point 30 0) #(st"
 #"ruct:point 30 10) #(struct:point 0 10)) #(struct:translate 0 0 #(str"
 #"uct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 "
 #"0) #(struct:pulled-point 0 0 30 0 0 0) #(struct:pulled-point 0 0 30 "
 #"10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) outline #(struct:pen \""
 #"black\" 2 solid round round))))) #(struct:translate 0 0 #(struct:pol"
 #"ygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 3"
 #"0 0 0 0) #(struct:pulled-point 0 0 30 10 0 0) #(struct:pulled-point "
 #"0 0 0 10 0 0)) 255 \"magenta\")))) #(struct:translate 0 0 #(struct:c"
 #"rop (#(struct:point 0 0) #(struct:point 220 0) #(struct:point 220 20"
 #"0) #(struct:point 0 200)) #(struct:translate 0 0 #(struct:overlay #("
 #"struct:translate 145 5 #(struct:overlay #(struct:crop (#(struct:poin"
 #"t 0 0) #(struct:point 30 0) #(struct:point 30 10) #(struct:point 0 1"
 #"0)) #(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon ("
 #"#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 "
 #"0) #(struct:pulled-point 0 0 30 10 0 0) #(struct:pulled-point 0 0 0 "
 #"10 0 0)) outline #(struct:pen \"black\" 2 solid round round))))) #(s"
 #"truct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 "
 #"0 0) #(struct:pulled-point 0 0 30 0 0 0) #(struct:pulled-point 0 0 3"
 #"0 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) 255 \"magenta\")))) #"
 #"(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:po"
 #"int 220 0) #(struct:point 220 200) #(struct:point 0 200)) #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 110 35 #(struct:ove"
 #"rlay #(struct:crop (#(struct:point 0 0) #(struct:point 30 0) #(struc"
 #"t:point 30 10) #(struct:point 0 10)) #(struct:translate 0 0 #(struct"
 #":translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) "
 #"#(struct:pulled-point 0 0 30 0 0 0) #(struct:pulled-point 0 0 30 10 "
 #"0 0) #(struct:pulled-point 0 0 0 10 0 0)) outline #(struct:pen \"bla"
 #"ck\" 2 solid round round))))) #(struct:translate 0 0 #(struct:polygo"
 #"n (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0"
 #" 0 0) #(struct:pulled-point 0 0 30 10 0 0) #(struct:pulled-point 0 0"
 #" 0 10 0 0)) 255 \"magenta\")))) #(struct:translate 0 0 #(struct:crop"
 #" (#(struct:point 0 0) #(struct:point 220 0) #(struct:point 220 200) "
 #"#(struct:point 0 200)) #(struct:translate 0 0 #(struct:overlay #(str"
 #"uct:translate 110 20 #(struct:overlay #(struct:crop (#(struct:point "
 #"0 0) #(struct:point 30 0) #(struct:point 30 10) #(struct:point 0 10)"
 #") #(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#("
 #"struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0)"
 #" #(struct:pulled-point 0 0 30 10 0 0) #(struct:pulled-point 0 0 0 10"
 #" 0 0)) outline #(struct:pen \"black\" 2 solid round round))))) #(str"
 #"uct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 "
 #"0) #(struct:pulled-point 0 0 30 0 0 0) #(struct:pulled-point 0 0 30 "
 #"10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) 255 \"magenta\")))) #(s"
 #"truct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:poin"
 #"t 220 0) #(struct:point 220 200) #(struct:point 0 200)) #(struct:tra"
 #"nslate 0 0 #(struct:overlay #(struct:translate 110 5 #(struct:overla"
 #"y #(struct:crop (#(struct:point 0 0) #(struct:point 30 0) #(struct:p"
 #"oint 30 10) #(struct:point 0 10)) #(struct:translate 0 0 #(struct:tr"
 #"anslate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(s"
 #"truct:pulled-point 0 0 30 0 0 0) #(struct:pulled-point 0 0 30 10 0 0"
 #") #(struct:pulled-point 0 0 0 10 "
 #"0 0)) outline #(struct:pen \"black\" 2 solid round round))))) #(stru"
 #"ct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0"
 #") #(struct:pulled-point 0 0 30 0 0 0) #(struct:pulled-point 0 0 30 1"
 #"0 0 0) #(struct:pulled-point 0 0 0 10 0 0)) 255 \"magenta\")))) #(st"
 #"ruct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point"
 #" 220 0) #(struct:point 220 200) #(struct:point 0 200)) #(struct:tran"
 #"slate 0 0 #(struct:overlay #(struct:translate 75 35 #(struct:overlay"
 #" #(struct:crop (#(struct:point 0 0) #(struct:point 30 0) #(struct:po"
 #"int 30 10) #(struct:point 0 10)) #(struct:translate 0 0 #(struct:tra"
 #"nslate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(st"
 #"ruct:pulled-point 0 0 30 0 0 0) #(struct:pulled-point 0 0 30 10 0 0)"
 #" #(struct:pulled-point 0 0 0 10 0 0)) outline #(struct:pen \"black\""
 #" 2 solid round round))))) #(struct:translate 0 0 #(struct:polygon (#"
 #"(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0"
 #") #(struct:pulled-point 0 0 30 10 0 0) #(struct:pulled-point 0 0 0 1"
 #"0 0 0)) 255 \"magenta\")))) #(struct:translate 0 0 #(struct:crop (#("
 #"struct:point 0 0) #(struct:point 220 0) #(struct:point 220 200) #(st"
 #"ruct:point 0 200)) #(struct:translate 0 0 #(struct:overlay #(struct:"
 #"translate 75 20 #(struct:overlay #(struct:crop (#(struct:point 0 0) "
 #"#(struct:point 30 0) #(struct:point 30 10) #(struct:point 0 10)) #(s"
 #"truct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struc"
 #"t:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(st"
 #"ruct:pulled-point 0 0 30 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)"
 #") outline #(struct:pen \"black\" 2 solid round round))))) #(struct:t"
 #"ranslate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #("
 #"struct:pulled-point 0 0 30 0 0 0) #(struct:pulled-point 0 0 30 10 0 "
 #"0) #(struct:pulled-point 0 0 0 10 0 0)) 255 \"magenta\")))) #(struct"
 #":translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 220"
 #" 0) #(struct:point 220 200) #(struct:point 0 200)) #(struct:translat"
 #"e 0 0 #(struct:overlay #(struct:translate 75 5 #(struct:overlay #(st"
 #"ruct:crop (#(struct:point 0 0) #(struct:point 30 0) #(struct:point 3"
 #"0 10) #(struct:point 0 10)) #(struct:translate 0 0 #(struct:translat"
 #"e 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:"
 #"pulled-point 0 0 30 0 0 0) #(struct:pulled-point 0 0 30 10 0 0) #(st"
 #"ruct:pulled-point 0 0 0 10 0 0)) outline #(struct:pen \"black\" 2 so"
 #"lid round round))))) #(struct:translate 0 0 #(struct:polygon (#(stru"
 #"ct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(s"
 #"truct:pulled-point 0 0 30 10 0 0) #(struct:pulled-point 0 0 0 10 0 0"
 #")) 255 \"magenta\")))) #(struct:translate 0 0 #(struct:crop (#(struc"
 #"t:point 0 0) #(struct:point 220 0) #(struct:point 220 200) #(struct:"
 #"point 0 200)) #(struct:translate 0 0 #(struct:overlay #(struct:trans"
 #"late 40 35 #(struct:overlay #(struct:crop (#(struct:point 0 0) #(str"
 #"uct:point 30 0) #(struct:point 30 10) #(struct:point 0 10)) #(struct"
 #":translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pul"
 #"led-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(struct:"
 #"pulled-point 0 0 30 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) out"
 #"line #(struct:pen \"black\" 2 solid round round))))) #(struct:transl"
 #"ate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struc"
 #"t:pulled-point 0 0 30 0 0 0) #(struct:pulled-point 0 0 30 10 0 0) #("
 #"struct:pulled-point 0 0 0 10 0 0)) 255 \"magenta\")))) #(struct:tran"
 #"slate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 220 0) #"
 #"(struct:point 220 200) #(struct:point 0 200)) #(struct:translate 0 0"
 #" #(struct:overlay #(struct:translate 40 20 #(struct:overlay #(struct"
 #":crop (#(struct:point 0 0) #(struct:point 30 0) #(struct:point 30 10"
 #") #(struct:point 0 10)) #(struct:translate 0 0 #(struct:translate 0 "
 #"0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pull"
 #"ed-point 0 0 30 0 0 0) #(struct:pulled-point 0 0 30 10 0 0) #(struct"
 #":pulled-point 0 0 0 10 0 0)) outline #(struct:pen \"black\" 2 solid "
 #"round round))))) #(struct:translate 0 0 #(struct:polygon (#(struct:p"
 #"ulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(struc"
 #"t:pulled-point 0 0 30 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) 2"
 #"55 \"magenta\")))) #(struct:translate 0 0 #(struct:crop (#(struct:po"
 #"int 0 0) #(struct:point 220 0) #(struct:point 220 200) #(struct:poin"
 #"t 0 200)) #(struct:translate 0 0 #(struct:overlay #(struct:translate"
 #" 40 5 #(struct:overlay #(struct:crop (#(struct:point 0 0) #(struct:p"
 #"oint 30 0) #(struct:point 30 10) #(struct:point 0 10)) #(struct:tran"
 #"slate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-p"
 #"oint 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(struct:pulle"
 #"d-point 0 0 30 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) outline "
 #"#(struct:pen \"black\" 2 solid round round))))) #(struct:translate 0"
 #" 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pul"
 #"led-point 0 0 30 0 0 0) #(struct:pulled-point 0 0 30 10 0 0) #(struc"
 #"t:pulled-point 0 0 0 10 0 0)) 255 \"magenta\")))) #(struct:translate"
 #" 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 220 0) #(stru"
 #"ct:point 220 200) #(struct:point 0 200)) #(struct:translate 0 0 #(st"
 #"ruct:overlay #(struct:translate 5 35 #(struct:overlay #(struct:crop "
 #"(#(struct:point 0 0) #(struct:point 30 0) #(struct:point 30 10) #(st"
 #"ruct:point 0 10)) #(struct:translate 0 0 #(struct:translate 0 0 #(st"
 #"ruct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-poi"
 #"nt 0 0 30 0 0 0) #(struct:pulled-point 0 0 30 10 0 0) #(struct:pulle"
 #"d-point 0 0 0 10 0 0)) outline #(struct:pen \"black\" 2 solid round "
 #"round))))) #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-"
 #"point 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(struct:pull"
 #"ed-point 0 0 30 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) 255 \"m"
 #"agenta\")))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 "
 #"0) #(struct:point 220 0) #(struct:point 220 200) #(struct:point 0 20"
 #"0)) #(struct:translate 0 0 #(struct:overlay #(struct:translate 5 20 "
 #"#(struct:overlay #(struct:crop (#(struct:point 0 0) #(struct:point 3"
 #"0 0) #(struct:point 30 10) #(struct:point 0 10)) #(struct:translate "
 #"0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0"
 #" 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(struct:pulled-poin"
 #"t 0 0 30 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) outline #(stru"
 #"ct:pen \"black\" 2 solid round round))))) #(struct:translate 0 0 #(s"
 #"truct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-po"
 #"int 0 0 30 0 0 0) #(struct:pulled-point 0 0 30 10 0 0) #(struct:pull"
 #"ed-point 0 0 0 10 0 0)) 255 \"magenta\")))) #(struct:translate 0 0 #"
 #"(struct:crop (#(struct:point 0 0) #(struct:point 220 0) #(struct:poi"
 #"nt 220 200) #(struct:point 0 200)) #(struct:translate 0 0 #(struct:o"
 #"verlay #(struct:translate 5 5 #(struct:overlay #(struct:crop (#(stru"
 #"ct:point 0 0) #(struct:point 30 0) #(struct:point 30 10) #(struct:po"
 #"int 0 10)) #(struct:translate 0 0 #(struct:translate 0 0 #(struct:po"
 #"lygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 "
 #"30 0 0 0) #(struct:pulled-point 0 0 30 10 0 0) #(struct:pulled-point"
 #" 0 0 0 10 0 0)) outline #(struct:pen \"black\" 2 solid round round))"
 #"))) #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0"
 #" 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(struct:pulled-poin"
 #"t 0 0 30 10 0 0) #(struct:pulled-"
 #"point 0 0 0 10 0 0)) 255 \"magenta\")))) #(struct:translate 0 0 #(st"
 #"ruct:overlay #(struct:crop (#(struct:point 0 0) #(struct:point 220 0"
 #") #(struct:point 220 200) #(struct:point 0 200)) #(struct:translate "
 #"0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0"
 #" 0 0 0 0 0) #(struct:pulled-point 0 0 220 0 0 0) #(struct:pulled-poi"
 #"nt 0 0 220 200 0 0) #(struct:pulled-point 0 0 0 200 0 0)) outline #("
 #"struct:pen \"black\" 2 solid round round))))) #(struct:translate 0 0"
 #" #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulle"
 #"d-point 0 0 220 0 0 0) #(struct:pulled-point 0 0 220 200 0 0) #(stru"
 #"ct:pulled-point 0 0 0 200 0 0)) outline \"transparent\")))))))))))))"
 #")))))))))))))))))))))))))))))))))))))))))))))))))))))))))) #(struct:"
 #"bb 220 200 200.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";;end-message: World Boolean -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 98
(
 #";;produced and end of game message based on the World and if the Boo"
 #"lean tells us if we won or not"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"end-message"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #" "
0 0 14 3 3 #"won"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 3 #"won"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 11 #"place-image"
0 0 24 3 2 #" ("
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 19 3 35 #"\"You Win!\\nPress 'r' to play again\""
0 0 24 3 1 #" "
0 0 21 3 2 #"18"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"maroon"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 5 #"WIDTH"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #") ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 6 #"HEIGHT"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 14 3 11 #"empty-frame"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 11 #"place-image"
0 0 24 3 2 #" ("
0 0 14 3 4 #"text"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-append"
0 0 24 3 1 #" "
0 0 19 3 19 #"\"You Lose! Score= \""
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                        ("
0 0 14 3 14 #"number->string"
0 0 24 3 2 #" ("
0 0 14 3 11 #"world-score"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 40 #"                                        "
0 0 19 3 28 #"\"!\\nPress 'r' to play again\""
0 0 24 3 2 #") "
0 0 21 3 2 #"18"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"maroon"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 5 #"WIDTH"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 21 3 3 #"150"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 14 3 11 #"empty-frame"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"end-message"
0 0 24 3 1 #" "
0 0 14 3 8 #"WORLD3x5"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 6           4 21 5761
(
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 220 0) #(struct:p"
 #"oint 220 200) #(struct:point 0 200)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 25.0 79.0 #(struct:overlay #(struct:tran"
 #"slate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #"
 #"(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(stru"
 #"ct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:translat"
 #"e 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(str"
 #"uct:translate 0 0 #(struct:translate 6.0 10.5 #(struct:text \"Y\" 0 "
 #"1 \"maroon\" 18 #f swiss normal normal #f))) #(struct:translate 12.0"
 #" 0.0 #(struct:translate 5.0 10.5 #(struct:text \"o\" 0 1 \"maroon\" "
 #"18 #f swiss normal normal #f))))) #(struct:translate 22.0 0.0 #(stru"
 #"ct:translate 5.0 10.5 #(struct:text \"u\" 0 1 \"maroon\" 18 #f swiss"
 #" normal normal #f))))) #(struct:translate 32.0 0.0 #(struct:translat"
 #"e 2.5 10.5 #(struct:text \" \" 0 1 \"maroon\" 18 #f swiss normal nor"
 #"mal #f))))) #(struct:translate 37.0 0.0 #(struct:translate 8.5 10.5 "
 #"#(struct:text \"W\" 0 1 \"maroon\" 18 #f swiss normal normal #f)))))"
 #" #(struct:translate 54.0 0.0 #(struct:translate 2.0 10.5 #(struct:te"
 #"xt \"i\" 0 1 \"maroon\" 18 #f swiss normal normal #f))))) #(struct:t"
 #"ranslate 58.0 0.0 #(struct:translate 5.0 10.5 #(struct:text \"n\" 0 "
 #"1 \"maroon\" 18 #f swiss normal normal #f))))) #(struct:translate 68"
 #".0 0.0 #(struct:translate 3.0 10"
 #".5 #(struct:text \"!\" 0 1 \"maroon\" 18 #f swiss normal normal #f))"
 #"))) #(struct:translate 0 21.0 #(struct:overlay #(struct:translate 0 "
 #"0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:"
 #"translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overl"
 #"ay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #("
 #"struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tran"
 #"slate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #"
 #"(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(stru"
 #"ct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:translat"
 #"e 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(str"
 #"uct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:o"
 #"verlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 "
 #"0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:"
 #"translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overl"
 #"ay #(struct:translate 0 0 #(struct:translate 6.0 10.5 #(struct:text "
 #"\"P\" 0 1 \"maroon\" 18 #f swiss normal normal #f))) #(struct:transl"
 #"ate 12.0 0.0 #(struct:translate 3.0 10.5 #(struct:text \"r\" 0 1 \"m"
 #"aroon\" 18 #f swiss normal normal #f))))) #(struct:translate 18.0 0."
 #"0 #(struct:translate 5.0 10.5 #(struct:text \"e\" 0 1 \"maroon\" 18 "
 #"#f swiss normal normal #f))))) #(struct:translate 28.0 0.0 #(struct:"
 #"translate 4.5 10.5 #(struct:text \"s\" 0 1 \"maroon\" 18 #f swiss no"
 #"rmal normal #f))))) #(struct:translate 37.0 0.0 #(struct:translate 4"
 #".5 10.5 #(struct:text \"s\" 0 1 \"maroon\" 18 #f swiss normal normal"
 #" #f))))) #(struct:translate 46.0 0.0 #(struct:translate 2.5 10.5 #(s"
 #"truct:text \" \" 0 1 \"maroon\" 18 #f swiss normal normal #f))))) #("
 #"struct:translate 51.0 0.0 #(struct:translate 1.5 10.5 #(struct:text "
 #"\"'\" 0 1 \"maroon\" 18 #f swiss normal normal #f))))) #(struct:tran"
 #"slate 54.0 0.0 #(struct:translate"
 #" 3.0 10.5 #(struct:text \"r\" 0 1 \"maroon\" 18 #f swiss normal norm"
 #"al #f))))) #(struct:translate 60.0 0.0 #(struct:translate 1.5 10.5 #"
 #"(struct:text \"'\" 0 1 \"maroon\" 18 #f swiss normal normal #f))))) "
 #"#(struct:translate 63.0 0.0 #(struct:translate 2.5 10.5 #(struct:tex"
 #"t \" \" 0 1 \"maroon\" 18 #f swiss normal normal #f))))) #(struct:tr"
 #"anslate 68.0 0.0 #(struct:translate 2.5 10.5 #(struct:text \"t\" 0 1"
 #" \"maroon\" 18 #f swiss normal normal #f))))) #(struct:translate 73."
 #"0 0.0 #(struct:translate 5.0 10.5 #(struct:text \"o\" 0 1 \"maroon\""
 #" 18 #f swiss normal normal #f))))) #(struct:translate 83.0 0.0 #(str"
 #"uct:translate 2.5 10.5 #(struct:text \" \" 0 1 \"maroon\" 18 #f swis"
 #"s normal normal #f))))) #(struct:translate 88.0 0.0 #(struct:transla"
 #"te 5.0 10.5 #(struct:text \"p\" 0 1 \"maroon\" 18 #f swiss normal no"
 #"rmal #f))))) #(struct:translate 98.0 0.0 #(struct:translate 2.0 10.5"
 #" #(struct:text \"l\" 0 1 \"maroon\" 18 #f swiss normal normal #f))))"
 #") #(struct:translate 102.0 0.0 #(struct:translate 5.0 10.5 #(struct:"
 #"text \"a\" 0 1 \"maroon\" 18 #f swiss normal normal #f))))) #(struct"
 #":translate 112.0 0.0 #(struct:translate 4.5 10.5 #(struct:text \"y\""
 #" 0 1 \"maroon\" 18 #f swiss normal normal #f))))) #(struct:translate"
 #" 121.0 0.0 #(struct:translate 2.5 10.5 #(struct:text \" \" 0 1 \"mar"
 #"oon\" 18 #f swiss normal normal #f))))) #(struct:translate 126.0 0.0"
 #" #(struct:translate 5.0 10.5 #(struct:text \"a\" 0 1 \"maroon\" 18 #"
 #"f swiss normal normal #f))))) #(struct:translate 136.0 0.0 #(struct:"
 #"translate 5.0 10.5 #(struct:text \"g\" 0 1 \"maroon\" 18 #f swiss no"
 #"rmal normal #f))))) #(struct:translate 146.0 0.0 #(struct:translate "
 #"5.0 10.5 #(struct:text \"a\" 0 1 \"maroon\" 18 #f swiss normal norma"
 #"l #f))))) #(struct:translate 156.0 0.0 #(struct:translate 2.0 10.5 #"
 #"(struct:text \"i\" 0 1 \"maroon\" 18 #f swiss normal normal #f))))) "
 #"#(struct:translate 160.0 0.0 #(struct:translate 5.0 10.5 #(struct:te"
 #"xt \"n\" 0 1 \"maroon\" 18 #f swiss normal normal #f))))))) #(struct"
 #":translate 0 0 #(struct:overlay #(struct:crop (#(struct:point 0 0) #"
 #"(struct:point 220 0) #(struct:point 220 200) #(struct:point 0 200)) "
 #"#(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(st"
 #"ruct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 220 0 0 0) "
 #"#(struct:pulled-point 0 0 220 200 0 0) #(struct:pulled-point 0 0 0 2"
 #"00 0 0)) outline #(struct:pen \"black\" 2 solid round round))))) #(s"
 #"truct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 "
 #"0 0) #(struct:pulled-point 0 0 220 0 0 0) #(struct:pulled-point 0 0 "
 #"220 200 0 0) #(struct:pulled-point 0 0 0 200 0 0)) outline \"transpa"
 #"rent\"))))))) #(struct:bb 220 200 200.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"end-message"
0 0 24 3 1 #" "
0 0 14 3 8 #"WORLD3x5"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 6           4 21 7540
(
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 220 0) #(struct:p"
 #"oint 220 200) #(struct:point 0 200)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 25.0 129.0 #(struct:overlay #(struct:tra"
 #"nslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay "
 #"#(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(str"
 #"uct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:transla"
 #"te 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(st"
 #"ruct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:"
 #"overlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0"
 #" 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct"
 #":translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:over"
 #"lay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #"
 #"(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tra"
 #"nslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:translat"
 #"e 6.0 10.5 #(struct:text \"Y\" 0 1 \"maroon\" 18 #f swiss normal nor"
 #"mal #f))) #(struct:translate 12.0 0.0 #(struct:translate 5.0 10.5 #("
 #"struct:text \"o\" 0 1 \"maroon\" 18 #f swiss normal normal #f))))) #"
 #"(struct:translate 22.0 0.0 #(struct:translate 5.0 10.5 #(struct:text"
 #" \"u\" 0 1 \"maroon\" 18 #f swiss normal normal #f))))) #(struct:tra"
 #"nslate 32.0 0.0 #(struct:translate 2.5 10.5 #(struct:text \" \" 0 1 "
 #"\"maroon\" 18 #f swiss normal normal #f))))) #(struct:translate 37.0"
 #" 0.0 #(struct:translate 5.0 10.5 #(struct:text \"L\" 0 1 \"maroon\" "
 #"18 #f swiss normal normal #f))))) #(struct:translate 47.0 0.0 #(stru"
 #"ct:translate 5.0 10.5 #(struct:text \"o\" 0 1 \"maroon\" 18 #f swiss"
 #" normal normal #f))))) #(struct:translate 57.0 0.0 #(struct:translat"
 #"e 4.5 10.5 #(struct:text \"s\" 0 1 \"maroon\" 18 #f swiss normal nor"
 #"mal #f))))) #(struct:translate 66.0 0.0 #(struct:translate 5.0 10.5 "
 #"#(struct:text \"e\" 0 1 \"maroon\" 18 #f swiss normal normal #f)))))"
 #" #(struct:translate 76.0 0.0 #(struct:translate 3.0 10.5 #(struct:te"
 #"xt \"!\" 0 1 \"maroon\" 18 #f swiss normal normal #f))))) #(struct:t"
 #"ranslate 82.0 0.0 #(struct:translate 2.5 10.5 #(struct:text \" \" 0 "
 #"1 \"maroon\" 18 #f swiss normal normal #f))))) #(struct:translate 87"
 #".0 0.0 #(struct:translate 6.0 10"
 #".5 #(struct:text \"S\" 0 1 \"maroon\" 18 #f swiss normal normal #f))"
 #"))) #(struct:translate 99.0 0.0 #(struct:translate 4.5 10.5 #(struct"
 #":text \"c\" 0 1 \"maroon\" 18 #f swiss normal normal #f))))) #(struc"
 #"t:translate 108.0 0.0 #(struct:tr"
 #"anslate 5.0 10.5 #(struct:text \"o\" 0 1 \"maroon\" 18 #f swiss norm"
 #"al normal #f))))) #(struct:translate 118.0 0.0 #(struct:translate 3."
 #"0 10.5 #(struct:text \"r\" 0 1 \"maroon\" 18 #f swiss normal normal "
 #"#f))))) #(struct:translate 124.0 0.0 #(struct:translate 5.0 10.5 #(s"
 #"truct:text \"e\" 0 1 \"maroon\" 18 #f swiss normal normal #f))))) #("
 #"struct:translate 134.0 0.0 #(struct:translate 5.5 10.5 #(struct:text"
 #" \"=\" 0 1 \"maroon\" 18 #f swiss normal normal #f))))) #(struct:tra"
 #"nslate 145.0 0.0 #(struct:translate 2.5 10.5 #(struct:text \" \" 0 1"
 #" \"maroon\" 18 #f swiss normal normal #f))))) #(struct:translate 150"
 #".0 0.0 #(struct:translate 5.0 10"
 #".5 #(struct:text \"0\" 0 1 \"maroon\" 18 #f swiss normal normal #f))"
 #"))) #(struct:translate 160.0 0.0 #(struct:translate 3.0 10.5 #(struc"
 #"t:text \"!\" 0 1 \"maroon\" 18 #f swiss normal normal #f))))) #(stru"
 #"ct:translate 0 21.0 #(struct:overlay #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 0 0 #(struct:overlay #(struct:translate "
 #"0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struc"
 #"t:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:ove"
 #"rlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 "
 #"#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tr"
 #"anslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay"
 #" #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(st"
 #"ruct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:transl"
 #"ate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(s"
 #"truct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 0 0 #(struct:overlay #(struct:translate "
 #"0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struc"
 #"t:translate 0 0 #(struct:translate 6.0 10.5 #(struct:text \"P\" 0 1 "
 #"\"maroon\" 18 #f swiss normal normal #f))) #(struct:translate 12.0 0"
 #".0 #(struct:translate 3.0 10.5 #(struct:text \"r\" 0 1 \"maroon\" 18"
 #" #f swiss normal normal #f))))) #(struct:translate 18.0 0.0 #(struct"
 #":translate 5.0 10.5 #(struct:text \"e\" 0 1 \"maroon\" 18 #f swiss n"
 #"ormal normal #f))))) #(struct:translate 28.0 0.0 #(struct:translate "
 #"4.5 10.5 #(struct:text \"s\" 0 1 \"maroon\" 18 #f swiss normal norma"
 #"l #f))))) #(struct:translate 37.0 0.0 #(struct:translate 4.5 10.5 #("
 #"struct:text \"s\" 0 1 \"maroon\" 18 #f swiss normal normal #f))))) #"
 #"(struct:translate 46.0 0.0 #(struct:translate 2.5 10.5 #(struct:text"
 #" \" \" 0 1 \"maroon\" 18 #f swiss normal normal #f))))) #(struct:tra"
 #"nslate 51.0 0.0 #(struct:translate 1.5 10.5 #(struct:text \"'\" 0 1 "
 #"\"maroon\" 18 #f swiss normal normal #f))))) #(struct:translate 54.0"
 #" 0.0 #(struct:translate 3.0 10.5 #(struct:text \"r\" 0 1 \"maroon\" "
 #"18 #f swiss normal normal #f))))) #(struct:translate 60.0 0.0 #(stru"
 #"ct:translate 1.5 10.5 #(struct:text \"'\" 0 1 \"maroon\" 18 #f swiss"
 #" normal normal #f))))) #(struct:translate 63.0 0.0 #(struct:translat"
 #"e 2.5 10.5 #(struct:text \" \" 0 1 \"maroon\" 18 #f swiss normal nor"
 #"mal #f))))) #(struct:translate 68.0 0.0 #(struct:translate 2.5 10.5 "
 #"#(struct:text \"t\" 0 1 \"maroon\" 18 #f swiss normal normal #f)))))"
 #" #(struct:translate 73.0 0.0 #(struct:translate 5.0 10.5 #(struct:te"
 #"xt \"o\" 0 1 \"maroon\" 18 #f swiss normal normal #f))))) #(struct:t"
 #"ranslate 83.0 0.0 #(struct:translate 2.5 10.5 #(struct:text \" \" 0 "
 #"1 \"maroon\" 18 #f swiss normal normal #f))))) #(struct:translate 88"
 #".0 0.0 #(struct:translate 5.0 10"
 #".5 #(struct:text \"p\" 0 1 \"maroon\" 18 #f swiss normal normal #f))"
 #"))) #(struct:translate 98.0 0.0 #(struct:translate 2.0 10.5 #(struct"
 #":text \"l\" 0 1 \"maroon\" 18 #f swiss normal normal #f))))) #(struc"
 #"t:translate 102.0 0.0 #(struct:tr"
 #"anslate 5.0 10.5 #(struct:text \"a\" 0 1 \"maroon\" 18 #f swiss norm"
 #"al normal #f))))) #(struct:translate 112.0 0.0 #(struct:translate 4."
 #"5 10.5 #(struct:text \"y\" 0 1 \"maroon\" 18 #f swiss normal normal "
 #"#f))))) #(struct:translate 121.0 0.0 #(struct:translate 2.5 10.5 #(s"
 #"truct:text \" \" 0 1 \"maroon\" 18 #f swiss normal normal #f))))) #("
 #"struct:translate 126.0 0.0 #(struct:translate 5.0 10.5 #(struct:text"
 #" \"a\" 0 1 \"maroon\" 18 #f swiss normal normal #f))))) #(struct:tra"
 #"nslate 136.0 0.0 #(struct:translate 5.0 10.5 #(struct:text \"g\" 0 1"
 #" \"maroon\" 18 #f swiss normal normal #f))))) #(struct:translate 146"
 #".0 0.0 #(struct:translate 5.0 10"
 #".5 #(struct:text \"a\" 0 1 \"maroon\" 18 #f swiss normal normal #f))"
 #"))) #(struct:translate 156.0 0.0 #(struct:translate 2.0 10.5 #(struc"
 #"t:text \"i\" 0 1 \"maroon\" 18 #f swiss normal normal #f))))) #(stru"
 #"ct:translate 160.0 0.0 #(struct:translate 5.0 10.5 #(struct:text \"n"
 #"\" 0 1 \"maroon\" 18 #f swiss normal normal #f))))))) #(struct:trans"
 #"late 0 0 #(struct:overlay #(struct:crop (#(struct:point 0 0) #(struc"
 #"t:point 220 0) #(struct:point 220 200) #(struct:point 0 200)) #(stru"
 #"ct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:p"
 #"ulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 220 0 0 0) #(stru"
 #"ct:pulled-point 0 0 220 200 0 0) #(struct:pulled-point 0 0 0 200 0 0"
 #")) outline #(struct:pen \"black\" 2 solid round round))))) #(struct:"
 #"translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #"
 #"(struct:pulled-point 0 0 220 0 0 0) #(struct:pulled-point 0 0 220 20"
 #"0 0 0) #(struct:pulled-point 0 0 0 200 0 0)) outline \"transparent\""
 #"))))))) #(struct:bb 220 200 200.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 27 #";;gameboard: World -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 82
(
 #";;Displays the World's score, lives, ball, and paddle on a frame wit"
 #"h bricks on it"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"gameboard"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 7 #"overlay"
0 0 24 3 2 #" ("
0 0 14 3 13 #"display-score"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 13 #"display-lives"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 12 #"display-ball"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 14 #"display-paddle"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"gameboard"
0 0 24 3 1 #" "
0 0 14 3 8 #"WORLD3x5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 6           4 21 17798
(
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:crop ("
 #"#(struct:point 0 0) #(struct:point 220 0) #(struct:point 220 200) #("
 #"struct:point 0 200)) #(struct:translate 0 0 #(struct:overlay #(struc"
 #"t:translate 9.5 187.0 #(struct:overlay #(struct:translate 0 0 #(stru"
 #"ct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:translat"
 #"e 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(str"
 #"uct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:o"
 #"verlay #(struct:translate 0 0 #(struct:translate 3.5 7.0 #(struct:te"
 #"xt \"S\" 0 1 \"black\" 11 #f swiss normal normal #f))) #(struct:tran"
 #"slate 7.0 0.0 #(struct:translate 3.0 7.0 #(struct:text \"c\" 0 1 \"b"
 #"lack\" 11 #f swiss normal normal #f))))) #(struct:translate 13.0 0.0"
 #" #(struct:translate 3.0 7.0 #(struct:text \"o\" 0 1 \"black\" 11 #f "
 #"swiss normal normal #f))))) #(struct:translate 19.0 0.0 #(struct:tra"
 #"nslate 2.0 7.0 #(struct:text \"r\" 0 1 \"black\" 11 #f swiss normal "
 #"normal #f))))) #(struct:translate 23.0 0.0 #(struct:translate 3.0 7."
 #"0 #(struct:text \"e\" 0 1 \"black\" 11 #f swiss normal normal #f))))"
 #") #(struct:translate 29.0 0.0 #(struct:translate 1.5 7.0 #(struct:te"
 #"xt \":\" 0 1 \"black\" 11 #f swiss normal normal #f))))) #(struct:tr"
 #"anslate 32.0 0.0 #(struct:translate 1.5 7.0 #(struct:text \" \" 0 1 "
 #"\"black\" 11 #f swiss normal normal #f))))) #(struct:translate 35.0 "
 #"0.0 #(struct:translate 3.0 7.0 #(struct:text \"0\" 0 1 \"black\" 11 "
 #"#f swiss normal normal #f))))) #(struct:translate 0 0 #(struct:overl"
 #"ay #(struct:crop (#(struct:point 0 0) #(struct:point 220 0) #(struct"
 #":point 220 200) #(struct:point 0 200)) #(struct:translate 0 0 #(stru"
 #"ct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0"
 #") #(struct:pulled-point 0 0 220 0 0 0) #(struct:pulled-point 0 0 220"
 #" 200 0 0) #(struct:pulled-point 0 0 0 200 0 0)) outline #(struct:pen"
 #" \"black\" 2 solid round round))))) #(struct:translate 0 0 #(struct:"
 #"polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 "
 #"0 220 0 0 0) #(struct:pulled-point 0 0 220 200 0 0) #(struct:pulled-"
 #"point 0 0 0 200 0 0)) outline \"transparent\")))))))) #(struct:trans"
 #"late 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 220 0) #("
 #"struct:point 220 200) #(struct:point 0 200)) #(struct:translate 0 0 "
 #"#(struct:overlay #(struct:translate 171.0 187.0 #(struct:overlay #(s"
 #"truct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 0 0 #(struct:overlay #(struct:translate "
 #"0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struc"
 #"t:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:tra"
 #"nslate 3.0 7.0 #(struct:text \"L\" 0 1 \"black\" 11 #f swiss normal "
 #"normal #f))) #(struct:translate 6.0 0.0 #(struct:translate 1.0 7.0 #"
 #"(struct:text \"i\" 0 1 \"black\" 11 #f swiss normal normal #f))))) #"
 #"(struct:translate 8.0 0.0 #(struct"
 #":translate 3.0 7.0 #(struct:text \"v\" 0 1 \"black\" 11 #f swiss nor"
 #"mal normal #f))))) #(struct:translate 14.0 0.0 #(struct:translate 3."
 #"0 7.0 #(struct:text \"e\" 0 1 \"black\" 11 #f swiss normal normal #f"
 #"))))) #(struct:translate 20.0 0.0 #(struct:translate 3.0 7.0 #(struc"
 #"t:text \"s\" 0 1 \"black\" 11 #f swiss normal normal #f))))) #(struc"
 #"t:translate 26.0 0.0 #(struct:translate 1.5 7.0 #(struct:text \":\" "
 #"0 1 \"black\" 11 #f swiss normal normal #f))))) #(struct:translate 2"
 #"9.0 0.0 #(struct:translate 1.5 7.0 #(struct:text \" \" 0 1 \"black\""
 #" 11 #f swiss normal normal #f))))) #(struct:translate 32.0 0.0 #(str"
 #"uct:translate 3.0 7.0 #(struct:text \"3\" 0 1 \"black\" 11 #f swiss "
 #"normal normal #f))))) #(struct:translate 0 0 #(struct:overlay #(stru"
 #"ct:crop (#(struct:point 0 0) #(struct:point 220 0) #(struct:point 22"
 #"0 200) #(struct:point 0 200)) #(struct:translate 0 0 #(struct:transl"
 #"ate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struc"
 #"t:pulled-point 0 0 220 0 0 0) #(struct:pulled-point 0 0 220 200 0 0)"
 #" #(struct:pulled-point 0 0 0 200 "
 #"0 0)) outline #(struct:pen \"black\" 2 solid round round))))) #(stru"
 #"ct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0"
 #") #(struct:pulled-point 0 0 220 0 0 0) #(struct:pulled-point 0 0 220"
 #" 200 0 0) #(struct:pulled-point 0 0 0 200 0 0)) outline \"transparen"
 #"t\")))))))))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0"
 #" 0) #(struct:point 220 0) #(struct:point 220 200) #(struct:point 0 2"
 #"00)) #(struct:translate 0 0 #(struct:overlay #(struct:translate 104 "
 #"181 #(struct:translate 6 6 #(struct:ellipse 12 12 0 255 \"blue\"))) "
 #"#(struct:translate 0 0 #(struct:overlay #(struct:crop (#(struct:poin"
 #"t 0 0) #(struct:point 220 0) #(struct:point 220 200) #(struct:point "
 #"0 200)) #(struct:translate 0 0 #(struct:translate 0 0 #(struct:polyg"
 #"on (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 220"
 #" 0 0 0) #(struct:pulled-point 0 0 220 200 0 0) #(struct:pulled-point"
 #" 0 0 0 200 0 0)) outline #(struct:pen \"black\" 2 solid round round)"
 #")))) #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point "
 #"0 0 0 0 0 0) #(struct:pulled-point 0 0 220 0 0 0) #(struct:pulled-po"
 #"int 0 0 220 200 0 0) #(struct:pull"
 #"ed-point 0 0 0 200 0 0)) outline \"transparent\")))))))))) #(struct:"
 #"translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 220 "
 #"0) #(struct:point 220 200) #(struct:point 0 200)) #(struct:translate"
 #" 0 0 #(struct:overlay #(struct:translate 80 190 #(struct:translate 0"
 #" 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pul"
 #"led-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 10 0 0) #(struc"
 #"t:pulled-point 0 0 0 10 0 0)) 255 \"red\"))) #(struct:translate 0 0 "
 #"#(struct:crop (#(struct:point 0 0) #(struct:point 220 0) #(struct:po"
 #"int 220 200) #(struct:point 0 200)) #(struct:translate 0 0 #(struct:"
 #"overlay #(struct:translate 145 35 #(struct:overlay #(struct:crop (#("
 #"struct:point 0 0) #(struct:point 30 0) #(struct:point 30 10) #(struc"
 #"t:point 0 10)) #(struct:translate 0 0 #(struct:translate 0 0 #(struc"
 #"t:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point "
 #"0 0 30 0 0 0) #(struct:pulled-point 0 0 30 10 0 0) #(struct:pulled-p"
 #"oint 0 0 0 10 0 0)) outline #(struct:pen \"black\" 2 solid round rou"
 #"nd))))) #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-poi"
 #"nt 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(struct:pulled-"
 #"point 0 0 30 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) 255 \"mage"
 #"nta\")))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) "
 #"#(struct:point 220 0) #(struct:point 220 200) #(struct:point 0 200))"
 #" #(struct:translate 0 0 #(struct:overlay #(struct:translate 145 20 #"
 #"(struct:overlay #(struct:crop (#(struct:point 0 0) #(struct:point 30"
 #" 0) #(struct:point 30 10) #(struct:point 0 10)) #(struct:translate 0"
 #" 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 "
 #"0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(struct:pulled-point"
 #" 0 0 30 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) outline #(struc"
 #"t:pen \"black\" 2 solid round round))))) #(struct:translate 0 0 #(st"
 #"ruct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-poi"
 #"nt 0 0 30 0 0 0) #(struct:pulled-point 0 0 30 10 0 0) #(struct:pulle"
 #"d-point 0 0 0 10 0 0)) 255 \"magenta\")))) #(struct:translate 0 0 #("
 #"struct:crop (#(struct:point 0 0) #(struct:point 220 0) #(struct:poin"
 #"t 220 200) #(struct:point 0 200)) #(struct:translate 0 0 #(struct:ov"
 #"erlay #(struct:translate 145 5 #(struct:overlay #(struct:crop (#(str"
 #"uct:point 0 0) #(struct:point 30 0) #(struct:point 30 10) #(struct:p"
 #"oint 0 10)) #(struct:translate 0 0 #(struct:translate 0 0 #(struct:p"
 #"olygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0"
 #" 30 0 0 0) #(struct:pulled-point 0 0 30 10 0 0) #(struct:pulled-poin"
 #"t 0 0 0 10 0 0)) outline #(struct:pen \"black\" 2 solid round round)"
 #")))) #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point "
 #"0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(struct:pulled-poi"
 #"nt 0 0 30 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) 255 \"magenta"
 #"\")))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(s"
 #"truct:point 220 0) #(struct:point 220 200) #(struct:point 0 200)) #("
 #"struct:translate 0 0 #(struct:overlay #(struct:translate 110 35 #(st"
 #"ruct:overlay #(struct:crop (#(struct:point 0 0) #(struct:point 30 0)"
 #" #(struct:point 30 10) #(struct:point 0 10)) #(struct:translate 0 0 "
 #"#(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0"
 #" 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(struct:pulled-point 0 "
 #"0 30 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) outline #(struct:p"
 #"en \"black\" 2 solid round round))))) #(struct:translate 0 0 #(struc"
 #"t:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point "
 #"0 0 30 0 0 0) #(struct:pulled-point 0 0 30 10 0 0) #(struct:pulled-p"
 #"oint 0 0 0 10 0 0)) 255 \"magenta\")))) #(struct:translate 0 0 #(str"
 #"uct:crop (#(struct:point 0 0) #(struct:point 220 0) #(struct:point 2"
 #"20 200) #(struct:point 0 200)) #(struct:translate 0 0 #(struct:overl"
 #"ay #(struct:translate 110 20 #(struct:overlay #(struct:crop (#(struc"
 #"t:point 0 0) #(struct:point 30 0) #(struct:point 30 10) #(struct:poi"
 #"nt 0 10)) #(struct:translate 0 0 #(struct:translate 0 0 #(struct:pol"
 #"ygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 3"
 #"0 0 0 0) #(struct:pulled-point 0 0 30 10 0 0) #(struct:pulled-point "
 #"0 0 0 10 0 0)) outline #(struct:pen \"black\" 2 solid round round)))"
 #")) #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 "
 #"0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(struct:pulled-point"
 #" 0 0 30 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) 255 \"magenta\""
 #")))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(str"
 #"uct:point 220 0) #(struct:point 220 200) #(struct:point 0 200)) #(st"
 #"ruct:translate 0 0 #(struct:overlay #(struct:translate 110 5 #(struc"
 #"t:overlay #(struct:crop (#(struct:point 0 0) #(struct:point 30 0) #("
 #"struct:point 30 10) #(struct:point 0 10)) #(struct:translate 0 0 #(s"
 #"truct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 "
 #"0 0) #(struct:pulled-point 0 0 30 0 0 0) #(struct:pulled-point 0 0 3"
 #"0 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) outline #(struct:pen "
 #"\"black\" 2 solid round round))))) #(struct:translate 0 0 #(struct:p"
 #"olygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0"
 #" 30 0 0 0) #(struct:pulled-point 0 0 30 10 0 0) #(struct:pulled-poin"
 #"t 0 0 0 10 0 0)) 255 \"magenta\")))) #(struct:translate 0 0 #(struct"
 #":crop (#(struct:point 0 0) #(struct:point 220 0) #(struct:point 220 "
 #"200) #(struct:point 0 200)) #(struct:translate 0 0 #(struct:overlay "
 #"#(struct:translate 75 35 #(struct:overlay #(struct:crop (#(struct:po"
 #"int 0 0) #(struct:point 30 0) #(struct:point 30 10) #(struct:point 0"
 #" 10)) #(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon"
 #" (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 "
 #"0 0) #(struct:pulled-point 0 0 30 10 0 0) #(struct:pulled-point 0 0 "
 #"0 10 0 0)) outline #(struct:pen \"black\" 2 solid round round))))) #"
 #"(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 "
 #"0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(struct:pulled-point 0 0"
 #" 30 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) 255 \"magenta\"))))"
 #" #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:"
 #"point 220 0) #(struct:point 220 200) #(struct:point 0 200)) #(struct"
 #":translate 0 0 #(struct:overlay #(struct:translate 75 20 #(struct:ov"
 #"erlay #(struct:crop (#(struct:point 0 0) #(struct:point 30 0) #(stru"
 #"ct:point 30 10) #(struct:point 0 10)) #(struct:translate 0 0 #(struc"
 #"t:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0)"
 #" #(struct:pulled-point 0 0 30 0 0 0) #(struct:pulled-point 0 0 30 10"
 #" 0 0) #(struct:pulled-point 0 0 0 10 0 0)) outline #(struct:pen \"bl"
 #"ack\" 2 solid round round))))) #(struct:translate 0 0 #(struct:polyg"
 #"on (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 "
 #"0 0 0) #(struct:pulled-point 0 0 30 10 0 0) #(struct:pulled-point 0 "
 #"0 0 10 0 0)) 255 \"magenta\")))) #(struct:translate 0 0 #(struct:cro"
 #"p (#(struct:point 0 0) #(struct:point 220 0) #(struct:point 220 200)"
 #" #(struct:point 0 200)) #(struct:translate 0 0 #(struct:overlay #(st"
 #"ruct:translate 75 5 #(struct:overlay #(struct:crop (#(struct:point 0"
 #" 0) #(struct:point 30 0) #(struct:point 30 10) #(struct:point 0 10))"
 #" #(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(s"
 #"truct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) "
 #"#(struct:pulled-point 0 0 30 10 0 0) #(struct:pulled-point 0 0 0 10 "
 #"0 0)) outline #(struct:pen \"black\" 2 solid round round))))) #(stru"
 #"ct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0"
 #") #(struct:pulled-point 0 0 30 0 0 0) #(struct:pulled-point 0 0 30 1"
 #"0 0 0) #(struct:pulled-point 0 0 0 10 0 0)) 255 \"magenta\")))) #(st"
 #"ruct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point"
 #" 220 0) #(struct:point 220 200) #(struct:point 0 200)) #(struct:tran"
 #"slate 0 0 #(struct:overlay #(struct:translate 40 35 #(struct:overlay"
 #" #(struct:crop (#(struct:point 0 0) #(struct:point 30 0) #(struct:po"
 #"int 30 10) #(struct:point 0 10)) #(struct:translate 0 0 #(struct:tra"
 #"nslate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(st"
 #"ruct:pulled-point 0 0 30 0 0 0) #(struct:pulled-point 0 0 30 10 0 0)"
 #" #(struct:pulled-point 0 0 0 10 0 0)) outline #(struct:pen \"black\""
 #" 2 solid round round))))) #(struct:translate 0 0 #(struct:polygon (#"
 #"(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0"
 #") #(struct:pulled-point 0 0 30 10 0 0) #(struct:pulled-point 0 0 0 1"
 #"0 0 0)) 255 \"magenta\")))) #(struct:translate 0 0 #(struct:crop (#("
 #"struct:point 0 0) #(struct:point 220 0) #(struct:point 220 200) #(st"
 #"ruct:point 0 200)) #(struct:translate 0 0 #(struct:overlay #(struct:"
 #"translate 40 20 #(struct:overlay #(struct:crop (#(struct:point 0 0) "
 #"#(struct:point 30 0) #(struct:point 30 10) #(struct:point 0 10)) #(s"
 #"truct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struc"
 #"t:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(st"
 #"ruct:pulled-point 0 0 30 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)"
 #") outline #(struct:pen \"black\" 2 solid round round))))) #(struct:t"
 #"ranslate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #("
 #"struct:pulled-point 0 0 30 0 0 0) #(struct:pulled-point 0 0 30 10 0 "
 #"0) #(struct:pulled-point 0 0 0 10 0 0)) 255 \"magenta\")))) #(struct"
 #":translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 220"
 #" 0) #(struct:point 220 200) #(struct:point 0 200)) #(struct:translat"
 #"e 0 0 #(struct:overlay #(struct:translate 40 5 #(struct:overlay #(st"
 #"ruct:crop (#(struct:point 0 0) #(struct:point 30 0) #(struct:point 3"
 #"0 10) #(struct:point 0 10)) #(struct:translate 0 0 #(struct:translat"
 #"e 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:"
 #"pulled-point 0 0 30 0 0 0) #(struct:pulled-point 0 0 30 10 0 0) #(st"
 #"ruct:pulled-point 0 0 0 10 0 0)) outline #(struct:pen \"black\" 2 so"
 #"lid round round))))) #(struct:translate 0 0 #(struct:polygon (#(stru"
 #"ct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(s"
 #"truct:pulled-point 0 0 30 10 0 0) #(struct:pulled-point 0 0 0 10 0 0"
 #")) 255 \"magenta\")))) #(struct:translate 0 0 #(struct:crop (#(struc"
 #"t:point 0 0) #(struct:point 220 0) #(struct:point 220 200) #(struct:"
 #"point 0 200)) #(struct:translate 0 0 #(struct:overlay #(struct:trans"
 #"late 5 35 #(struct:overlay #(struct:crop (#(struct:point 0 0) #(stru"
 #"ct:point 30 0) #(struct:point 30 10) #(struct:point 0 10)) #(struct:"
 #"translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pull"
 #"ed-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(struct:p"
 #"ulled-point 0 0 30 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) outl"
 #"ine #(struct:pen \"black\" 2 solid round round))))) #(struct:transla"
 #"te 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct"
 #":pulled-point 0 0 30 0 0 0) #(struct:pulled-point 0 0 30 10 0 0) #(s"
 #"truct:pulled-point 0 0 0 10 0 0)) 255 \"magenta\")))) #(struct:trans"
 #"late 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 220 0) #("
 #"struct:point 220 200) #(struct:point 0 200)) #(struct:translate 0 0 "
 #"#(struct:overlay #(struct:translate 5 20 #(struct:overlay #(struct:c"
 #"rop (#(struct:point 0 0) #(struct:point 30 0) #(struct:point 30 10) "
 #"#(struct:point 0 10)) #(struct:translate 0 0 #(struct:translate 0 0 "
 #"#(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled"
 #"-point 0 0 30 0 0 0) #(struct:pulled-point 0 0 30 10 0 0) #(struct:p"
 #"ulled-point 0 0 0 10 0 0)) outline #(struct:pen \"black\" 2 solid ro"
 #"und round))))) #(struct:translate 0 0 #(struct:polygon (#(struct:pul"
 #"led-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(struct:"
 #"pulled-point 0 0 30 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) 255"
 #" \"magenta\")))) #(struct:translate 0 0 #(struct:crop (#(struct:poin"
 #"t 0 0) #(struct:point 220 0) #(struct:point 220 200) #(struct:point "
 #"0 200)) #(struct:translate 0 0 #(struct:overlay #(struct:translate 5"
 #" 5 #(struct:overlay #(struct:crop (#(struct:point 0 0) #(struct:poin"
 #"t 30 0) #(struct:point 30 10) #(struct:point 0 10)) #(struct:transla"
 #"te 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-poin"
 #"t 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(struct:pulled-p"
 #"oint 0 0 30 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) outline #(s"
 #"truct:pen \"black\" 2 solid round round))))) #(struct:translate 0 0 "
 #"#(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled"
 #"-point 0 0 30 0 0 0) #(struct:pulled-point 0 0 30 10 0 0) #(struct:p"
 #"ulled-point 0 0 0 10 0 0)) 255 \"magenta\")))) #(struct:translate 0 "
 #"0 #(struct:overlay #(struct:crop (#(struct:point 0 0) #(struct:point"
 #" 220 0) #(struct:point 220 200) #(struct:point 0 200)) #(struct:tran"
 #"slate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-p"
 #"oint 0 0 0 0 0 0) #(struct:pulled-point 0 0 220 0 0 0) #(struct:pull"
 #"ed-point 0 0 220 200 0 0) #(struct:pulled-point 0 0 0 200 0 0)) outl"
 #"ine #(struct:pen \"black\" 2 solid round round))))) #(struct:transla"
 #"te 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct"
 #":pulled-point 0 0 220 0 0 0) #(struct:pulled-point 0 0 220 200 0 0) "
 #"#(struct:pulled-point 0 0 0 200 0 0)) outline \"transparent\")))))))"
 #")))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) #(str"
 #"uct:bb 220 200 200.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"gameboard"
0 0 24 3 1 #" "
0 0 14 3 8 #"WORLD2x2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 6           4 21 9216
(
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:crop ("
 #"#(struct:point 0 0) #(struct:point 220 0) #(struct:point 220 200) #("
 #"struct:point 0 200)) #(struct:translate 0 0 #(struct:overlay #(struc"
 #"t:translate 9.5 187.0 #(struct:overlay #(struct:translate 0 0 #(stru"
 #"ct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:translat"
 #"e 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(str"
 #"uct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:o"
 #"verlay #(struct:translate 0 0 #(struct:translate 3.5 7.0 #(struct:te"
 #"xt \"S\" 0 1 \"black\" 11 #f swiss normal normal #f))) #(struct:tran"
 #"slate 7.0 0.0 #(struct:translate 3.0 7.0 #(struct:text \"c\" 0 1 \"b"
 #"lack\" 11 #f swiss normal normal #f))))) #(struct:translate 13.0 0.0"
 #" #(struct:translate 3.0 7.0 #(struct:text \"o\" 0 1 \"black\" 11 #f "
 #"swiss normal normal #f))))) #(struct:translate 19.0 0.0 #(struct:tra"
 #"nslate 2.0 7.0 #(struct:text \"r\" 0 1 \"black\" 11 #f swiss normal "
 #"normal #f))))) #(struct:translate 23.0 0.0 #(struct:translate 3.0 7."
 #"0 #(struct:text \"e\" 0 1 \"black\" 11 #f swiss normal normal #f))))"
 #") #(struct:translate 29.0 0.0 #(struct:translate 1.5 7.0 #(struct:te"
 #"xt \":\" 0 1 \"black\" 11 #f swiss normal normal #f))))) #(struct:tr"
 #"anslate 32.0 0.0 #(struct:translate 1.5 7.0 #(struct:text \" \" 0 1 "
 #"\"black\" 11 #f swiss normal normal #f))))) #(struct:translate 35.0 "
 #"0.0 #(struct:translate 3.0 7.0 #(struct:text \"0\" 0 1 \"black\" 11 "
 #"#f swiss normal normal #f))))) #(struct:translate 0 0 #(struct:overl"
 #"ay #(struct:crop (#(struct:point 0 0) #(struct:point 220 0) #(struct"
 #":point 220 200) #(struct:point 0 200)) #(struct:translate 0 0 #(stru"
 #"ct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0"
 #") #(struct:pulled-point 0 0 220 0 0 0) #(struct:pulled-point 0 0 220"
 #" 200 0 0) #(struct:pulled-point 0 0 0 200 0 0)) outline #(struct:pen"
 #" \"black\" 2 solid round round))))) #(struct:translate 0 0 #(struct:"
 #"polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 "
 #"0 220 0 0 0) #(struct:pulled-point 0 0 220 200 0 0) #(struct:pulled-"
 #"point 0 0 0 200 0 0)) outline \"transparent\")))))))) #(struct:trans"
 #"late 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 220 0) #("
 #"struct:point 220 200) #(struct:point 0 200)) #(struct:translate 0 0 "
 #"#(struct:overlay #(struct:translate 171.0 187.0 #(struct:overlay #(s"
 #"truct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 0 0 #(struct:overlay #(struct:translate "
 #"0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struc"
 #"t:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:tra"
 #"nslate 3.0 7.0 #(struct:text \"L\" 0 1 \"black\" 11 #f swiss normal "
 #"normal #f))) #(struct:translate 6.0 0.0 #(struct:translate 1.0 7.0 #"
 #"(struct:text \"i\" 0 1 \"black\" 11 #f swiss normal normal #f))))) #"
 #"(struct:translate 8.0 0.0 #(struct"
 #":translate 3.0 7.0 #(struct:text \"v\" 0 1 \"black\" 11 #f swiss nor"
 #"mal normal #f))))) #(struct:translate 14.0 0.0 #(struct:translate 3."
 #"0 7.0 #(struct:text \"e\" 0 1 \"black\" 11 #f swiss normal normal #f"
 #"))))) #(struct:translate 20.0 0.0 #(struct:translate 3.0 7.0 #(struc"
 #"t:text \"s\" 0 1 \"black\" 11 #f swiss normal normal #f))))) #(struc"
 #"t:translate 26.0 0.0 #(struct:translate 1.5 7.0 #(struct:text \":\" "
 #"0 1 \"black\" 11 #f swiss normal normal #f))))) #(struct:translate 2"
 #"9.0 0.0 #(struct:translate 1.5 7.0 #(struct:text \" \" 0 1 \"black\""
 #" 11 #f swiss normal normal #f))))) #(struct:translate 32.0 0.0 #(str"
 #"uct:translate 3.0 7.0 #(struct:text \"3\" 0 1 \"black\" 11 #f swiss "
 #"normal normal #f))))) #(struct:translate 0 0 #(struct:overlay #(stru"
 #"ct:crop (#(struct:point 0 0) #(struct:point 220 0) #(struct:point 22"
 #"0 200) #(struct:point 0 200)) #(struct:translate 0 0 #(struct:transl"
 #"ate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struc"
 #"t:pulled-point 0 0 220 0 0 0) #(struct:pulled-point 0 0 220 200 0 0)"
 #" #(struct:pulled-point 0 0 0 200 "
 #"0 0)) outline #(struct:pen \"black\" 2 solid round round))))) #(stru"
 #"ct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0"
 #") #(struct:pulled-point 0 0 220 0 0 0) #(struct:pulled-point 0 0 220"
 #" 200 0 0) #(struct:pulled-point 0 0 0 200 0 0)) outline \"transparen"
 #"t\")))))))))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0"
 #" 0) #(struct:point 220 0) #(struct:point 220 200) #(struct:point 0 2"
 #"00)) #(struct:translate 0 0 #(struct:overlay #(struct:translate 104 "
 #"181 #(struct:translate 6 6 #(struct:ellipse 12 12 0 255 \"blue\"))) "
 #"#(struct:translate 0 0 #(struct:overlay #(struct:crop (#(struct:poin"
 #"t 0 0) #(struct:point 220 0) #(struct:point 220 200) #(struct:point "
 #"0 200)) #(struct:translate 0 0 #(struct:translate 0 0 #(struct:polyg"
 #"on (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 220"
 #" 0 0 0) #(struct:pulled-point 0 0 220 200 0 0) #(struct:pulled-point"
 #" 0 0 0 200 0 0)) outline #(struct:pen \"black\" 2 solid round round)"
 #")))) #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point "
 #"0 0 0 0 0 0) #(struct:pulled-point 0 0 220 0 0 0) #(struct:pulled-po"
 #"int 0 0 220 200 0 0) #(struct:pull"
 #"ed-point 0 0 0 200 0 0)) outline \"transparent\")))))))))) #(struct:"
 #"translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 220 "
 #"0) #(struct:point 220 200) #(struct:point 0 200)) #(struct:translate"
 #" 0 0 #(struct:overlay #(struct:translate 80 190 #(struct:translate 0"
 #" 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pul"
 #"led-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 10 0 0) #(struc"
 #"t:pulled-point 0 0 0 10 0 0)) 255 \"red\"))) #(struct:translate 0 0 "
 #"#(struct:crop (#(struct:point 0 0) #(struct:point 220 0) #(struct:po"
 #"int 220 200) #(struct:point 0 200)) #(struct:translate 0 0 #(struct:"
 #"overlay #(struct:translate 40 20 #(struct:overlay #(struct:crop (#(s"
 #"truct:point 0 0) #(struct:point 30 0) #(struct:point 30 10) #(struct"
 #":point 0 10)) #(struct:translate 0 0 #(struct:translate 0 0 #(struct"
 #":polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0"
 #" 0 30 0 0 0) #(struct:pulled-point 0 0 30 10 0 0) #(struct:pulled-po"
 #"int 0 0 0 10 0 0)) outline #(struct:pen \"black\" 2 solid round roun"
 #"d))))) #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-poin"
 #"t 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(struct:pulled-p"
 #"oint 0 0 30 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) 255 \"magen"
 #"ta\")))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #"
 #"(struct:point 220 0) #(struct:point 220 200) #(struct:point 0 200)) "
 #"#(struct:translate 0 0 #(struct:overlay #(struct:translate 40 5 #(st"
 #"ruct:overlay #(struct:crop (#(struct:point 0 0) #(struct:point 30 0)"
 #" #(struct:point 30 10) #(struct:point 0 10)) #(struct:translate 0 0 "
 #"#(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0"
 #" 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(struct:pulled-point 0 "
 #"0 30 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) outline #(struct:p"
 #"en \"black\" 2 solid round round))))) #(struct:translate 0 0 #(struc"
 #"t:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point "
 #"0 0 30 0 0 0) #(struct:pulled-point 0 0 30 10 0 0) #(struct:pulled-p"
 #"oint 0 0 0 10 0 0)) 255 \"magenta\")))) #(struct:translate 0 0 #(str"
 #"uct:crop (#(struct:point 0 0) #(struct:point 220 0) #(struct:point 2"
 #"20 200) #(struct:point 0 200)) #(struct:translate 0 0 #(struct:overl"
 #"ay #(struct:translate 5 20 #(struct:overlay #(struct:crop (#(struct:"
 #"point 0 0) #(struct:point 30 0) #(struct:point 30 10) #(struct:point"
 #" 0 10)) #(struct:translate 0 0 #(struct:translate 0 0 #(struct:polyg"
 #"on (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 "
 #"0 0 0) #(struct:pulled-point 0 0 30 10 0 0) #(struct:pulled-point 0 "
 #"0 0 10 0 0)) outline #(struct:pen \"black\" 2 solid round round)))))"
 #" #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 "
 #"0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(struct:pulled-point 0"
 #" 0 30 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) 255 \"magenta\"))"
 #")) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struc"
 #"t:point 220 0) #(struct:point 220 200) #(struct:point 0 200)) #(stru"
 #"ct:translate 0 0 #(struct:overlay #(struct:translate 5 5 #(struct:ov"
 #"erlay #(struct:crop (#(struct:point 0 0) #(struct:point 30 0) #(stru"
 #"ct:point 30 10) #(struct:point 0 10)) #(struct:translate 0 0 #(struc"
 #"t:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0)"
 #" #(struct:pulled-point 0 0 30 0 0 0) #(struct:pulled-point 0 0 30 10"
 #" 0 0) #(struct:pulled-point 0 0 0 10 0 0)) outline #(struct:pen \"bl"
 #"ack\" 2 solid round round))))) #(struct:translate 0 0 #(struct:polyg"
 #"on (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 "
 #"0 0 0) #(struct:pulled-point 0 0 30 10 0 0) #(struct:pulled-point 0 "
 #"0 0 10 0 0)) 255 \"magenta\")))) #(struct:translate 0 0 #(struct:ove"
 #"rlay #(struct:crop (#(struct:point 0 0) #(struct:point 220 0) #(stru"
 #"ct:point 220 200) #(struct:point 0 200)) #(struct:translate 0 0 #(st"
 #"ruct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0"
 #" 0) #(struct:pulled-point 0 0 220 0 0 0) #(struct:pulled-point 0 0 2"
 #"20 200 0 0) #(struct:pulled-point 0 0 0 200 0 0)) outline #(struct:p"
 #"en \"black\" 2 solid round round))))) #(struct:translate 0 0 #(struc"
 #"t:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point "
 #"0 0 220 0 0 0) #(struct:pulled-point 0 0 220 200 0 0) #(struct:pulle"
 #"d-point 0 0 0 200 0 0)) outline \"transparent\")))))))))))))))))))))"
 #")))) #(struct:bb 220 200 200.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 30 #";;display-ball: World -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 61
#";;Displays the World's ball on a frame at located coordiantes"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"display-ball"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"place-image"
0 0 24 3 1 #" "
0 0 14 3 8 #"BALL-IMG"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 6 #"ball-x"
0 0 24 3 2 #" ("
0 0 14 3 10 #"world-ball"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 6 #"ball-y"
0 0 24 3 2 #" ("
0 0 14 3 10 #"world-ball"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 11 #"empty-frame"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"display-ball"
0 0 24 3 1 #" "
0 0 14 3 8 #"WORLD3x5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 6           4 21 892
(
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 220 0) #(struct:p"
 #"oint 220 200) #(struct:point 0 200)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 104 181 #(struct:translate 6 6 #(struct:"
 #"ellipse 12 12 0 255 \"blue\"))) #(struct:translate 0 0 #(struct:over"
 #"lay #(struct:crop (#(struct:point 0 0) #(struct:point 220 0) #(struc"
 #"t:point 220 200) #(struct:point 0 200)) #(struct:translate 0 0 #(str"
 #"uct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 "
 #"0) #(struct:pulled-point 0 0 220 0 0 0) #(struct:pulled-point 0 0 22"
 #"0 200 0 0) #(struct:pulled-point 0 0 0 200 0 0)) outline #(struct:pe"
 #"n \"black\" 2 solid round round))))) #(struct:translate 0 0 #(struct"
 #":polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0"
 #" 0 220 0 0 0) #(struct:pulled-point 0 0 220 200 0 0) #(struct:pulled"
 #"-point 0 0 0 200 0 0)) outline \"transparent\"))))))) #(struct:bb 22"
 #"0 200 200) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"display-ball"
0 0 24 3 1 #" "
0 0 14 3 10 #"WORLD3x5-S"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 6           4 21 890
(
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 220 0) #(struct:p"
 #"oint 220 200) #(struct:point 0 200)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 44 44 #(struct:translate 6 6 #(struct:el"
 #"lipse 12 12 0 255 \"blue\"))) #(struct:translate 0 0 #(struct:overla"
 #"y #(struct:crop (#(struct:point 0 0) #(struct:point 220 0) #(struct:"
 #"point 220 200) #(struct:point 0 200)) #(struct:translate 0 0 #(struc"
 #"t:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0)"
 #" #(struct:pulled-point 0 0 220 0 0 0) #(struct:pulled-point 0 0 220 "
 #"200 0 0) #(struct:pulled-point 0 0 0 200 0 0)) outline #(struct:pen "
 #"\"black\" 2 solid round round))))) #(struct:translate 0 0 #(struct:p"
 #"olygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0"
 #" 220 0 0 0) #(struct:pulled-point 0 0 220 200 0 0) #(struct:pulled-p"
 #"oint 0 0 0 200 0 0)) outline \"transparent\"))))))) #(struct:bb 220 "
 #"200 200) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";;display-paddle: World -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";;Displays the World's paddle and bricks"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"display-paddle"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"place-image"
0 0 24 3 1 #" "
0 0 14 3 10 #"PADDLE-IMG"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 9 #"pad-bound"
0 0 24 3 2 #" ("
0 0 14 3 10 #"world-padx"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #") "
0 0 14 3 1 #"w"
0 0 24 3 2 #") "
0 0 14 3 8 #"PADDLE-Y"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 11 #"draw-bricks"
0 0 24 3 2 #" ("
0 0 14 3 12 #"world-bricks"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 11 #"empty-frame"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"display-paddle"
0 0 24 3 1 #" "
0 0 14 3 10 #"WORLD3x5-S"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 6           4 21 12726
(
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 220 0) #(struct:p"
 #"oint 220 200) #(struct:point 0 200)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 80 190 #(struct:translate 0 0 #(struct:p"
 #"olygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0"
 #" 40 0 0 0) #(struct:pulled-point 0 0 40 10 0 0) #(struct:pulled-poin"
 #"t 0 0 0 10 0 0)) 255 \"red\"))) #(struct:translate 0 0 #(struct:crop"
 #" (#(struct:point 0 0) #(struct:point 220 0) #(struct:point 220 200) "
 #"#(struct:point 0 200)) #(struct:translate 0 0 #(struct:overlay #(str"
 #"uct:translate 145 35 #(struct:overlay #(struct:crop (#(struct:point "
 #"0 0) #(struct:point 30 0) #(struct:point 30 10) #(struct:point 0 10)"
 #") #(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#("
 #"struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0)"
 #" #(struct:pulled-point 0 0 30 10 0 0) #(struct:pulled-point 0 0 0 10"
 #" 0 0)) outline #(struct:pen \"black\" 2 solid round round))))) #(str"
 #"uct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 "
 #"0) #(struct:pulled-point 0 0 30 0 0 0) #(struct:pulled-point 0 0 30 "
 #"10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) 255 \"magenta\")))) #(s"
 #"truct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:poin"
 #"t 220 0) #(struct:point 220 200) #(struct:point 0 200)) #(struct:tra"
 #"nslate 0 0 #(struct:overlay #(struct:translate 145 20 #(struct:overl"
 #"ay #(struct:crop (#(struct:point 0 0) #(struct:point 30 0) #(struct:"
 #"point 30 10) #(struct:point 0 10)) #(struct:translate 0 0 #(struct:t"
 #"ranslate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #("
 #"struct:pulled-point 0 0 30 0 0 0) #(struct:pulled-point 0 0 30 10 0 "
 #"0) #(struct:pulled-point 0 0 0 10 0 0)) outline #(struct:pen \"black"
 #"\" 2 solid round round))))) #(struct:translate 0 0 #(struct:polygon "
 #"(#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0"
 #" 0) #(struct:pulled-point 0 0 30 10 0 0) #(struct:pulled-point 0 0 0"
 #" 10 0 0)) 255 \"magenta\")))) #(struct:translate 0 0 #(struct:crop ("
 #"#(struct:point 0 0) #(struct:point 220 0) #(struct:point 220 200) #("
 #"struct:point 0 200)) #(struct:translate 0 0 #(struct:overlay #(struc"
 #"t:translate 145 5 #(struct:overlay #(struct:crop (#(struct:point 0 0"
 #") #(struct:point 30 0) #(struct:point 30 10) #(struct:point 0 10)) #"
 #"(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(str"
 #"uct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #("
 #"struct:pulled-point 0 0 30 10 0 0) #(struct:pulled-point 0 0 0 10 0 "
 #"0)) outline #(struct:pen \"black\" 2 solid round round))))) #(struct"
 #":translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) "
 #"#(struct:pulled-point 0 0 30 0 0 0) #(struct:pulled-point 0 0 30 10 "
 #"0 0) #(struct:pulled-point 0 0 0 10 0 0)) 255 \"magenta\")))) #(stru"
 #"ct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 2"
 #"20 0) #(struct:point 220 200) #(struct:point 0 200)) #(struct:transl"
 #"ate 0 0 #(struct:overlay #(struct:translate 110 35 #(struct:overlay "
 #"#(struct:crop (#(struct:point 0 0) #(struct:point 30 0) #(struct:poi"
 #"nt 30 10) #(struct:point 0 10)) #(struct:translate 0 0 #(struct:tran"
 #"slate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(str"
 #"uct:pulled-point 0 0 30 0 0 0) #(struct:pulled-point 0 0 30 10 0 0) "
 #"#(struct:pulled-point 0 0 0 10 0 0)) outline #(struct:pen \"black\" "
 #"2 solid round round))))) #(struct:translate 0 0 #(struct:polygon (#("
 #"struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0)"
 #" #(struct:pulled-point 0 0 30 10 0 0) #(struct:pulled-point 0 0 0 10"
 #" 0 0)) 255 \"magenta\")))) #(struct:translate 0 0 #(struct:crop (#(s"
 #"truct:point 0 0) #(struct:point 220 0) #(struct:point 220 200) #(str"
 #"uct:point 0 200)) #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 110 20 #(struct:overlay #(struct:crop (#(struct:point 0 0) "
 #"#(struct:point 30 0) #(struct:point 30 10) #(struct:point 0 10)) #(s"
 #"truct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struc"
 #"t:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(st"
 #"ruct:pulled-point 0 0 30 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)"
 #") outline #(struct:pen \"black\" 2 solid round round))))) #(struct:t"
 #"ranslate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #("
 #"struct:pulled-point 0 0 30 0 0 0) #(struct:pulled-point 0 0 30 10 0 "
 #"0) #(struct:pulled-point 0 0 0 10 0 0)) 255 \"magenta\")))) #(struct"
 #":translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 220"
 #" 0) #(struct:point 220 200) #(struct:point 0 200)) #(struct:translat"
 #"e 0 0 #(struct:overlay #(struct:translate 110 5 #(struct:overlay #(s"
 #"truct:crop (#(struct:point 0 0) #(struct:point 30 0) #(struct:point "
 #"30 10) #(struct:point 0 10)) #(struct:translate 0 0 #(struct:transla"
 #"te 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct"
 #":pulled-point 0 0 30 0 0 0) #(struct:pulled-point 0 0 30 10 0 0) #(s"
 #"truct:pulled-point 0 0 0 10 0 0)) outline #(struct:pen \"black\" 2 s"
 #"olid round round))))) #(struct:translate 0 0 #(struct:polygon (#(str"
 #"uct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #("
 #"struct:pulled-point 0 0 30 10 0 0) #(struct:pulled-point 0 0 0 10 0 "
 #"0)) 255 \"magenta\")))) #(struct:translate 0 0 #(struct:crop (#(stru"
 #"ct:point 0 0) #(struct:point 220 0) #(struct:point 220 200) #(struct"
 #":point 0 200)) #(struct:translate 0 0 #(struct:overlay #(struct:tran"
 #"slate 75 35 #(struct:overlay #(struct:crop (#(struct:point 0 0) #(st"
 #"ruct:point 30 0) #(struct:point 30 10) #(struct:point 0 10)) #(struc"
 #"t:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pu"
 #"lled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(struct"
 #":pulled-point 0 0 30 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) ou"
 #"tline #(struct:pen \"black\" 2 solid round round))))) #(struct:trans"
 #"late 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(stru"
 #"ct:pulled-point 0 0 30 0 0 0) #(struct:pulled-point 0 0 30 10 0 0) #"
 #"(struct:pulled-point 0 0 0 10 0 0)) 255 \"magenta\")))) #(struct:tra"
 #"nslate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 220 0) "
 #"#(struct:point 220 200) #(struct:point 0 200)) #(struct:translate 0 "
 #"0 #(struct:overlay #(struct:translate 75 20 #(struct:overlay #(struc"
 #"t:crop (#(struct:point 0 0) #(struct:point 30 0) #(struct:point 30 1"
 #"0) #(struct:point 0 10)) #(struct:translate 0 0 #(struct:translate 0"
 #" 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pul"
 #"led-point 0 0 30 0 0 0) #(struct:pulled-point 0 0 30 10 0 0) #(struc"
 #"t:pulled-point 0 0 0 10 0 0)) outline #(struct:pen \"black\" 2 solid"
 #" round round))))) #(struct:translate 0 0 #(struct:polygon (#(struct:"
 #"pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(stru"
 #"ct:pulled-point 0 0 30 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) "
 #"255 \"magenta\")))) #(struct:translate 0 0 #(struct:crop (#(struct:p"
 #"oint 0 0) #(struct:point 220 0) #(struct:point 220 200) #(struct:poi"
 #"nt 0 200)) #(struct:translate 0 0 #(struct:overlay #(struct:translat"
 #"e 75 5 #(struct:overlay #(struct:crop (#(struct:point 0 0) #(struct:"
 #"point 30 0) #(struct:point 30 10) #(struct:point 0 10)) #(struct:tra"
 #"nslate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-"
 #"point 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(struct:pull"
 #"ed-point 0 0 30 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) outline"
 #" #(struct:pen \"black\" 2 solid round round))))) #(struct:translate "
 #"0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pu"
 #"lled-point 0 0 30 0 0 0) #(struct:pulled-point 0 0 30 10 0 0) #(stru"
 #"ct:pulled-point 0 0 0 10 0 0)) 255 \"magenta\")))) #(struct:translat"
 #"e 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 220 0) #(str"
 #"uct:point 220 200) #(struct:point 0 200)) #(struct:translate 0 0 #(s"
 #"truct:overlay #(struct:translate 40 35 #(struct:overlay #(struct:cro"
 #"p (#(struct:point 0 0) #(struct:point 30 0) #(struct:point 30 10) #("
 #"struct:point 0 10)) #(struct:translate 0 0 #(struct:translate 0 0 #("
 #"struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-p"
 #"oint 0 0 30 0 0 0) #(struct:pulled-point 0 0 30 10 0 0) #(struct:pul"
 #"led-point 0 0 0 10 0 0)) outline #(struct:pen \"black\" 2 solid roun"
 #"d round))))) #(struct:translate 0 0 #(struct:polygon (#(struct:pulle"
 #"d-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(struct:pu"
 #"lled-point 0 0 30 10 0 0) #(struct"
 #":pulled-point 0 0 0 10 0 0)) 255 \"magenta\")))) #(struct:translate "
 #"0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 220 0) #(struc"
 #"t:point 220 200) #(struct:point 0 200)) #(struct:translate 0 0 #(str"
 #"uct:overlay #(struct:translate 40 20 #(struct:overlay #(struct:crop "
 #"(#(struct:point 0 0) #(struct:point 30 0) #(struct:point 30 10) #(st"
 #"ruct:point 0 10)) #(struct:translate 0 0 #(struct:translate 0 0 #(st"
 #"ruct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-poi"
 #"nt 0 0 30 0 0 0) #(struct:pulled-point 0 0 30 10 0 0) #(struct:pulle"
 #"d-point 0 0 0 10 0 0)) outline #(struct:pen \"black\" 2 solid round "
 #"round))))) #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-"
 #"point 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(struct:pull"
 #"ed-point 0 0 30 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) 255 \"m"
 #"agenta\")))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 "
 #"0) #(struct:point 220 0) #(struct:point 220 200) #(struct:point 0 20"
 #"0)) #(struct:translate 0 0 #(struct:overlay #(struct:translate 40 5 "
 #"#(struct:overlay #(struct:crop (#(struct:point 0 0) #(struct:point 3"
 #"0 0) #(struct:point 30 10) #(struct:point 0 10)) #(struct:translate "
 #"0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0"
 #" 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(struct:pulled-poin"
 #"t 0 0 30 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) outline #(stru"
 #"ct:pen \"black\" 2 solid round round))))) #(struct:translate 0 0 #(s"
 #"truct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-po"
 #"int 0 0 30 0 0 0) #(struct:pulled-point 0 0 30 10 0 0) #(struct:pull"
 #"ed-point 0 0 0 10 0 0)) 255 \"magenta\")))) #(struct:translate 0 0 #"
 #"(struct:crop (#(struct:point 0 0) #(struct:point 220 0) #(struct:poi"
 #"nt 220 200) #(struct:point 0 200)) #(struct:translate 0 0 #(struct:o"
 #"verlay #(struct:translate 5 35 #(struct:overlay #(struct:crop (#(str"
 #"uct:point 0 0) #(struct:point 30 0) #(struct:point 30 10) #(struct:p"
 #"oint 0 10)) #(struct:translate 0 0 #(struct:translate 0 0 #(struct:p"
 #"olygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0"
 #" 30 0 0 0) #(struct:pulled-point 0 0 30 10 0 0) #(struct:pulled-poin"
 #"t 0 0 0 10 0 0)) outline #(struct:pen \"black\" 2 solid round round)"
 #")))) #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point "
 #"0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(struct:pulled-poi"
 #"nt 0 0 30 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) 255 \"magenta"
 #"\")))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(s"
 #"truct:point 220 0) #(struct:point 220 200) #(struct:point 0 200)) #("
 #"struct:translate 0 0 #(struct:overlay #(struct:translate 5 20 #(stru"
 #"ct:overlay #(struct:crop (#(struct:point 0 0) #(struct:point 30 0) #"
 #"(struct:point 30 10) #(struct:point 0 10)) #(struct:translate 0 0 #("
 #"struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0"
 #" 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(struct:pulled-point 0 0 "
 #"30 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) outline #(struct:pen"
 #" \"black\" 2 solid round round))))) #(struct:translate 0 0 #(struct:"
 #"polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 "
 #"0 30 0 0 0) #(struct:pulled-point 0 0 30 10 0 0) #(struct:pulled-poi"
 #"nt 0 0 0 10 0 0)) 255 \"magenta\")))) #(struct:translate 0 0 #(struc"
 #"t:crop (#(struct:point 0 0) #(struct:point 220 0) #(struct:point 220"
 #" 200) #(struct:point 0 200)) #(struct:translate 0 0 #(struct:overlay"
 #" #(struct:translate 5 5 #(struct:overlay #(struct:crop (#(struct:poi"
 #"nt 0 0) #(struct:point 30 0) #(struct:point 30 10) #(struct:point 0 "
 #"10)) #(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon "
 #"(#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0"
 #" 0) #(struct:pulled-point 0 0 30 10 0 0) #(struct:pulled-point 0 0 0"
 #" 10 0 0)) outline #(struct:pen \"black\" 2 solid round round))))) #("
 #"struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0"
 #" 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(struct:pulled-point 0 0 "
 #"30 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) 255 \"magenta\")))) "
 #"#(struct:translate 0 0 #(struct:overlay #(struct:crop (#(struct:poin"
 #"t 0 0) #(struct:point 220 0) #(struct:point 220 200) #(struct:point "
 #"0 200)) #(struct:translate 0 0 #(struct:translate 0 0 #(struct:polyg"
 #"on (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 220"
 #" 0 0 0) #(struct:pulled-point 0 0 220 200 0 0) #(struct:pulled-point"
 #" 0 0 0 200 0 0)) outline #(struct:pen \"black\" 2 solid round round)"
 #")))) #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point "
 #"0 0 0 0 0 0) #(struct:pulled-point 0 0 220 0 0 0) #(struct:pulled-po"
 #"int 0 0 220 200 0 0) #(struct:pull"
 #"ed-point 0 0 0 200 0 0)) outline \"transparent\"))))))))))))))))))))"
 #"))))))))))))))))))))))))))))))))))))))))))))))) #(struct:bb 220 200 "
 #"200) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"display-paddle"
0 0 24 3 1 #" "
0 0 14 3 8 #"WORLD3x5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 6           4 21 12726
(
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 220 0) #(struct:p"
 #"oint 220 200) #(struct:point 0 200)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 80 190 #(struct:translate 0 0 #(struct:p"
 #"olygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0"
 #" 40 0 0 0) #(struct:pulled-point 0 0 40 10 0 0) #(struct:pulled-poin"
 #"t 0 0 0 10 0 0)) 255 \"red\"))) #(struct:translate 0 0 #(struct:crop"
 #" (#(struct:point 0 0) #(struct:point 220 0) #(struct:point 220 200) "
 #"#(struct:point 0 200)) #(struct:translate 0 0 #(struct:overlay #(str"
 #"uct:translate 145 35 #(struct:overlay #(struct:crop (#(struct:point "
 #"0 0) #(struct:point 30 0) #(struct:point 30 10) #(struct:point 0 10)"
 #") #(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#("
 #"struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0)"
 #" #(struct:pulled-point 0 0 30 10 0 0) #(struct:pulled-point 0 0 0 10"
 #" 0 0)) outline #(struct:pen \"black\" 2 solid round round))))) #(str"
 #"uct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 "
 #"0) #(struct:pulled-point 0 0 30 0 0 0) #(struct:pulled-point 0 0 30 "
 #"10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) 255 \"magenta\")))) #(s"
 #"truct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:poin"
 #"t 220 0) #(struct:point 220 200) #(struct:point 0 200)) #(struct:tra"
 #"nslate 0 0 #(struct:overlay #(struct:translate 145 20 #(struct:overl"
 #"ay #(struct:crop (#(struct:point 0 0) #(struct:point 30 0) #(struct:"
 #"point 30 10) #(struct:point 0 10)) #(struct:translate 0 0 #(struct:t"
 #"ranslate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #("
 #"struct:pulled-point 0 0 30 0 0 0) #(struct:pulled-point 0 0 30 10 0 "
 #"0) #(struct:pulled-point 0 0 0 10 0 0)) outline #(struct:pen \"black"
 #"\" 2 solid round round))))) #(struct:translate 0 0 #(struct:polygon "
 #"(#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0"
 #" 0) #(struct:pulled-point 0 0 30 10 0 0) #(struct:pulled-point 0 0 0"
 #" 10 0 0)) 255 \"magenta\")))) #(struct:translate 0 0 #(struct:crop ("
 #"#(struct:point 0 0) #(struct:point 220 0) #(struct:point 220 200) #("
 #"struct:point 0 200)) #(struct:translate 0 0 #(struct:overlay #(struc"
 #"t:translate 145 5 #(struct:overlay #(struct:crop (#(struct:point 0 0"
 #") #(struct:point 30 0) #(struct:point 30 10) #(struct:point 0 10)) #"
 #"(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(str"
 #"uct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #("
 #"struct:pulled-point 0 0 30 10 0 0) #(struct:pulled-point 0 0 0 10 0 "
 #"0)) outline #(struct:pen \"black\" 2 solid round round))))) #(struct"
 #":translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) "
 #"#(struct:pulled-point 0 0 30 0 0 0) #(struct:pulled-point 0 0 30 10 "
 #"0 0) #(struct:pulled-point 0 0 0 10 0 0)) 255 \"magenta\")))) #(stru"
 #"ct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 2"
 #"20 0) #(struct:point 220 200) #(struct:point 0 200)) #(struct:transl"
 #"ate 0 0 #(struct:overlay #(struct:translate 110 35 #(struct:overlay "
 #"#(struct:crop (#(struct:point 0 0) #(struct:point 30 0) #(struct:poi"
 #"nt 30 10) #(struct:point 0 10)) #(struct:translate 0 0 #(struct:tran"
 #"slate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(str"
 #"uct:pulled-point 0 0 30 0 0 0) #(struct:pulled-point 0 0 30 10 0 0) "
 #"#(struct:pulled-point 0 0 0 10 0 0)) outline #(struct:pen \"black\" "
 #"2 solid round round))))) #(struct:translate 0 0 #(struct:polygon (#("
 #"struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0)"
 #" #(struct:pulled-point 0 0 30 10 0 0) #(struct:pulled-point 0 0 0 10"
 #" 0 0)) 255 \"magenta\")))) #(struct:translate 0 0 #(struct:crop (#(s"
 #"truct:point 0 0) #(struct:point 220 0) #(struct:point 220 200) #(str"
 #"uct:point 0 200)) #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 110 20 #(struct:overlay #(struct:crop (#(struct:point 0 0) "
 #"#(struct:point 30 0) #(struct:point 30 10) #(struct:point 0 10)) #(s"
 #"truct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struc"
 #"t:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(st"
 #"ruct:pulled-point 0 0 30 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)"
 #") outline #(struct:pen \"black\" 2 solid round round))))) #(struct:t"
 #"ranslate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #("
 #"struct:pulled-point 0 0 30 0 0 0) #(struct:pulled-point 0 0 30 10 0 "
 #"0) #(struct:pulled-point 0 0 0 10 0 0)) 255 \"magenta\")))) #(struct"
 #":translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 220"
 #" 0) #(struct:point 220 200) #(struct:point 0 200)) #(struct:translat"
 #"e 0 0 #(struct:overlay #(struct:translate 110 5 #(struct:overlay #(s"
 #"truct:crop (#(struct:point 0 0) #(struct:point 30 0) #(struct:point "
 #"30 10) #(struct:point 0 10)) #(struct:translate 0 0 #(struct:transla"
 #"te 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct"
 #":pulled-point 0 0 30 0 0 0) #(struct:pulled-point 0 0 30 10 0 0) #(s"
 #"truct:pulled-point 0 0 0 10 0 0)) outline #(struct:pen \"black\" 2 s"
 #"olid round round))))) #(struct:translate 0 0 #(struct:polygon (#(str"
 #"uct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #("
 #"struct:pulled-point 0 0 30 10 0 0) #(struct:pulled-point 0 0 0 10 0 "
 #"0)) 255 \"magenta\")))) #(struct:translate 0 0 #(struct:crop (#(stru"
 #"ct:point 0 0) #(struct:point 220 0) #(struct:point 220 200) #(struct"
 #":point 0 200)) #(struct:translate 0 0 #(struct:overlay #(struct:tran"
 #"slate 75 35 #(struct:overlay #(struct:crop (#(struct:point 0 0) #(st"
 #"ruct:point 30 0) #(struct:point 30 10) #(struct:point 0 10)) #(struc"
 #"t:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pu"
 #"lled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(struct"
 #":pulled-point 0 0 30 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) ou"
 #"tline #(struct:pen \"black\" 2 solid round round))))) #(struct:trans"
 #"late 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(stru"
 #"ct:pulled-point 0 0 30 0 0 0) #(struct:pulled-point 0 0 30 10 0 0) #"
 #"(struct:pulled-point 0 0 0 10 0 0)) 255 \"magenta\")))) #(struct:tra"
 #"nslate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 220 0) "
 #"#(struct:point 220 200) #(struct:point 0 200)) #(struct:translate 0 "
 #"0 #(struct:overlay #(struct:translate 75 20 #(struct:overlay #(struc"
 #"t:crop (#(struct:point 0 0) #(struct:point 30 0) #(struct:point 30 1"
 #"0) #(struct:point 0 10)) #(struct:translate 0 0 #(struct:translate 0"
 #" 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pul"
 #"led-point 0 0 30 0 0 0) #(struct:pulled-point 0 0 30 10 0 0) #(struc"
 #"t:pulled-point 0 0 0 10 0 0)) outline #(struct:pen \"black\" 2 solid"
 #" round round))))) #(struct:translate 0 0 #(struct:polygon (#(struct:"
 #"pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(stru"
 #"ct:pulled-point 0 0 30 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) "
 #"255 \"magenta\")))) #(struct:translate 0 0 #(struct:crop (#(struct:p"
 #"oint 0 0) #(struct:point 220 0) #(struct:point 220 200) #(struct:poi"
 #"nt 0 200)) #(struct:translate 0 0 #(struct:overlay #(struct:translat"
 #"e 75 5 #(struct:overlay #(struct:crop (#(struct:point 0 0) #(struct:"
 #"point 30 0) #(struct:point 30 10) #(struct:point 0 10)) #(struct:tra"
 #"nslate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-"
 #"point 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(struct:pull"
 #"ed-point 0 0 30 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) outline"
 #" #(struct:pen \"black\" 2 solid round round))))) #(struct:translate "
 #"0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pu"
 #"lled-point 0 0 30 0 0 0) #(struct:pulled-point 0 0 30 10 0 0) #(stru"
 #"ct:pulled-point 0 0 0 10 0 0)) 255 \"magenta\")))) #(struct:translat"
 #"e 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 220 0) #(str"
 #"uct:point 220 200) #(struct:point 0 200)) #(struct:translate 0 0 #(s"
 #"truct:overlay #(struct:translate 40 35 #(struct:overlay #(struct:cro"
 #"p (#(struct:point 0 0) #(struct:point 30 0) #(struct:point 30 10) #("
 #"struct:point 0 10)) #(struct:translate 0 0 #(struct:translate 0 0 #("
 #"struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-p"
 #"oint 0 0 30 0 0 0) #(struct:pulled-point 0 0 30 10 0 0) #(struct:pul"
 #"led-point 0 0 0 10 0 0)) outline #(struct:pen \"black\" 2 solid roun"
 #"d round))))) #(struct:translate 0 0 #(struct:polygon (#(struct:pulle"
 #"d-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(struct:pu"
 #"lled-point 0 0 30 10 0 0) #(struct"
 #":pulled-point 0 0 0 10 0 0)) 255 \"magenta\")))) #(struct:translate "
 #"0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 220 0) #(struc"
 #"t:point 220 200) #(struct:point 0 200)) #(struct:translate 0 0 #(str"
 #"uct:overlay #(struct:translate 40 20 #(struct:overlay #(struct:crop "
 #"(#(struct:point 0 0) #(struct:point 30 0) #(struct:point 30 10) #(st"
 #"ruct:point 0 10)) #(struct:translate 0 0 #(struct:translate 0 0 #(st"
 #"ruct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-poi"
 #"nt 0 0 30 0 0 0) #(struct:pulled-point 0 0 30 10 0 0) #(struct:pulle"
 #"d-point 0 0 0 10 0 0)) outline #(struct:pen \"black\" 2 solid round "
 #"round))))) #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-"
 #"point 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(struct:pull"
 #"ed-point 0 0 30 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) 255 \"m"
 #"agenta\")))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 "
 #"0) #(struct:point 220 0) #(struct:point 220 200) #(struct:point 0 20"
 #"0)) #(struct:translate 0 0 #(struct:overlay #(struct:translate 40 5 "
 #"#(struct:overlay #(struct:crop (#(struct:point 0 0) #(struct:point 3"
 #"0 0) #(struct:point 30 10) #(struct:point 0 10)) #(struct:translate "
 #"0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0"
 #" 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(struct:pulled-poin"
 #"t 0 0 30 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) outline #(stru"
 #"ct:pen \"black\" 2 solid round round))))) #(struct:translate 0 0 #(s"
 #"truct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-po"
 #"int 0 0 30 0 0 0) #(struct:pulled-point 0 0 30 10 0 0) #(struct:pull"
 #"ed-point 0 0 0 10 0 0)) 255 \"magenta\")))) #(struct:translate 0 0 #"
 #"(struct:crop (#(struct:point 0 0) #(struct:point 220 0) #(struct:poi"
 #"nt 220 200) #(struct:point 0 200)) #(struct:translate 0 0 #(struct:o"
 #"verlay #(struct:translate 5 35 #(struct:overlay #(struct:crop (#(str"
 #"uct:point 0 0) #(struct:point 30 0) #(struct:point 30 10) #(struct:p"
 #"oint 0 10)) #(struct:translate 0 0 #(struct:translate 0 0 #(struct:p"
 #"olygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0"
 #" 30 0 0 0) #(struct:pulled-point 0 0 30 10 0 0) #(struct:pulled-poin"
 #"t 0 0 0 10 0 0)) outline #(struct:pen \"black\" 2 solid round round)"
 #")))) #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point "
 #"0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(struct:pulled-poi"
 #"nt 0 0 30 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) 255 \"magenta"
 #"\")))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(s"
 #"truct:point 220 0) #(struct:point 220 200) #(struct:point 0 200)) #("
 #"struct:translate 0 0 #(struct:overlay #(struct:translate 5 20 #(stru"
 #"ct:overlay #(struct:crop (#(struct:point 0 0) #(struct:point 30 0) #"
 #"(struct:point 30 10) #(struct:point 0 10)) #(struct:translate 0 0 #("
 #"struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0"
 #" 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(struct:pulled-point 0 0 "
 #"30 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) outline #(struct:pen"
 #" \"black\" 2 solid round round))))) #(struct:translate 0 0 #(struct:"
 #"polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 "
 #"0 30 0 0 0) #(struct:pulled-point 0 0 30 10 0 0) #(struct:pulled-poi"
 #"nt 0 0 0 10 0 0)) 255 \"magenta\")))) #(struct:translate 0 0 #(struc"
 #"t:crop (#(struct:point 0 0) #(struct:point 220 0) #(struct:point 220"
 #" 200) #(struct:point 0 200)) #(struct:translate 0 0 #(struct:overlay"
 #" #(struct:translate 5 5 #(struct:overlay #(struct:crop (#(struct:poi"
 #"nt 0 0) #(struct:point 30 0) #(struct:point 30 10) #(struct:point 0 "
 #"10)) #(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon "
 #"(#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0"
 #" 0) #(struct:pulled-point 0 0 30 10 0 0) #(struct:pulled-point 0 0 0"
 #" 10 0 0)) outline #(struct:pen \"black\" 2 solid round round))))) #("
 #"struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0"
 #" 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(struct:pulled-point 0 0 "
 #"30 10 0 0) #(struct:pulled-point 0 0 0 10 0 0)) 255 \"magenta\")))) "
 #"#(struct:translate 0 0 #(struct:overlay #(struct:crop (#(struct:poin"
 #"t 0 0) #(struct:point 220 0) #(struct:point 220 200) #(struct:point "
 #"0 200)) #(struct:translate 0 0 #(struct:translate 0 0 #(struct:polyg"
 #"on (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 220"
 #" 0 0 0) #(struct:pulled-point 0 0 220 200 0 0) #(struct:pulled-point"
 #" 0 0 0 200 0 0)) outline #(struct:pen \"black\" 2 solid round round)"
 #")))) #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point "
 #"0 0 0 0 0 0) #(struct:pulled-point 0 0 220 0 0 0) #(struct:pulled-po"
 #"int 0 0 220 200 0 0) #(struct:pull"
 #"ed-point 0 0 0 200 0 0)) outline \"transparent\"))))))))))))))))))))"
 #"))))))))))))))))))))))))))))))))))))))))))))))) #(struct:bb 220 200 "
 #"200) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";;display-score: World -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 46 #";;displays the score in the bottom left corner"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"display-score"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"place-image"
0 0 24 3 2 #" ("
0 0 14 3 4 #"text"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-append"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"Score: \""
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 14 #"number->string"
0 0 24 3 2 #" ("
0 0 14 3 11 #"world-score"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                     "
0 0 21 3 2 #"11"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"black\""
0 0 24 3 2 #") "
0 0 21 3 2 #"30"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 6 #"HEIGHT"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 3 #") ("
0 0 14 3 11 #"empty-frame"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"display-score"
0 0 24 3 1 #" "
0 0 14 3 8 #"WORLD3x5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 6           4 21 2035
(
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 220 0) #(struct:p"
 #"oint 220 200) #(struct:point 0 200)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 9.5 187.0 #(struct:overlay #(struct:tran"
 #"slate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #"
 #"(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(stru"
 #"ct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:translat"
 #"e 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 3.5"
 #" 7.0 #(struct:text \"S\" 0 1 \"black\" 11 #f swiss normal normal #f)"
 #")) #(struct:translate 7.0 0.0 #(struct:translate 3.0 7.0 #(struct:te"
 #"xt \"c\" 0 1 \"black\" 11 #f swiss normal normal #f))))) #(struct:tr"
 #"anslate 13.0 0.0 #(struct:translate 3.0 7.0 #(struct:text \"o\" 0 1 "
 #"\"black\" 11 #f swiss normal normal #f))))) #(struct:translate 19.0 "
 #"0.0 #(struct:translate 2.0 7.0 #(struct:text \"r\" 0 1 \"black\" 11 "
 #"#f swiss normal normal #f))))) #(struct:translate 23.0 0.0 #(struct:"
 #"translate 3.0 7.0 #(struct:text \"e\" 0 1 \"black\" 11 #f swiss norm"
 #"al normal #f))))) #(struct:translate 29.0 0.0 #(struct:translate 1.5"
 #" 7.0 #(struct:text \":\" 0 1 \"black\" 11 #f swiss normal normal #f)"
 #")))) #(struct:translate 32.0 0.0 #(struct:translate 1.5 7.0 #(struct"
 #":text \" \" 0 1 \"black\" 11 #f swiss normal normal #f))))) #(struct"
 #":translate 35.0 0.0 #(struct:translate 3.0 7.0 #(struct:text \"0\" 0"
 #" 1 \"black\" 11 #f swiss normal normal #f))))) #(struct:translate 0 "
 #"0 #(struct:overlay #(struct:crop (#(struct:point 0 0) #(struct:point"
 #" 220 0) #(struct:point 220 200) #(struct:point 0 200)) #(struct:tran"
 #"slate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-p"
 #"oint 0 0 0 0 0 0) #(struct:pulled-point 0 0 220 0 0 0) #(struct:pull"
 #"ed-point 0 0 220 200 0 0) #(struct:pulled-point 0 0 0 200 0 0)) outl"
 #"ine #(struct:pen \"black\" 2 solid round round))))) #(struct:transla"
 #"te 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct"
 #":pulled-point 0 0 220 0 0 0) #(struct:pulled-point 0 0 220 200 0 0) "
 #"#(struct:pulled-point 0 0 0 200 0 0)) outline \"transparent\")))))))"
 #" #(struct:bb 220 200 200.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"display-score"
0 0 24 3 1 #" "
0 0 14 3 11 #"WORLD3x5-S2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 6           4 21 2194
(
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 220 0) #(struct:p"
 #"oint 220 200) #(struct:point 0 200)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 6.5 187.0 #(struct:overlay #(struct:tran"
 #"slate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #"
 #"(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(stru"
 #"ct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:translat"
 #"e 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(str"
 #"uct:translate 0 0 #(struct:translate 3.5 7.0 #(struct:text \"S\" 0 1"
 #" \"black\" 11 #f swiss normal normal #f))) #(struct:translate 7.0 0."
 #"0 #(struct:translate 3.0 7.0 #(struct:text \"c\" 0 1 \"black\" 11 #f"
 #" swiss normal normal #f))))) #(struct:translate 13.0 0.0 #(struct:tr"
 #"anslate 3.0 7.0 #(struct:text \"o\" 0 1 \"black\" 11 #f swiss normal"
 #" normal #f))))) #(struct:translate 19.0 0.0 #(struct:translate 2.0 7"
 #".0 #(struct:text \"r\" 0 1 \"black\" 11 #f swiss normal normal #f)))"
 #")) #(struct:translate 23.0 0.0 #(struct:translate 3.0 7.0 #(struct:t"
 #"ext \"e\" 0 1 \"black\" 11 #f swiss normal normal #f))))) #(struct:t"
 #"ranslate 29.0 0.0 #(struct:translate 1.5 7.0 #(struct:text \":\" 0 1"
 #" \"black\" 11 #f swiss normal normal #f))))) #(struct:translate 32.0"
 #" 0.0 #(struct:translate 1.5 7.0 #(struct:text \" \" 0 1 \"black\" 11"
 #" #f swiss normal normal #f))))) #(struct:translate 35.0 0.0 #(struct"
 #":translate 3.0 7.0 #(struct:text \"7\" 0 1 \"black\" 11 #f swiss nor"
 #"mal normal #f))))) #(struct:translate 41.0 0.0 #(struct:translate 3."
 #"0 7.0 #(struct:text \"5\" 0 1 \"black\" 11 #f swiss normal normal #f"
 #"))))) #(struct:translate 0 0 #(struct:overlay #(struct:crop (#(struc"
 #"t:point 0 0) #(struct:point 220 0) #(struct:point 220 200) #(struct:"
 #"point 0 200)) #(struct:translate 0 0 #(struct:translate 0 0 #(struct"
 #":polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0"
 #" 0 220 0 0 0) #(struct:pulled-point 0 0 220 200 0 0) #(struct:pulled"
 #"-point 0 0 0 200 0 0)) outline #(struct:pen \"black\" 2 solid round "
 #"round))))) #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-"
 #"point 0 0 0 0 0 0) #(struct:pulled-point 0 0 220 0 0 0) #(struct:pul"
 #"led-point 0 0 220 200 0 0) #(struct:pulled-point 0 0 0 200 0 0)) out"
 #"line \"transparent\"))))))) #(struct:bb 220 200 200.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";;display-lives: World -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 67
#";;displays the amount of lives remaining in the bottom right corner"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"display-lives"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"place-image"
0 0 24 3 2 #" ("
0 0 14 3 13 #"lives-to-text"
0 0 24 3 2 #" ("
0 0 14 3 11 #"world-lives"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 5 #"WIDTH"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 6 #"HEIGHT"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 11 #"empty-frame"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"display-lives"
0 0 24 3 1 #" "
0 0 14 3 11 #"WORLD3x5-S2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 6           4 21 2036
(
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 220 0) #(struct:p"
 #"oint 220 200) #(struct:point 0 200)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 171.0 187.0 #(struct:overlay #(struct:tr"
 #"anslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay"
 #" #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(st"
 #"ruct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:transl"
 #"ate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 3"
 #".0 7.0 #(struct:text \"L\" 0 1 \"black\" 11 #f swiss normal normal #"
 #"f))) #(struct:translate 6.0 0.0 #(struct:translate 1.0 7.0 #(struct:"
 #"text \"i\" 0 1 \"black\" 11 #f swiss normal normal #f))))) #(struct:"
 #"translate 8.0 0.0 #(struct:translate 3.0 7.0 #(struct:text \"v\" 0 1"
 #" \"black\" 11 #f swiss normal normal #f))))) #(struct:translate 14.0"
 #" 0.0 #(struct:translate 3.0 7.0 #(struct:text \"e\" 0 1 \"black\" 11"
 #" #f swiss normal normal #f))))) #(struct:translate 20.0 0.0 #(struct"
 #":translate 3.0 7.0 #(struct:text \"s\" 0 1 \"black\" 11 #f swiss nor"
 #"mal normal #f))))) #(struct:translate 26.0 0.0 #(struct:translate 1."
 #"5 7.0 #(struct:text \":\" 0 1 \"black\" 11 #f swiss normal normal #f"
 #"))))) #(struct:translate 29.0 0.0 #(struct:translate 1.5 7.0 #(struc"
 #"t:text \" \" 0 1 \"black\" 11 #f swiss normal normal #f))))) #(struc"
 #"t:translate 32.0 0.0 #(struct:translate 3.0 7.0 #(struct:text \"2\" "
 #"0 1 \"black\" 11 #f swiss normal normal #f))))) #(struct:translate 0"
 #" 0 #(struct:overlay #(struct:crop (#(struct:point 0 0) #(struct:poin"
 #"t 220 0) #(struct:point 220 200) #(struct:point 0 200)) #(struct:tra"
 #"nslate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-"
 #"point 0 0 0 0 0 0) #(struct:pulled-point 0 0 220 0 0 0) #(struct:pul"
 #"led-point 0 0 220 200 0 0) #(struct:pulled-point 0 0 0 200 0 0)) out"
 #"line #(struct:pen \"black\" 2 solid round round))))) #(struct:transl"
 #"ate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struc"
 #"t:pulled-point 0 0 220 0 0 0) #(struct:pulled-point 0 0 220 200 0 0)"
 #" #(struct:pulled-point 0 0 0 200 0 0)) outline \"transparent\"))))))"
 #") #(struct:bb 220 200 200.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"display-lives"
0 0 24 3 1 #" "
0 0 14 3 8 #"WORLD3x5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 6           4 21 2036
(
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 220 0) #(struct:p"
 #"oint 220 200) #(struct:point 0 200)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 171.0 187.0 #(struct:overlay #(struct:tr"
 #"anslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay"
 #" #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(st"
 #"ruct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:transl"
 #"ate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 3"
 #".0 7.0 #(struct:text \"L\" 0 1 \"black\" 11 #f swiss normal normal #"
 #"f))) #(struct:translate 6.0 0.0 #(struct:translate 1.0 7.0 #(struct:"
 #"text \"i\" 0 1 \"black\" 11 #f swiss normal normal #f))))) #(struct:"
 #"translate 8.0 0.0 #(struct:translate 3.0 7.0 #(struct:text \"v\" 0 1"
 #" \"black\" 11 #f swiss normal normal #f))))) #(struct:translate 14.0"
 #" 0.0 #(struct:translate 3.0 7.0 #(struct:text \"e\" 0 1 \"black\" 11"
 #" #f swiss normal normal #f))))) #(struct:translate 20.0 0.0 #(struct"
 #":translate 3.0 7.0 #(struct:text \"s\" 0 1 \"black\" 11 #f swiss nor"
 #"mal normal #f))))) #(struct:translate 26.0 0.0 #(struct:translate 1."
 #"5 7.0 #(struct:text \":\" 0 1 \"black\" 11 #f swiss normal normal #f"
 #"))))) #(struct:translate 29.0 0.0 #(struct:translate 1.5 7.0 #(struc"
 #"t:text \" \" 0 1 \"black\" 11 #f swiss normal normal #f))))) #(struc"
 #"t:translate 32.0 0.0 #(struct:translate 3.0 7.0 #(struct:text \"3\" "
 #"0 1 \"black\" 11 #f swiss normal normal #f))))) #(struct:translate 0"
 #" 0 #(struct:overlay #(struct:crop (#(struct:point 0 0) #(struct:poin"
 #"t 220 0) #(struct:point 220 200) #(struct:point 0 200)) #(struct:tra"
 #"nslate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-"
 #"point 0 0 0 0 0 0) #(struct:pulled-point 0 0 220 0 0 0) #(struct:pul"
 #"led-point 0 0 220 200 0 0) #(struct:pulled-point 0 0 0 200 0 0)) out"
 #"line #(struct:pen \"black\" 2 solid round round))))) #(struct:transl"
 #"ate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struc"
 #"t:pulled-point 0 0 220 0 0 0) #(struct:pulled-point 0 0 220 200 0 0)"
 #" #(struct:pulled-point 0 0 0 200 0 0)) outline \"transparent\"))))))"
 #") #(struct:bb 220 200 200.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";;lives-to-text: Number -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 72
(
 #";;turns the Number of lives into a text image that is properly forma"
 #"tted"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"lives-to-text"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 4 #"text"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-append"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"Lives: \""
0 0 24 3 2 #" ("
0 0 14 3 14 #"number->string"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 3 #")) "
0 0 21 3 2 #"11"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"black\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"lives-to-text"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 6           4 21 1231
(
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overla"
 #"y #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(s"
 #"truct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:trans"
 #"late 0 0 #(struct:translate 3.0 "
 #"7.0 #(struct:text \"L\" 0 1 \"black\" 11 #f swiss normal normal #f))"
 #") #(struct:translate 6.0 0.0 #(struct:translate 1.0 7.0 #(struct:tex"
 #"t \"i\" 0 1 \"black\" 11 #f swiss normal normal #f))))) #(struct:tra"
 #"nslate 8.0 0.0 #(struct:translate 3.0 7.0 #(struct:text \"v\" 0 1 \""
 #"black\" 11 #f swiss normal normal #f))))) #(struct:translate 14.0 0."
 #"0 #(struct:translate 3.0 7.0 #(struct:text \"e\" 0 1 \"black\" 11 #f"
 #" swiss normal normal #f))))) #(struct:translate 20.0 0.0 #(struct:tr"
 #"anslate 3.0 7.0 #(struct:text \"s\" 0 1 \"black\" 11 #f swiss normal"
 #" normal #f))))) #(struct:translate 26.0 0.0 #(struct:translate 1.5 7"
 #".0 #(struct:text \":\" 0 1 \"black\" 11 #f swiss normal normal #f)))"
 #")) #(struct:translate 29.0 0.0 #(struct:translate 1.5 7.0 #(struct:t"
 #"ext \" \" 0 1 \"black\" 11 #f swiss normal normal #f))))) #(struct:t"
 #"ranslate 32.0 0.0 #(struct:translate 3.0 7.0 #(struct:text \"1\" 0 1"
 #" \"black\" 11 #f swiss normal normal #f)))) #(struct:bb 38.0 14.0 11"
 #".0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"lives-to-text"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 6           4 21 1231
(
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overla"
 #"y #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(s"
 #"truct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:trans"
 #"late 0 0 #(struct:translate 3.0 "
 #"7.0 #(struct:text \"L\" 0 1 \"black\" 11 #f swiss normal normal #f))"
 #") #(struct:translate 6.0 0.0 #(struct:translate 1.0 7.0 #(struct:tex"
 #"t \"i\" 0 1 \"black\" 11 #f swiss normal normal #f))))) #(struct:tra"
 #"nslate 8.0 0.0 #(struct:translate 3.0 7.0 #(struct:text \"v\" 0 1 \""
 #"black\" 11 #f swiss normal normal #f))))) #(struct:translate 14.0 0."
 #"0 #(struct:translate 3.0 7.0 #(struct:text \"e\" 0 1 \"black\" 11 #f"
 #" swiss normal normal #f))))) #(struct:translate 20.0 0.0 #(struct:tr"
 #"anslate 3.0 7.0 #(struct:text \"s\" 0 1 \"black\" 11 #f swiss normal"
 #" normal #f))))) #(struct:translate 26.0 0.0 #(struct:translate 1.5 7"
 #".0 #(struct:text \":\" 0 1 \"black\" 11 #f swiss normal normal #f)))"
 #")) #(struct:translate 29.0 0.0 #(struct:translate 1.5 7.0 #(struct:t"
 #"ext \" \" 0 1 \"black\" 11 #f swiss normal normal #f))))) #(struct:t"
 #"ranslate 32.0 0.0 #(struct:translate 3.0 7.0 #(struct:text \"0\" 0 1"
 #" \"black\" 11 #f swiss normal normal #f)))) #(struct:bb 38.0 14.0 11"
 #".0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"lives-to-text"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 6           4 21 1231
(
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overla"
 #"y #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(s"
 #"truct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:trans"
 #"late 0 0 #(struct:translate 3.0 "
 #"7.0 #(struct:text \"L\" 0 1 \"black\" 11 #f swiss normal normal #f))"
 #") #(struct:translate 6.0 0.0 #(struct:translate 1.0 7.0 #(struct:tex"
 #"t \"i\" 0 1 \"black\" 11 #f swiss normal normal #f))))) #(struct:tra"
 #"nslate 8.0 0.0 #(struct:translate 3.0 7.0 #(struct:text \"v\" 0 1 \""
 #"black\" 11 #f swiss normal normal #f))))) #(struct:translate 14.0 0."
 #"0 #(struct:translate 3.0 7.0 #(struct:text \"e\" 0 1 \"black\" 11 #f"
 #" swiss normal normal #f))))) #(struct:translate 20.0 0.0 #(struct:tr"
 #"anslate 3.0 7.0 #(struct:text \"s\" 0 1 \"black\" 11 #f swiss normal"
 #" normal #f))))) #(struct:translate 26.0 0.0 #(struct:translate 1.5 7"
 #".0 #(struct:text \":\" 0 1 \"black\" 11 #f swiss normal normal #f)))"
 #")) #(struct:translate 29.0 0.0 #(struct:translate 1.5 7.0 #(struct:t"
 #"ext \" \" 0 1 \"black\" 11 #f swiss normal normal #f))))) #(struct:t"
 #"ranslate 32.0 0.0 #(struct:translate 3.0 7.0 #(struct:text \"2\" 0 1"
 #" \"black\" 11 #f swiss normal normal #f)))) #(struct:bb 38.0 14.0 11"
 #".0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"lives-to-text"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #") "
0 6           4 21 1231
(
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overla"
 #"y #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(s"
 #"truct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:trans"
 #"late 0 0 #(struct:translate 3.0 "
 #"7.0 #(struct:text \"L\" 0 1 \"black\" 11 #f swiss normal normal #f))"
 #") #(struct:translate 6.0 0.0 #(struct:translate 1.0 7.0 #(struct:tex"
 #"t \"i\" 0 1 \"black\" 11 #f swiss normal normal #f))))) #(struct:tra"
 #"nslate 8.0 0.0 #(struct:translate 3.0 7.0 #(struct:text \"v\" 0 1 \""
 #"black\" 11 #f swiss normal normal #f))))) #(struct:translate 14.0 0."
 #"0 #(struct:translate 3.0 7.0 #(struct:text \"e\" 0 1 \"black\" 11 #f"
 #" swiss normal normal #f))))) #(struct:translate 20.0 0.0 #(struct:tr"
 #"anslate 3.0 7.0 #(struct:text \"s\" 0 1 \"black\" 11 #f swiss normal"
 #" normal #f))))) #(struct:translate 26.0 0.0 #(struct:translate 1.5 7"
 #".0 #(struct:text \":\" 0 1 \"black\" 11 #f swiss normal normal #f)))"
 #")) #(struct:translate 29.0 0.0 #(struct:translate 1.5 7.0 #(struct:t"
 #"ext \" \" 0 1 \"black\" 11 #f swiss normal normal #f))))) #(struct:t"
 #"ranslate 32.0 0.0 #(struct:translate 3.0 7.0 #(struct:text \"3\" 0 1"
 #" \"black\" 11 #f swiss normal normal #f)))) #(struct:bb 38.0 14.0 11"
 #".0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";;empty-frame: World -> World"
0 0 24 29 1 #"\n"
0 0 17 3 59
#";;creates an empty frame that is the size of the game board"
0 0 24 29 1 #"\n"
0 0 17 3 72
(
 #";;***PLEASE NOTE: this function doesn't need World, but in it's orig"
 #"inal"
) 0 0 24 29 1 #"\n"
0 0 17 3 71
(
 #";;   form, the function resized the window to account for the number"
 #" of"
) 0 0 24 29 1 #"\n"
0 0 17 3 83
(
 #";;   rows and columns. However this functionallity wasn't needed, an"
 #"d was taken out"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"empty-frame"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 5 #"frame"
0 0 24 3 2 #" ("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 14 3 5 #"WIDTH"
0 0 24 3 1 #" "
0 0 14 3 6 #"HEIGHT"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"outline\""
0 0 24 3 1 #" "
0 0 19 3 13 #"\"transparent\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"empty-frame"
0 0 24 3 1 #" "
0 0 14 3 8 #"WORLD3x5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 6           4 21 632
(
 #"(#(struct:overlay #(struct:crop (#(struct:point 0 0) #(struct:point "
 #"220 0) #(struct:point 220 200) #(struct:point 0 200)) #(struct:trans"
 #"late 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-po"
 #"int 0 0 0 0 0 0) #(struct:pulled-point 0 0 220 0 0 0) #(struct:pulle"
 #"d-point 0 0 220 200 0 0) #(struct:pulled-point 0 0 0 200 0 0)) outli"
 #"ne #(struct:pen \"black\" 2 solid round round))))) #(struct:translat"
 #"e 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:"
 #"pulled-point 0 0 220 0 0 0) #(struct:pulled-point 0 0 220 200 0 0) #"
 #"(struct:pulled-point 0 0 0 200 0 0)) outline \"transparent\"))) #(st"
 #"ruct:bb 220 200 200) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 39 #"#| ----- User Request Handling ----- |#"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";;repeat-request: World -> World"
0 0 24 29 1 #"\n"
0 0 17 3 61
#";;Restarts the game if appropriate at the current World State"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"repeat-request"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 15 #"won-game/world?"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 10 #"lost-game?"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 10 #"reset-game"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"repeat-request"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-ball"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 2 #"52"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 2 #"-4"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 42 #"                                          "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 5 #"#true"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 2 #"22"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-ball"
0 0 24 3 1 #" "
0 0 21 3 3 #"110"
0 0 24 3 1 #" "
0 0 21 3 3 #"184"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 2 #"-4"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                          "
0 0 21 3 3 #"110"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 6 #"#false"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"repeat-request"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-ball"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 2 #"53"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 42 #"                                          "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 5 #"#true"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-ball"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 2 #"53"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                          "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 5 #"#true"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 30 #";;launch-world: World -> World"
0 0 24 29 1 #"\n"
0 0 17 3 54 #";;launches the ball if it hasn't already been launched"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"launch-world"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 14 #"world-launched"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 14 3 1 #"w"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 11 #"launch-ball"
0 0 24 3 2 #" ("
0 0 14 3 10 #"world-ball"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 10 #"world-padx"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 12 #"world-bricks"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 10 #"world-padx"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 10 #"world-rows"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 10 #"world-cols"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #") "
0 0 21 3 5 #"#true"
0 0 24 3 2 #" ("
0 0 14 3 11 #"world-lives"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 11 #"world-score"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"launch-world"
0 0 24 3 1 #" "
0 0 14 3 8 #"WORLD3x5"
0 0 24 3 2 #")("
0 0 14 3 10 #"make-world"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                      ("
0 0 14 3 9 #"make-ball"
0 0 24 3 1 #" "
0 8          10 21 8 #"1449/13\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 24 3 1 #" "
0 8          10 21 36 #"412702153931796629/2251799813685248\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 24 29 1 #"\n"
0 0 24 3 49 #"                                                 "
0 8          10 21 6 #"19/13\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 24 3 1 #" "
0 8          10 21 35 #"-8384411227344747/2251799813685248\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                      ("
0 0 14 3 4 #"list"
0 0 24 3 3 #"  ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"160"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 46 #"                                             ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"160"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 46 #"                                             ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"160"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 46 #"                                             ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"125"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 46 #"                                             ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"125"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 46 #"                                             ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"125"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 46 #"                                             ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"90"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 46 #"                                             ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"90"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 46 #"                                             ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"90"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 46 #"                                             ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"55"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 46 #"                                             ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"55"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 46 #"                                             ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"55"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 46 #"                                             ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 46 #"                                             ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 46 #"                                             ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 3 #")) "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 5 #"#true"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"launch-world"
0 0 24 3 1 #" "
0 0 14 3 11 #"WORLD3x5-S3"
0 0 24 3 2 #") "
0 0 14 3 11 #"WORLD3x5-S3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 26 #";;pad-left: World -> World"
0 0 24 29 1 #"\n"
0 0 17 3 64
#";;moves the given World's paddle left (bounded by the gameboard)"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"pad-left"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 10 #"world-ball"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 12 #"world-bricks"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 9 #"pad-bound"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 10 #"world-padx"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #") "
0 0 14 3 12 #"PADDLE-SPEED"
0 0 24 3 2 #") "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 10 #"world-rows"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 10 #"world-cols"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 14 #"world-launched"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 11 #"world-lives"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 11 #"world-score"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 8 #"pad-left"
0 0 24 3 1 #" "
0 0 14 3 8 #"WORLD3x5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 10 #"make-world"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 9 #"make-ball"
0 0 24 3 1 #" "
0 0 21 3 3 #"110"
0 0 24 3 1 #" "
0 0 21 3 3 #"187"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"160"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"160"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"160"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"125"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"125"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"125"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"90"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"90"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"90"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"55"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"55"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"55"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 21 3 2 #"90"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 21 3 1 #"3"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 21 3 1 #"3"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 21 3 6 #"#false"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 21 3 1 #"3"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 27 #";;pad-right: World -> World"
0 0 24 29 1 #"\n"
0 0 17 3 65
#";;moves the given World's paddle right (bounded by the gameboard)"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"pad-right"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 10 #"world-ball"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 12 #"world-bricks"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 9 #"pad-bound"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 10 #"world-padx"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #") "
0 0 14 3 12 #"PADDLE-SPEED"
0 0 24 3 2 #") "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 10 #"world-rows"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 10 #"world-cols"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 14 #"world-launched"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 11 #"world-lives"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 11 #"world-score"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"pad-right"
0 0 24 3 1 #" "
0 0 14 3 8 #"WORLD3x5"
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-world"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 9 #"make-ball"
0 0 24 3 1 #" "
0 0 21 3 3 #"110"
0 0 24 3 1 #" "
0 0 21 3 3 #"187"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                     ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"160"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                     ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"160"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                     ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"160"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                     ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"125"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                     ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"125"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                     ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"125"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                     ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"90"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                     ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"90"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                     ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"90"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                     ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"55"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                     ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"55"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                     ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"55"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                     ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                     ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                     ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                    "
0 0 21 3 3 #"110"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                    "
0 0 21 3 1 #"3"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                    "
0 0 21 3 1 #"3"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                    "
0 0 21 3 6 #"#false"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                    "
0 0 21 3 1 #"3"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                    "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";;pad-bound: Number World -> World"
0 0 24 29 1 #"\n"
0 0 17 3 71
(
 #";;keeps the given paddle x value (Number) within the given World's s"
 #"ize"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"pad-bound"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"max"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 3 #"min"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 11 #"image-width"
0 0 24 3 2 #" ("
0 0 14 3 11 #"empty-frame"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 4 #")) ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 12 #"PADDLE-WIDTH"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #")) "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 12 #"PADDLE-WIDTH"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"pad-bound"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 8 #"WORLD3x5"
0 0 24 3 2 #") "
0 0 21 3 2 #"20"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"pad-bound"
0 0 24 3 1 #" "
0 0 21 3 3 #"500"
0 0 24 3 1 #" "
0 0 14 3 8 #"WORLD3x5"
0 0 24 3 2 #") "
0 0 21 3 3 #"200"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 101
(
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
 #";;;;;;;;;;;;;;;;;;;;check expects"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";;handle-above-bricks: World -> World"
0 0 24 29 1 #"\n"
0 0 17 3 68
#";;Prevents the ball of the given World from moving out of the screen"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";;from an upward deflection from a brick"
0 0 24 29 1 #"\n"
0 0 17 3 89
(
 #";;***Note: there was a glitch where the ball gets stuck above the br"
 #"icks, this fixes that"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 19 #"handle-above-bricks"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-ball"
0 0 24 3 2 #" ("
0 0 14 3 6 #"ball-x"
0 0 24 3 2 #" ("
0 0 14 3 10 #"world-ball"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 6 #"ball-y"
0 0 24 3 2 #" ("
0 0 14 3 10 #"world-ball"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #")) "
0 0 21 3 1 #"5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 7 #"ball-vx"
0 0 24 3 2 #" ("
0 0 14 3 10 #"world-ball"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 2 #"-1"
0 0 24 3 2 #" ("
0 0 14 3 7 #"ball-vy"
0 0 24 3 2 #" ("
0 0 14 3 10 #"world-ball"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 12 #"world-bricks"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 10 #"world-padx"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 10 #"world-rows"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 10 #"world-cols"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 14 #"world-launched"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 11 #"world-lives"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 11 #"world-score"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 19 #"handle-above-bricks"
0 0 24 3 1 #" "
0 0 14 3 11 #"WORLD3x5-S4"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 10 #"make-world"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 9 #"make-ball"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 2 #"-5"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"160"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"160"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"160"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"125"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"125"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"125"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"90"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"90"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"90"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"55"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"55"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"55"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 21 3 3 #"100"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 21 3 1 #"3"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 21 3 1 #"3"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 21 3 5 #"#true"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 21 3 1 #"2"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 21 3 2 #"75"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";;won-game/world: World -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 58
#";;Did the user win the game in this current World's state?"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"won-game/world?"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 9 #"won-game?"
0 0 24 3 2 #" ("
0 0 14 3 12 #"world-bricks"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"won-game/world?"
0 0 24 3 1 #" "
0 0 14 3 8 #"WORLD3x5"
0 0 24 3 3 #") ("
0 0 14 3 9 #"won-game?"
0 0 24 3 2 #" ("
0 0 14 3 12 #"world-bricks"
0 0 24 3 1 #" "
0 0 14 3 8 #"WORLD3x5"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 28 #";;won-game?: LoBr -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 78
(
 #";;Did the user get rid of all the bricks in this List (i.e. did the "
 #"user win?)"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"won-game?"
0 0 24 3 1 #" "
0 0 14 3 4 #"lobr"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 4 #"lobr"
0 0 24 3 2 #") "
0 0 21 3 5 #"#true"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 5 #"cons?"
0 0 24 3 1 #" "
0 0 14 3 4 #"lobr"
0 0 24 3 3 #") ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 9 #"bp-health"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 4 #"lobr"
0 0 24 3 3 #")) "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                          "
0 0 21 3 6 #"#false"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 9 #"won-game?"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 4 #"lobr"
0 0 24 3 6 #")))]))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"won-game?"
0 0 24 3 2 #" ("
0 0 14 3 12 #"world-bricks"
0 0 24 3 1 #" "
0 0 14 3 8 #"WORLD3x5"
0 0 24 3 3 #")) "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"won-game?"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 4 #"()) "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 17 3 28 #";;lost-game?: World -> World"
0 0 24 29 1 #"\n"
0 0 17 3 76
(
 #";;Did the user lose all their lives and lose the game in this curren"
 #"t state?"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"lost-game?"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"<="
0 0 24 3 2 #" ("
0 0 14 3 11 #"world-lives"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"lost-game?"
0 0 24 3 1 #" "
0 0 14 3 11 #"WORLD3x5-S5"
0 0 24 3 2 #") "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"lost-game?"
0 0 24 3 1 #" "
0 0 14 3 8 #"WORLD3x5"
0 0 24 3 2 #") "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 26 #";;play-game:World -> World"
0 0 24 29 1 #"\n"
0 0 17 3 91
(
 #";;Updates the Ball and Bricks according to ANY collisions, and also "
 #"updates score and lives"
) 0 0 24 29 1 #"\n"
0 0 17 3 96
(
 #";;behaves differently depending on if the ball is already launched, "
 #"but fuctionality is the same"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"play-game"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 14 #"world-launched"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 10 #"collisions"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 12 #"world-bricks"
0 0 24 3 2 #" ("
0 0 14 3 19 #"ball-brick-interact"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 10 #"world-padx"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 10 #"world-rows"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 10 #"world-cols"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 14 #"world-launched"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 11 #"world-lives"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 12 #"update-score"
0 0 24 3 2 #" ("
0 0 14 3 11 #"world-score"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 10 #"world-ball"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 12 #"world-bricks"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 13 #"lock-ball-pad"
0 0 24 3 2 #" ("
0 0 14 3 10 #"world-ball"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 10 #"world-padx"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 12 #"world-bricks"
0 0 24 3 2 #" ("
0 0 14 3 19 #"ball-brick-interact"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 10 #"world-padx"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 10 #"world-rows"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 10 #"world-cols"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 14 #"world-launched"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 11 #"world-lives"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 11 #"world-score"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"play-game"
0 0 24 3 1 #" "
0 0 14 3 8 #"WORLD3x5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 10 #"make-world"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 9 #"make-ball"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"184"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"160"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"160"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"160"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"125"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"125"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"125"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"90"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"90"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"90"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"55"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"55"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"55"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 21 3 3 #"100"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 21 3 1 #"3"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 21 3 1 #"3"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 21 3 6 #"#false"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 21 3 1 #"3"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"play-game"
0 0 24 3 1 #" "
0 0 14 3 11 #"WORLD3x5-S4"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 10 #"make-world"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 9 #"make-ball"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 2 #"-5"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 2 #"-5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"160"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"160"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"160"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"125"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"125"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"125"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"90"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"90"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"90"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"55"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"55"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"55"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 21 3 3 #"100"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 21 3 1 #"3"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 21 3 1 #"3"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 21 3 5 #"#true"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 21 3 1 #"2"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 21 3 2 #"79"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";;move-ball: Ball -> Ball"
0 0 24 29 1 #"\n"
0 0 17 3 63
#";;update the given Ball's position according to it's velocities"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"move-ball"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 9 #"make-ball"
0 0 24 3 3 #"  ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 6 #"ball-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 3 #") ("
0 0 14 3 7 #"ball-vx"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 6 #"ball-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 3 #") ("
0 0 14 3 7 #"ball-vy"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 7 #"ball-vx"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 3 #") ("
0 0 14 3 7 #"ball-vy"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";;lock-ball-pad: Ball Number -> Ball"
0 0 24 29 1 #"\n"
0 0 17 3 85
(
 #";;moves the ball so that it is locked onto the paddle('s x) as the p"
 #"addle('s x) moves"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"lock-ball-pad"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 9 #"make-ball"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 6 #"HEIGHT"
0 0 24 3 1 #" "
0 0 14 3 13 #"PADDLE-HEIGHT"
0 0 24 3 2 #") "
0 0 14 3 11 #"BALL-RADIUS"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 7 #"ball-vx"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 3 #") ("
0 0 14 3 7 #"ball-vy"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 36 #"#| ----- Collision Handling ----- |#"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 27 #";;collisions: World -> Ball"
0 0 24 29 1 #"\n"
0 0 17 3 58
#";;accordingly re-directs the given World's Ball if it hits"
0 0 24 29 1 #"\n"
0 0 17 3 55 #";;the paddle, the edge of the screen, and/or the bricks"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"collisions"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 14 #"hit-screen-rl?"
0 0 24 3 2 #" ("
0 0 14 3 10 #"world-ball"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 12 #"flip-ball-vx"
0 0 24 3 2 #" ("
0 0 14 3 10 #"world-ball"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 15 #"hit-screen-top?"
0 0 24 3 2 #" ("
0 0 14 3 10 #"world-ball"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 12 #"flip-ball-vy"
0 0 24 3 2 #" ("
0 0 14 3 10 #"world-ball"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 11 #"hit-paddle?"
0 0 24 3 2 #" ("
0 0 14 3 10 #"world-ball"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 10 #"world-padx"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 11 #"launch-ball"
0 0 24 3 2 #" ("
0 0 14 3 10 #"world-ball"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 10 #"world-padx"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 9 #"move-ball"
0 0 24 3 2 #" ("
0 0 14 3 10 #"world-ball"
0 0 24 3 2 #" ("
0 0 14 3 19 #"ball-brick-interact"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 6 #")))]))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"collisions"
0 0 24 3 1 #" "
0 0 14 3 11 #"WORLD3x5-S4"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-ball"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 2 #"-5"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 2 #"-5"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"collisions"
0 0 24 3 1 #" "
0 0 14 3 14 #"WORLD3x5-start"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-ball"
0 0 24 3 1 #" "
0 8          10 21 8 #"1449/13\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 24 3 1 #" "
0 8          10 21 36 #"412702153931796629/2251799813685248\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 24 29 1 #"\n"
0 0 24 3 53 #"                                                     "
0 8          10 21 6 #"19/13\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 24 3 1 #" "
0 8          10 21 35 #"-8384411227344747/2251799813685248\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"collisions"
0 0 24 3 1 #" "
0 0 14 3 10 #"WORLD3x5-S"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-ball"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 21 3 2 #"58"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";(check-expect (collisions WORLD))"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";;hit-screen-rl?: Ball -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 75
(
 #";;Is the given ball hitting the right or left side of the game board"
 #"/screen"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"hit-screen-rl?"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 6 #"ball-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 2 #") "
0 0 14 3 11 #"BALL-RADIUS"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 6 #"ball-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 3 #") ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 5 #"WIDTH"
0 0 24 3 1 #" "
0 0 14 3 11 #"BALL-RADIUS"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";;hit-screen-top?: Ball -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 60
#";;Is the given ball hitting the top of the game board/screen"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"hit-screen-top?"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 6 #"ball-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 2 #") "
0 0 14 3 11 #"BALL-RADIUS"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";;hit-screen-bot?: Ball -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 60
#";;Is the given ball hitting the bot of the game board/screen"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"hit-screen-bot?"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #">="
0 0 24 3 2 #" ("
0 0 14 3 6 #"ball-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 3 #") ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 6 #"HEIGHT"
0 0 24 3 1 #" "
0 0 14 3 11 #"BALL-RADIUS"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"hit-screen-bot?"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-ball"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 14 3 6 #"HEIGHT"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #")) "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"hit-screen-bot?"
0 0 24 3 1 #" "
0 0 14 3 11 #"MIDDLE-BALL"
0 0 24 3 2 #") "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";;hit-paddle?: Ball Number -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 52 #";;Is the given ball hitting the given paddle(Number)"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"hit-paddle?"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #" "
0 0 14 3 2 #"px"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 3 #"abs"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 6 #"ball-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 2 #") "
0 0 14 3 2 #"px"
0 0 24 3 4 #")) ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 12 #"PADDLE-WIDTH"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 6 #"ball-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 3 #") ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 8 #"PADDLE-Y"
0 0 24 3 1 #" "
0 0 14 3 13 #"PADDLE-HEIGHT"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 28 #";;reset-ball: World -> World"
0 0 24 29 1 #"\n"
0 0 17 3 83
(
 #";;puts the ball back on the paddle, and resets the World state to wa"
 #"it for a launch"
) 0 0 24 29 1 #"\n"
0 0 17 3 67
#";;(also decreases lives and penalizes the player's score for dying)"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"reset-ball"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 13 #"lock-ball-pad"
0 0 24 3 2 #" ("
0 0 14 3 10 #"world-ball"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 10 #"world-padx"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 12 #"world-bricks"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 10 #"world-padx"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 10 #"world-rows"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 10 #"world-cols"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #") "
0 0 21 3 6 #"#false"
0 0 24 3 2 #" ("
0 0 14 3 9 #"dec-lives"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 9 #"dec-score"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"reset-ball"
0 0 24 3 1 #" "
0 0 14 3 10 #"WORLD3x5-S"
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-world"
0 0 24 29 1 #"\n"
0 0 24 3 40 #"                                       ("
0 0 14 3 9 #"make-ball"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"184"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 2 #"-4"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 40 #"                                       ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                        ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"160"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                        ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"160"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                        ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"160"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                        ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"125"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                        ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"125"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                        ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"125"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                        ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"90"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                        ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"90"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                        ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"90"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                        ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"55"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                        ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"55"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                        ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"55"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                        ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                        ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                        ("
0 0 14 3 7 #"make-bp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                       "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 6 #"#false"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 2 #"-6"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 27 #";;dec-lives: World -> World"
0 0 24 29 1 #"\n"
0 0 17 3 100
(
 #";;decreases the World's lives if the game is in a playing state (as "
 #"in, not having just won or lost)"
) 0 0 24 29 1 #"\n"
0 0 17 3 45 #";;*Note the number of lives cannot go below 0"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"dec-lives"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 15 #"won-game/world?"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 11 #"world-lives"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 3 #"max"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #" ("
0 0 14 3 4 #"sub1"
0 0 24 3 2 #" ("
0 0 14 3 11 #"world-lives"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 6 #")))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 27 #";;dec-score: World -> World"
0 0 24 29 1 #"\n"
0 0 17 3 100
(
 #";;decreases the World's score if the game is in a playing state (as "
 #"in, not having just won or lost)"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"dec-score"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 15 #"won-game/world?"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 11 #"world-score"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 10 #"lost-game?"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 4 #")) ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 11 #"world-score"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #" ("
0 0 14 3 10 #"world-rows"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 11 #"world-score"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"dec-lives"
0 0 24 3 1 #" "
0 0 14 3 8 #"WORLDWON"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"dec-lives"
0 0 24 3 1 #" "
0 0 14 3 11 #"WORLD3x5-S5"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 28 #";;reset-game: World -> World"
0 0 24 29 1 #"\n"
0 0 17 3 86
(
 #";;resets the entire game to a fresh brick list, score, lives, and a "
 #"new List of Bricks"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"reset-game"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 13 #"lock-ball-pad"
0 0 24 3 2 #" ("
0 0 14 3 10 #"world-ball"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 5 #"WIDTH"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 9 #"make-lobr"
0 0 24 3 2 #" ("
0 0 14 3 10 #"world-cols"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 10 #"world-rows"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 5 #"WIDTH"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #") ("
0 0 14 3 10 #"world-rows"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 10 #"world-cols"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #") "
0 0 21 3 6 #"#false"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"dec-score"
0 0 24 3 1 #" "
0 0 14 3 8 #"WORLDWON"
0 0 24 3 2 #") "
0 0 21 3 2 #"75"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 31 #"#| --- Utility Functions --- |#"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 28 #";;flip-ball-vx: Ball -> Ball"
0 0 24 29 1 #"\n"
0 0 17 3 42 #";;negates the x-velocity of the given ball"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"flip-ball-vx"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 9 #"move-ball"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-ball"
0 0 24 3 2 #" ("
0 0 14 3 6 #"ball-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 2 #")("
0 0 14 3 6 #"ball-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 2 #"-1"
0 0 24 3 2 #" ("
0 0 14 3 7 #"ball-vx"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 7 #"ball-vy"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 28 #";;flip-ball-vy: Ball -> Ball"
0 0 24 29 1 #"\n"
0 0 17 3 42 #";;negates the y-velocity of the given ball"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"flip-ball-vy"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 9 #"move-ball"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-ball"
0 0 24 3 2 #" ("
0 0 14 3 6 #"ball-x"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 2 #")("
0 0 14 3 6 #"ball-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 7 #"ball-vx"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 2 #"-1"
0 0 24 3 2 #" ("
0 0 14 3 7 #"ball-vy"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";;bound: Number Number Number -> Number"
0 0 24 29 1 #"\n"
0 0 17 3 90
(
 #";;If the 2nd Number is not in between the other 2, it is set to the "
 #"boundary that it broke"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 5 #"bound"
0 0 24 3 1 #" "
0 0 14 3 2 #"mi"
0 0 24 3 1 #" "
0 0 14 3 3 #"val"
0 0 24 3 1 #" "
0 0 14 3 2 #"ma"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"min"
0 0 24 3 2 #" ("
0 0 14 3 3 #"max"
0 0 24 3 1 #" "
0 0 14 3 2 #"mi"
0 0 24 3 1 #" "
0 0 14 3 3 #"val"
0 0 24 3 2 #") "
0 0 14 3 2 #"ma"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 5 #"bound"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 5 #"bound"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 5 #"bound"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";;in-range?: Number Number Number"
0 0 24 29 1 #"\n"
0 0 17 3 54 #";;Is the second number in between the other 2 numbers?"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"in-range?"
0 0 24 3 1 #" "
0 0 14 3 6 #"bound1"
0 0 24 3 1 #" "
0 0 14 3 3 #"num"
0 0 24 3 1 #" "
0 0 14 3 6 #"bound2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 1 #">"
0 0 24 3 1 #" "
0 0 14 3 3 #"num"
0 0 24 3 2 #" ("
0 0 14 3 3 #"min"
0 0 24 3 1 #" "
0 0 14 3 6 #"bound1"
0 0 24 3 1 #" "
0 0 14 3 6 #"bound2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 3 #"num"
0 0 24 3 2 #" ("
0 0 14 3 3 #"max"
0 0 24 3 1 #" "
0 0 14 3 6 #"bound1"
0 0 24 3 1 #" "
0 0 14 3 6 #"bound2"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 36 #"#| ----- Big-Bang Functions ----- |#"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 27 #";;draw-game: World -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";;Draws one of the following:"
0 0 24 29 1 #"\n"
0 0 17 3 26 #"; - An end of game message"
0 0 24 29 1 #"\n"
0 0 17 3 50 #"; - The Ball ontop of the rest of the World images"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"draw-game"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 9 #"won-game?"
0 0 24 3 2 #" ("
0 0 14 3 12 #"world-bricks"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 4 #")) ("
0 0 14 3 10 #"play-ended"
0 0 24 3 2 #" ("
0 0 14 3 10 #"reset-ball"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #") "
0 0 21 3 2 #"#t"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 10 #"lost-game?"
0 0 24 3 2 #"  "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 10 #"play-ended"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 11 #"place-image"
0 0 24 3 1 #" "
0 0 14 3 8 #"BALL-IMG"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 6 #"ball-x"
0 0 24 3 2 #" ("
0 0 14 3 10 #"world-ball"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 6 #"ball-y"
0 0 24 3 2 #" ("
0 0 14 3 10 #"world-ball"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 9 #"gameboard"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 5 #"))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";;update-ball: World -> World"
0 0 24 29 1 #"\n"
0 0 17 3 91
(
 #";;The on-tick function: a collection of the most general functionali"
 #"ties of the entire game"
) 0 0 24 29 1 #"\n"
0 0 17 3 40 #";;updates the entire game every tick, OR"
0 0 24 29 1 #"\n"
0 0 17 3 65
#";;keeps the game from going if the player has run out of lives OR"
0 0 24 29 1 #"\n"
0 0 17 3 47 #";;resets the ball if the ball hit the bottom OR"
0 0 24 29 1 #"\n"
0 0 17 3 65
#";;handles a glitch found when the ball hits the top of the screen"
0 0 24 29 1 #"\n"
0 0 17 3 43 #";;    (see the handle-above-bricks function"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"update-ball"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 2 #"<="
0 0 24 3 2 #" ("
0 0 14 3 11 #"world-lives"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 10 #"reset-ball"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 15 #"hit-screen-bot?"
0 0 24 3 2 #" ("
0 0 14 3 10 #"world-ball"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 4 #")) ("
0 0 14 3 10 #"reset-ball"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 15 #"hit-screen-top?"
0 0 24 3 2 #" ("
0 0 14 3 10 #"world-ball"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 4 #")) ("
0 0 14 3 9 #"play-game"
0 0 24 3 2 #" ("
0 0 14 3 19 #"handle-above-bricks"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 9 #"play-game"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";;update-paddle: World KeyEvent -> World"
0 0 24 29 1 #"\n"
0 0 17 3 65
#";;moves the paddle, launches the ball from the paddle, and resets"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";; the game according to the key presses"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"update-paddle"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #" "
0 0 14 3 3 #"key"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 5 #"key=?"
0 0 24 3 1 #" "
0 0 14 3 3 #"key"
0 0 24 3 1 #" "
0 0 19 3 3 #"\" \""
0 0 24 3 3 #") ("
0 0 14 3 12 #"launch-world"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 5 #"key=?"
0 0 24 3 1 #" "
0 0 14 3 3 #"key"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"left\""
0 0 24 3 3 #") ("
0 0 14 3 8 #"pad-left"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 5 #"key=?"
0 0 24 3 1 #" "
0 0 14 3 3 #"key"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"right\""
0 0 24 3 3 #") ("
0 0 14 3 9 #"pad-right"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 5 #"key=?"
0 0 24 3 1 #" "
0 0 14 3 3 #"key"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"r\""
0 0 24 3 3 #") ("
0 0 14 3 14 #"repeat-request"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"update-paddle"
0 0 24 3 1 #" "
0 0 14 3 8 #"WORLD3x5"
0 0 24 3 1 #" "
0 0 19 3 3 #"\" \""
0 0 24 3 3 #") ("
0 0 14 3 12 #"launch-world"
0 0 24 3 1 #" "
0 0 14 3 8 #"WORLD3x5"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"update-paddle"
0 0 24 3 1 #" "
0 0 14 3 8 #"WORLD3x5"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"left\""
0 0 24 3 3 #") ("
0 0 14 3 8 #"pad-left"
0 0 24 3 1 #" "
0 0 14 3 8 #"WORLD3x5"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"update-paddle"
0 0 24 3 1 #" "
0 0 14 3 8 #"WORLD3x5"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"right\""
0 0 24 3 3 #") ("
0 0 14 3 9 #"pad-right"
0 0 24 3 1 #" "
0 0 14 3 8 #"WORLD3x5"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"update-paddle"
0 0 24 3 1 #" "
0 0 14 3 8 #"WORLD3x5"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"r\""
0 0 24 3 3 #") ("
0 0 14 3 14 #"repeat-request"
0 0 24 3 1 #" "
0 0 14 3 8 #"WORLD3x5"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"update-paddle"
0 0 24 3 1 #" "
0 0 14 3 8 #"WORLD3x5"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"q\""
0 0 24 3 2 #") "
0 0 14 3 8 #"WORLD3x5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 33 #"#| --- Running the Universe--- |#"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 62
#";;All possible Worlds that can be sent to the big-bang runner:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"WORLD1x1"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 14 3 12 #"INITIAL-BALL"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-lobr"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 6 #"#false"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"WORLD2x2"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 14 3 12 #"INITIAL-BALL"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-lobr"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 6 #"#false"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"WORLD2x3"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 14 3 12 #"INITIAL-BALL"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-lobr"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #") "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 6 #"#false"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"WORLD3x3"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 14 3 12 #"INITIAL-BALL"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-lobr"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #") "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 6 #"#false"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"WORLD3x5"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 14 3 12 #"INITIAL-BALL"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-lobr"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #") "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 6 #"#false"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"WORLD3x6"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 14 3 12 #"INITIAL-BALL"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-lobr"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #") "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 6 #"#false"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"WORLD5x5"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 14 3 12 #"INITIAL-BALL"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-lobr"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #") "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 6 #"#false"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"WORLD5x6"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 14 3 12 #"INITIAL-BALL"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-lobr"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #") "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 6 #"#false"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"WORLD6x6"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 14 3 12 #"INITIAL-BALL"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-lobr"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 2 #") "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 6 #"#false"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";;breakout:"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";;Run the big-bang of the Breakout game"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"breakout"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 8 #"big-bang"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 7 #"to-draw"
0 0 24 3 1 #" "
0 0 14 3 9 #"draw-game"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 7 #"on-tick"
0 0 24 3 1 #" "
0 0 14 3 11 #"update-ball"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 6 #"on-key"
0 0 24 3 1 #" "
0 0 14 3 13 #"update-paddle"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 41 #"#| ----------- For Testing ----------- |#"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"WORLD3x5-S"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 14 3 11 #"MIDDLE-BALL"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-lobr"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #") "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 6 #"#false"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"WORLD3x5-S2"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 14 3 11 #"MIDDLE-BALL"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-lobr"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #") "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 6 #"#false"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 2 #"75"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"WORLD3x5-S3"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 14 3 11 #"MIDDLE-BALL"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-lobr"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #") "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 5 #"#true"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 2 #"75"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"WORLD3x5-S4"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-ball"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 2 #"-5"
0 0 24 3 1 #" "
0 0 21 3 2 #"-5"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-lobr"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #") "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 5 #"#true"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 2 #"75"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"WORLD3x5-S5"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 14 3 11 #"MIDDLE-BALL"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-lobr"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #") "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 5 #"#true"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 2 #"75"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 14 #"WORLD3x5-start"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 14 3 12 #"INITIAL-BALL"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-lobr"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #") "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 5 #"#true"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"WORLDWON"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 14 3 11 #"MIDDLE-BALL"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 5 #"#true"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 2 #"75"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"FRAME5x5"
0 0 24 3 2 #" ("
0 0 14 3 11 #"empty-frame"
0 0 24 3 1 #" "
0 0 14 3 8 #"WORLD5x5"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"FRAME2x3"
0 0 24 3 2 #" ("
0 0 14 3 11 #"empty-frame"
0 0 24 3 1 #" "
0 0 14 3 8 #"WORLD2x3"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"FRAME6x6"
0 0 24 3 2 #" ("
0 0 14 3 11 #"empty-frame"
0 0 24 3 1 #" "
0 0 14 3 8 #"WORLD6x6"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0           0
